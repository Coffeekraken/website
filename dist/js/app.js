/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	// main application entry point
	__webpack_require__(1);
	__webpack_require__(51);
	__webpack_require__(52);
	__webpack_require__(167);

	window.addEventListener('scroll', function (e) {
		if (document.body.scrollTop > 300) {
			document.body.classList.add('scrolled');
		} else {
			document.body.classList.remove('scrolled');
		}
	});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var _vue = __webpack_require__(2);

	var _vue2 = _interopRequireDefault(_vue);

	var _githubApi = __webpack_require__(3);

	var _githubApi2 = _interopRequireDefault(_githubApi);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// check if we have already some repos in the localstorage
	var localRepos = localStorage.getItem('coffeekraken-repos');
	if (localRepos) {
		localRepos = JSON.parse(localRepos);
		// check time
		if (localRepos.timestamp < new Date().getTime() - 3600 * 24 * 1000) {
			// fetch new repos
			fetchRepos();
		} else {
			// display repos
			displayRepos(localRepos.repos);
		}
	} else {
		fetchRepos();
	}

	function fetchRepos() {
		var token = 'd27c9ea77d47fd90da48720ebe98277a519ba262';
		var github = new _githubApi2.default({
			user: "olivierbossel",
			token: token.split('').reverse().join('')
		});
		var user = github.getUser();
		user.listRepos({}, function (err, repos) {
			if (!repos) return;
			// filter repos
			var coffeeRepos = repos.filter(function (repo) {
				return repo.owner.login === 'Coffeekraken';
			});
			// save into localstorage
			localStorage.setItem('coffeekraken-repos', JSON.stringify({
				timestamp: new Date().getTime(),
				repos: coffeeRepos
			}));
			// display repos
			displayRepos(coffeeRepos);
		}, function () {});
	}

	// display repos
	function displayRepos(repos) {
		// new Vue component
		_vue2.default.component('coffeekraken-repos', {
			template: '\n\t\t\t<ul class="nav nav--pills">\n\t\t\t\t<li class="nav__item" v-for="repo in repos">\n\t\t\t\t\t<a :href="repo.html_url" :title="repo.name" target="_blank">\n\t\t\t\t\t\t<span class="pill" :class="{ \'pill--secondary\' : repo.name.substr(0,2) === \'s-\' }">\n\t\t\t\t\t\t\t{{repo.name}}\n\t\t\t\t\t\t\t<div class="tooltip tooltip--t tf t-center">\n\t\t\t\t\t\t\t\t{{repo.description}}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t',
			data: function data() {
				return {
					repos: repos
				};
			}
		});

		// new Vue
		new _vue2.default({
			el: document.querySelector('[vue-coffeekraken-repos]')
		});
	}

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * Vue.js v2.2.6
	 * (c) 2014-2017 Evan You
	 * Released under the MIT License.
	 */
	!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Vue=t()}(this,function(){"use strict";function e(e){return null==e?"":"object"==typeof e?JSON.stringify(e,null,2):String(e)}function t(e){var t=parseFloat(e);return isNaN(t)?e:t}function n(e,t){for(var n=Object.create(null),r=e.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}function r(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}function i(e,t){return $i.call(e,t)}function o(e){return"string"==typeof e||"number"==typeof e}function a(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}function s(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n}function c(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function u(e,t){for(var n in t)e[n]=t[n];return e}function l(e){return null!==e&&"object"==typeof e}function f(e){return ki.call(e)===Ai}function p(e){for(var t={},n=0;n<e.length;n++)e[n]&&u(t,e[n]);return t}function d(){}function v(e,t){var n=l(e),r=l(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{return JSON.stringify(e)===JSON.stringify(t)}catch(n){return e===t}}function h(e,t){for(var n=0;n<e.length;n++)if(v(e[n],t))return n;return-1}function m(e){var t=!1;return function(){t||(t=!0,e())}}function g(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function y(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}function _(e){if(!ji.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}function b(e){return/native code/.test(e.toString())}function $(e){qi.target&&Wi.push(qi.target),qi.target=e}function w(){qi.target=Wi.pop()}function x(e,t){e.__proto__=t}function C(e,t,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];y(e,o,t[o])}}function k(e,t){if(l(e)){var n;return i(e,"__ob__")&&e.__ob__ instanceof Xi?n=e.__ob__:Qi.shouldConvert&&!Ui()&&(Array.isArray(e)||f(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Xi(e)),t&&n&&n.vmCount++,n}}function A(e,t,n,r){var i=new qi,o=Object.getOwnPropertyDescriptor(e,t);if(!o||o.configurable!==!1){var a=o&&o.get,s=o&&o.set,c=k(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=a?a.call(e):n;return qi.target&&(i.depend(),c&&c.dep.depend(),Array.isArray(t)&&S(t)),t},set:function(t){var r=a?a.call(e):n;t===r||t!==t&&r!==r||(s?s.call(e,t):n=t,c=k(t),i.notify())}})}}function O(e,t,n){if(Array.isArray(e)&&"number"==typeof t)return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(i(e,t))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(A(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function T(e,t){if(Array.isArray(e)&&"number"==typeof t)return void e.splice(t,1);var n=e.__ob__;e._isVue||n&&n.vmCount||i(e,t)&&(delete e[t],n&&n.dep.notify())}function S(e){for(var t=void 0,n=0,r=e.length;n<r;n++)t=e[n],t&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&S(t)}function E(e,t){if(!t)return e;for(var n,r,o,a=Object.keys(t),s=0;s<a.length;s++)n=a[s],r=e[n],o=t[n],i(e,n)?f(r)&&f(o)&&E(r,o):O(e,n,o);return e}function j(e,t){return t?e?e.concat(t):Array.isArray(t)?t:[t]:e}function N(e,t){var n=Object.create(e||null);return t?u(n,t):n}function I(e){var t=e.props;if(t){var n,r,i,o={};if(Array.isArray(t))for(n=t.length;n--;)"string"==typeof(r=t[n])&&(i=wi(r),o[i]={type:null});else if(f(t))for(var a in t)r=t[a],i=wi(a),o[i]=f(r)?r:{type:r};e.props=o}}function L(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}function D(e,t,n){function r(r){var i=eo[r]||to;l[r]=i(e[r],t[r],n,r)}I(t),L(t);var o=t.extends;if(o&&(e="function"==typeof o?D(e,o.options,n):D(e,o,n)),t.mixins)for(var a=0,s=t.mixins.length;a<s;a++){var c=t.mixins[a];c.prototype instanceof nt&&(c=c.options),e=D(e,c,n)}var u,l={};for(u in e)r(u);for(u in t)i(e,u)||r(u);return l}function M(e,t,n,r){if("string"==typeof n){var o=e[t];if(i(o,n))return o[n];var a=wi(n);if(i(o,a))return o[a];var s=xi(a);if(i(o,s))return o[s];var c=o[n]||o[a]||o[s];return c}}function P(e,t,n,r){var o=t[e],a=!i(n,e),s=n[e];if(H(Boolean,o.type)&&(a&&!i(o,"default")?s=!1:H(String,o.type)||""!==s&&s!==Ci(e)||(s=!0)),void 0===s){s=R(r,o,e);var c=Qi.shouldConvert;Qi.shouldConvert=!0,k(s),Qi.shouldConvert=c}return s}function R(e,t,n){if(i(t,"default")){var r=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:"function"==typeof r&&"Function"!==F(t.type)?r.call(e):r}}function F(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t&&t[1]}function H(e,t){if(!Array.isArray(t))return F(t)===F(e);for(var n=0,r=t.length;n<r;n++)if(F(t[n])===F(e))return!0;return!1}function U(e,t,n){if(Si.errorHandler)Si.errorHandler.call(null,e,t,n);else{if(!Ii||"undefined"==typeof console)throw e;console.error(e)}}function B(e){return new no(void 0,void 0,void 0,String(e))}function V(e){var t=new no(e.tag,e.data,e.children,e.text,e.elm,e.context,e.componentOptions);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isCloned=!0,t}function z(e){for(var t=e.length,n=new Array(t),r=0;r<t;r++)n[r]=V(e[r]);return n}function J(e){function t(){var e=arguments,n=t.fns;if(!Array.isArray(n))return n.apply(null,arguments);for(var r=0;r<n.length;r++)n[r].apply(null,e)}return t.fns=e,t}function K(e,t,n,r,i){var o,a,s,c;for(o in e)a=e[o],s=t[o],c=ao(o),a&&(s?a!==s&&(s.fns=a,e[o]=s):(a.fns||(a=e[o]=J(a)),n(c.name,a,c.once,c.capture)));for(o in t)e[o]||(c=ao(o),r(c.name,t[o],c.capture))}function q(e,t,n){function i(){n.apply(this,arguments),r(o.fns,i)}var o,a=e[t];a?a.fns&&a.merged?(o=a,o.fns.push(i)):o=J([a,i]):o=J([i]),o.merged=!0,e[t]=o}function W(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}function Z(e){return o(e)?[B(e)]:Array.isArray(e)?G(e):void 0}function G(e,t){var n,r,i,a=[];for(n=0;n<e.length;n++)null!=(r=e[n])&&"boolean"!=typeof r&&(i=a[a.length-1],Array.isArray(r)?a.push.apply(a,G(r,(t||"")+"_"+n)):o(r)?i&&i.text?i.text+=String(r):""!==r&&a.push(B(r)):r.text&&i&&i.text?a[a.length-1]=B(i.text+r.text):(r.tag&&null==r.key&&null!=t&&(r.key="__vlist"+t+"_"+n+"__"),a.push(r)));return a}function Y(e){return e&&e.filter(function(e){return e&&e.componentOptions})[0]}function Q(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&te(e,t)}function X(e,t,n){n?io.$once(e,t):io.$on(e,t)}function ee(e,t){io.$off(e,t)}function te(e,t,n){io=e,K(t,n||{},X,ee,e)}function ne(e,t){var n={};if(!e)return n;for(var r,i,o=[],a=0,s=e.length;a<s;a++)if(i=e[a],(i.context===t||i.functionalContext===t)&&i.data&&(r=i.data.slot)){var c=n[r]||(n[r]=[]);"template"===i.tag?c.push.apply(c,i.children):c.push(i)}else o.push(i);return o.every(re)||(n.default=o),n}function re(e){return e.isComment||" "===e.text}function ie(e){for(var t={},n=0;n<e.length;n++)t[e[n][0]]=e[n][1];return t}function oe(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}function ae(e,t,n){e.$el=t,e.$options.render||(e.$options.render=oo),fe(e,"beforeMount");var r;return r=function(){e._update(e._render(),n)},e._watcher=new ho(e,r,d),n=!1,null==e.$vnode&&(e._isMounted=!0,fe(e,"mounted")),e}function se(e,t,n,r,i){var o=!!(i||e.$options._renderChildren||r.data.scopedSlots||e.$scopedSlots!==Ei);if(e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r),e.$options._renderChildren=i,t&&e.$options.props){Qi.shouldConvert=!1;for(var a=e._props,s=e.$options._propKeys||[],c=0;c<s.length;c++){var u=s[c];a[u]=P(u,e.$options.props,t,e)}Qi.shouldConvert=!0,e.$options.propsData=t}if(n){var l=e.$options._parentListeners;e.$options._parentListeners=n,te(e,n,l)}o&&(e.$slots=ne(i,r.context),e.$forceUpdate())}function ce(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function ue(e,t){if(t){if(e._directInactive=!1,ce(e))return}else if(e._directInactive)return;if(e._inactive||null==e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)ue(e.$children[n]);fe(e,"activated")}}function le(e,t){if(!(t&&(e._directInactive=!0,ce(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)le(e.$children[n]);fe(e,"deactivated")}}function fe(e,t){var n=e.$options[t];if(n)for(var r=0,i=n.length;r<i;r++)try{n[r].call(e)}catch(n){U(n,e,t+" hook")}e._hasHookEvent&&e.$emit("hook:"+t)}function pe(){co.length=0,uo={},lo=fo=!1}function de(){fo=!0;var e,t,n;for(co.sort(function(e,t){return e.id-t.id}),po=0;po<co.length;po++)e=co[po],t=e.id,uo[t]=null,e.run();var r=co.slice();for(pe(),po=r.length;po--;)e=r[po],n=e.vm,n._watcher===e&&n._isMounted&&fe(n,"updated");Bi&&Si.devtools&&Bi.emit("flush")}function ve(e){var t=e.id;if(null==uo[t]){if(uo[t]=!0,fo){for(var n=co.length-1;n>=0&&co[n].id>e.id;)n--;co.splice(Math.max(n,po)+1,0,e)}else co.push(e);lo||(lo=!0,zi(de))}}function he(e){mo.clear(),me(e,mo)}function me(e,t){var n,r,i=Array.isArray(e);if((i||l(e))&&Object.isExtensible(e)){if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(i)for(n=e.length;n--;)me(e[n],t);else for(r=Object.keys(e),n=r.length;n--;)me(e[r[n]],t)}}function ge(e,t,n){go.get=function(){return this[t][n]},go.set=function(e){this[t][n]=e},Object.defineProperty(e,n,go)}function ye(e){e._watchers=[];var t=e.$options;t.props&&_e(e,t.props),t.methods&&ke(e,t.methods),t.data?be(e):k(e._data={},!0),t.computed&&we(e,t.computed),t.watch&&Ae(e,t.watch)}function _e(e,t){var n=e.$options.propsData||{},r=e._props={},i=e.$options._propKeys=[],o=!e.$parent;Qi.shouldConvert=o;for(var a in t)!function(o){i.push(o);var a=P(o,t,n,e);A(r,o,a),o in e||ge(e,"_props",o)}(a);Qi.shouldConvert=!0}function be(e){var t=e.$options.data;t=e._data="function"==typeof t?$e(t,e):t||{},f(t)||(t={});for(var n=Object.keys(t),r=e.$options.props,o=n.length;o--;)r&&i(r,n[o])||g(n[o])||ge(e,"_data",n[o]);k(t,!0)}function $e(e,t){try{return e.call(t)}catch(e){return U(e,t,"data()"),{}}}function we(e,t){var n=e._computedWatchers=Object.create(null);for(var r in t){var i=t[r],o="function"==typeof i?i:i.get;n[r]=new ho(e,o,d,yo),r in e||xe(e,r,i)}}function xe(e,t,n){"function"==typeof n?(go.get=Ce(t),go.set=d):(go.get=n.get?n.cache!==!1?Ce(t):n.get:d,go.set=n.set?n.set:d),Object.defineProperty(e,t,go)}function Ce(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),qi.target&&t.depend(),t.value}}function ke(e,t){e.$options.props;for(var n in t)e[n]=null==t[n]?d:s(t[n],e)}function Ae(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)Oe(e,n,r[i]);else Oe(e,n,r)}}function Oe(e,t,n){var r;f(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}function Te(e,t,n,r,i){if(e){var o=n.$options._base;if(l(e)&&(e=o.extend(e)),"function"==typeof e){if(!e.cid)if(e.resolved)e=e.resolved;else if(!(e=je(e,o,function(){n.$forceUpdate()})))return;Xe(e),t=t||{},t.model&&Me(e.options,t);var a=Ne(t,e,i);if(e.options.functional)return Se(e,a,t,n,r);var s=t.on;t.on=t.nativeOn,e.options.abstract&&(t={}),Le(t);var c=e.options.name||i;return new no("vue-component-"+e.cid+(c?"-"+c:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:a,listeners:s,tag:i,children:r})}}}function Se(e,t,n,r,i){var o={},a=e.options.props;if(a)for(var s in a)o[s]=P(s,a,t);var c=Object.create(r),u=function(e,t,n,r){return Pe(c,e,t,n,r,!0)},l=e.options.render.call(null,u,{props:o,data:n,parent:r,children:i,slots:function(){return ne(i,r)}});return l instanceof no&&(l.functionalContext=r,n.slot&&((l.data||(l.data={})).slot=n.slot)),l}function Ee(e,t,n,r){var i=e.componentOptions,o={_isComponent:!0,parent:t,propsData:i.propsData,_componentTag:i.tag,_parentVnode:e,_parentListeners:i.listeners,_renderChildren:i.children,_parentElm:n||null,_refElm:r||null},a=e.data.inlineTemplate;return a&&(o.render=a.render,o.staticRenderFns=a.staticRenderFns),new i.Ctor(o)}function je(e,t,n){if(!e.requested){e.requested=!0;var r=e.pendingCallbacks=[n],i=!0,o=function(n){if(l(n)&&(n=t.extend(n)),e.resolved=n,!i)for(var o=0,a=r.length;o<a;o++)r[o](n)},a=function(e){},s=e(o,a);return s&&"function"==typeof s.then&&!e.resolved&&s.then(o,a),i=!1,e.resolved}e.pendingCallbacks.push(n)}function Ne(e,t,n){var r=t.options.props;if(r){var i={},o=e.attrs,a=e.props,s=e.domProps;if(o||a||s)for(var c in r){var u=Ci(c);Ie(i,a,c,u,!0)||Ie(i,o,c,u)||Ie(i,s,c,u)}return i}}function Ie(e,t,n,r,o){if(t){if(i(t,n))return e[n]=t[n],o||delete t[n],!0;if(i(t,r))return e[n]=t[r],o||delete t[r],!0}return!1}function Le(e){e.hook||(e.hook={});for(var t=0;t<bo.length;t++){var n=bo[t],r=e.hook[n],i=_o[n];e.hook[n]=r?De(i,r):i}}function De(e,t){return function(n,r,i,o){e(n,r,i,o),t(n,r,i,o)}}function Me(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.props||(t.props={}))[n]=t.model.value;var i=t.on||(t.on={});i[r]?i[r]=[t.model.callback].concat(i[r]):i[r]=t.model.callback}function Pe(e,t,n,r,i,a){return(Array.isArray(n)||o(n))&&(i=r,r=n,n=void 0),a&&(i=wo),Re(e,t,n,r,i)}function Re(e,t,n,r,i){if(n&&n.__ob__)return oo();if(!t)return oo();Array.isArray(r)&&"function"==typeof r[0]&&(n=n||{},n.scopedSlots={default:r[0]},r.length=0),i===wo?r=Z(r):i===$o&&(r=W(r));var o,a;if("string"==typeof t){var s;a=Si.getTagNamespace(t),o=Si.isReservedTag(t)?new no(Si.parsePlatformTagName(t),n,r,void 0,void 0,e):(s=M(e.$options,"components",t))?Te(s,n,e,r,t):new no(t,n,r,void 0,void 0,e)}else o=Te(t,n,e,r);return o?(a&&Fe(o,a),o):oo()}function Fe(e,t){if(e.ns=t,"foreignObject"!==e.tag&&e.children)for(var n=0,r=e.children.length;n<r;n++){var i=e.children[n];i.tag&&!i.ns&&Fe(i,t)}}function He(e,t){var n,r,i,o,a;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,i=e.length;r<i;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(l(e))for(o=Object.keys(e),n=new Array(o.length),r=0,i=o.length;r<i;r++)a=o[r],n[r]=t(e[a],a,r);return n}function Ue(e,t,n,r){var i=this.$scopedSlots[e];if(i)return n=n||{},r&&u(n,r),i(n)||t;var o=this.$slots[e];return o||t}function Be(e){return M(this.$options,"filters",e,!0)||Ti}function Ve(e,t,n){var r=Si.keyCodes[t]||n;return Array.isArray(r)?r.indexOf(e)===-1:r!==e}function ze(e,t,n,r){if(n)if(l(n)){Array.isArray(n)&&(n=p(n));var i;for(var o in n){if("class"===o||"style"===o)i=e;else{var a=e.attrs&&e.attrs.type;i=r||Si.mustUseProp(t,a,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}o in i||(i[o]=n[o])}}else;return e}function Je(e,t){var n=this._staticTrees[e];return n&&!t?Array.isArray(n)?z(n):V(n):(n=this._staticTrees[e]=this.$options.staticRenderFns[e].call(this._renderProxy),qe(n,"__static__"+e,!1),n)}function Ke(e,t,n){return qe(e,"__once__"+t+(n?"_"+n:""),!0),e}function qe(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&We(e[r],t+"_"+r,n);else We(e,t,n)}function We(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Ze(e){e.$vnode=null,e._vnode=null,e._staticTrees=null;var t=e.$options._parentVnode,n=t&&t.context;e.$slots=ne(e.$options._renderChildren,n),e.$scopedSlots=Ei,e._c=function(t,n,r,i){return Pe(e,t,n,r,i,!1)},e.$createElement=function(t,n,r,i){return Pe(e,t,n,r,i,!0)}}function Ge(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}function Ye(e){var t=e.$options.inject;if(t)for(var n=Array.isArray(t),r=n?t:Vi?Reflect.ownKeys(t):Object.keys(t),i=0;i<r.length;i++)!function(i){for(var o=r[i],a=n?o:t[o],s=e;s;){if(s._provided&&a in s._provided){A(e,o,s._provided[a]);break}s=s.$parent}}(i)}function Qe(e,t){var n=e.$options=Object.create(e.constructor.options);n.parent=t.parent,n.propsData=t.propsData,n._parentVnode=t._parentVnode,n._parentListeners=t._parentListeners,n._renderChildren=t._renderChildren,n._componentTag=t._componentTag,n._parentElm=t._parentElm,n._refElm=t._refElm,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}function Xe(e){var t=e.options;if(e.super){var n=Xe(e.super);if(n!==e.superOptions){e.superOptions=n;var r=et(e);r&&u(e.extendOptions,r),t=e.options=D(n,e.extendOptions),t.name&&(t.components[t.name]=e)}}return t}function et(e){var t,n=e.options,r=e.sealedOptions;for(var i in n)n[i]!==r[i]&&(t||(t={}),t[i]=tt(n[i],r[i]));return t}function tt(e,t){if(Array.isArray(e)){var n=[];t=Array.isArray(t)?t:[t];for(var r=0;r<e.length;r++)t.indexOf(e[r])<0&&n.push(e[r]);return n}return e}function nt(e){this._init(e)}function rt(e){e.use=function(e){if(!e.installed){var t=c(arguments,1);return t.unshift(this),"function"==typeof e.install?e.install.apply(e,t):"function"==typeof e&&e.apply(null,t),e.installed=!0,this}}}function it(e){e.mixin=function(e){this.options=D(this.options,e)}}function ot(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var o=e.name||n.options.name,a=function(e){this._init(e)};return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.cid=t++,a.options=D(n.options,e),a.super=n,a.options.props&&at(a),a.options.computed&&st(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,Si._assetTypes.forEach(function(e){a[e]=n[e]}),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=u({},a.options),i[r]=a,a}}function at(e){var t=e.options.props;for(var n in t)ge(e.prototype,"_props",n)}function st(e){var t=e.options.computed;for(var n in t)xe(e.prototype,n,t[n])}function ct(e){Si._assetTypes.forEach(function(t){e[t]=function(e,n){return n?("component"===t&&f(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}})}function ut(e){return e&&(e.Ctor.options.name||e.tag)}function lt(e,t){return"string"==typeof e?e.split(",").indexOf(t)>-1:e instanceof RegExp&&e.test(t)}function ft(e,t){for(var n in e){var r=e[n];if(r){var i=ut(r.componentOptions);i&&!t(i)&&(pt(r),e[n]=null)}}}function pt(e){e&&(e.componentInstance._inactive||fe(e.componentInstance,"deactivated"),e.componentInstance.$destroy())}function dt(e){for(var t=e.data,n=e,r=e;r.componentInstance;)r=r.componentInstance._vnode,r.data&&(t=vt(r.data,t));for(;n=n.parent;)n.data&&(t=vt(t,n.data));return ht(t)}function vt(e,t){return{staticClass:mt(e.staticClass,t.staticClass),class:e.class?[e.class,t.class]:t.class}}function ht(e){var t=e.class,n=e.staticClass;return n||t?mt(n,gt(t)):""}function mt(e,t){return e?t?e+" "+t:e:t||""}function gt(e){var t="";if(!e)return t;if("string"==typeof e)return e;if(Array.isArray(e)){for(var n,r=0,i=e.length;r<i;r++)e[r]&&(n=gt(e[r]))&&(t+=n+" ");return t.slice(0,-1)}if(l(e)){for(var o in e)e[o]&&(t+=o+" ");return t.slice(0,-1)}return t}function yt(e){return Ko(e)?"svg":"math"===e?"math":void 0}function _t(e){if(!Ii)return!0;if(Wo(e))return!1;if(e=e.toLowerCase(),null!=Zo[e])return Zo[e];var t=document.createElement(e);return e.indexOf("-")>-1?Zo[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Zo[e]=/HTMLUnknownElement/.test(t.toString())}function bt(e){if("string"==typeof e){var t=document.querySelector(e);return t?t:document.createElement("div")}return e}function $t(e,t){var n=document.createElement(e);return"select"!==e?n:(t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n)}function wt(e,t){return document.createElementNS(zo[e],t)}function xt(e){return document.createTextNode(e)}function Ct(e){return document.createComment(e)}function kt(e,t,n){e.insertBefore(t,n)}function At(e,t){e.removeChild(t)}function Ot(e,t){e.appendChild(t)}function Tt(e){return e.parentNode}function St(e){return e.nextSibling}function Et(e){return e.tagName}function jt(e,t){e.textContent=t}function Nt(e,t,n){e.setAttribute(t,n)}function It(e,t){var n=e.data.ref;if(n){var i=e.context,o=e.componentInstance||e.elm,a=i.$refs;t?Array.isArray(a[n])?r(a[n],o):a[n]===o&&(a[n]=void 0):e.data.refInFor?Array.isArray(a[n])&&a[n].indexOf(o)<0?a[n].push(o):a[n]=[o]:a[n]=o}}function Lt(e){return void 0===e||null===e}function Dt(e){return void 0!==e&&null!==e}function Mt(e){return e===!0}function Pt(e,t){return e.key===t.key&&e.tag===t.tag&&e.isComment===t.isComment&&Dt(e.data)===Dt(t.data)&&Rt(e,t)}function Rt(e,t){if("input"!==e.tag)return!0;var n;return(Dt(n=e.data)&&Dt(n=n.attrs)&&n.type)===(Dt(n=t.data)&&Dt(n=n.attrs)&&n.type)}function Ft(e,t,n){var r,i,o={};for(r=t;r<=n;++r)i=e[r].key,Dt(i)&&(o[i]=r);return o}function Ht(e,t){(e.data.directives||t.data.directives)&&Ut(e,t)}function Ut(e,t){var n,r,i,o=e===Qo,a=t===Qo,s=Bt(e.data.directives,e.context),c=Bt(t.data.directives,t.context),u=[],l=[];for(n in c)r=s[n],i=c[n],r?(i.oldValue=r.value,zt(i,"update",t,e),i.def&&i.def.componentUpdated&&l.push(i)):(zt(i,"bind",t,e),i.def&&i.def.inserted&&u.push(i));if(u.length){var f=function(){for(var n=0;n<u.length;n++)zt(u[n],"inserted",t,e)};o?q(t.data.hook||(t.data.hook={}),"insert",f):f()}if(l.length&&q(t.data.hook||(t.data.hook={}),"postpatch",function(){for(var n=0;n<l.length;n++)zt(l[n],"componentUpdated",t,e)}),!o)for(n in s)c[n]||zt(s[n],"unbind",e,e,a)}function Bt(e,t){var n=Object.create(null);if(!e)return n;var r,i;for(r=0;r<e.length;r++)i=e[r],i.modifiers||(i.modifiers=ta),n[Vt(i)]=i,i.def=M(t.$options,"directives",i.name,!0);return n}function Vt(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function zt(e,t,n,r,i){var o=e.def&&e.def[t];o&&o(n.elm,e,n,r,i)}function Jt(e,t){if(e.data.attrs||t.data.attrs){var n,r,i=t.elm,o=e.data.attrs||{},a=t.data.attrs||{};a.__ob__&&(a=t.data.attrs=u({},a));for(n in a)r=a[n],o[n]!==r&&Kt(i,n,r);Mi&&a.value!==o.value&&Kt(i,"value",a.value);for(n in o)null==a[n]&&(Uo(n)?i.removeAttributeNS(Ho,Bo(n)):Ro(n)||i.removeAttribute(n))}}function Kt(e,t,n){Fo(t)?Vo(n)?e.removeAttribute(t):e.setAttribute(t,t):Ro(t)?e.setAttribute(t,Vo(n)||"false"===n?"false":"true"):Uo(t)?Vo(n)?e.removeAttributeNS(Ho,Bo(t)):e.setAttributeNS(Ho,t,n):Vo(n)?e.removeAttribute(t):e.setAttribute(t,n)}function qt(e,t){var n=t.elm,r=t.data,i=e.data;if(r.staticClass||r.class||i&&(i.staticClass||i.class)){var o=dt(t),a=n._transitionClasses;a&&(o=mt(o,gt(a))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}function Wt(e){function t(){(a||(a=[])).push(e.slice(v,i).trim()),v=i+1}var n,r,i,o,a,s=!1,c=!1,u=!1,l=!1,f=0,p=0,d=0,v=0;for(i=0;i<e.length;i++)if(r=n,n=e.charCodeAt(i),s)39===n&&92!==r&&(s=!1);else if(c)34===n&&92!==r&&(c=!1);else if(u)96===n&&92!==r&&(u=!1);else if(l)47===n&&92!==r&&(l=!1);else if(124!==n||124===e.charCodeAt(i+1)||124===e.charCodeAt(i-1)||f||p||d){switch(n){case 34:c=!0;break;case 39:s=!0;break;case 96:u=!0;break;case 40:d++;break;case 41:d--;break;case 91:p++;break;case 93:p--;break;case 123:f++;break;case 125:f--}if(47===n){for(var h=i-1,m=void 0;h>=0&&" "===(m=e.charAt(h));h--);m&&oa.test(m)||(l=!0)}}else void 0===o?(v=i+1,o=e.slice(0,i).trim()):t();if(void 0===o?o=e.slice(0,i).trim():0!==v&&t(),a)for(i=0;i<a.length;i++)o=Zt(o,a[i]);return o}function Zt(e,t){var n=t.indexOf("(");return n<0?'_f("'+t+'")('+e+")":'_f("'+t.slice(0,n)+'")('+e+","+t.slice(n+1)}function Gt(e){console.error("[Vue compiler]: "+e)}function Yt(e,t){return e?e.map(function(e){return e[t]}).filter(function(e){return e}):[]}function Qt(e,t,n){(e.props||(e.props=[])).push({name:t,value:n})}function Xt(e,t,n){(e.attrs||(e.attrs=[])).push({name:t,value:n})}function en(e,t,n,r,i,o){(e.directives||(e.directives=[])).push({name:t,rawName:n,value:r,arg:i,modifiers:o})}function tn(e,t,n,r,i){r&&r.capture&&(delete r.capture,t="!"+t),r&&r.once&&(delete r.once,t="~"+t);var o;r&&r.native?(delete r.native,o=e.nativeEvents||(e.nativeEvents={})):o=e.events||(e.events={});var a={value:n,modifiers:r},s=o[t];Array.isArray(s)?i?s.unshift(a):s.push(a):o[t]=s?i?[a,s]:[s,a]:a}function nn(e,t,n){var r=rn(e,":"+t)||rn(e,"v-bind:"+t);if(null!=r)return Wt(r);if(n!==!1){var i=rn(e,t);if(null!=i)return JSON.stringify(i)}}function rn(e,t){var n;if(null!=(n=e.attrsMap[t]))for(var r=e.attrsList,i=0,o=r.length;i<o;i++)if(r[i].name===t){r.splice(i,1);break}return n}function on(e,t,n){var r=n||{},i=r.number,o=r.trim,a="$$v";o&&(a="(typeof $$v === 'string'? $$v.trim(): $$v)"),i&&(a="_n("+a+")");var s=an(t,a);e.model={value:"("+t+")",expression:'"'+t+'"',callback:"function ($$v) {"+s+"}"}}function an(e,t){var n=sn(e);return null===n.idx?e+"="+t:"var $$exp = "+n.exp+", $$idx = "+n.idx+";if (!Array.isArray($$exp)){"+e+"="+t+"}else{$$exp.splice($$idx, 1, "+t+")}"}function sn(e){if(To=e,Oo=To.length,Eo=jo=No=0,e.indexOf("[")<0||e.lastIndexOf("]")<Oo-1)return{exp:e,idx:null};for(;!un();)So=cn(),ln(So)?pn(So):91===So&&fn(So);return{exp:e.substring(0,jo),idx:e.substring(jo+1,No)}}function cn(){return To.charCodeAt(++Eo)}function un(){return Eo>=Oo}function ln(e){return 34===e||39===e}function fn(e){var t=1;for(jo=Eo;!un();)if(e=cn(),ln(e))pn(e);else if(91===e&&t++,93===e&&t--,0===t){No=Eo;break}}function pn(e){for(var t=e;!un()&&(e=cn())!==t;);}function dn(e,t,n){Io=n;var r=t.value,i=t.modifiers,o=e.tag,a=e.attrsMap.type;if("select"===o)mn(e,r,i);else if("input"===o&&"checkbox"===a)vn(e,r,i);else if("input"===o&&"radio"===a)hn(e,r,i);else if("input"===o||"textarea"===o)gn(e,r,i);else if(!Si.isReservedTag(o))return on(e,r,i),!1;return!0}function vn(e,t,n){var r=n&&n.number,i=nn(e,"value")||"null",o=nn(e,"true-value")||"true",a=nn(e,"false-value")||"false";Qt(e,"checked","Array.isArray("+t+")?_i("+t+","+i+")>-1"+("true"===o?":("+t+")":":_q("+t+","+o+")")),tn(e,sa,"var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+o+"):("+a+");if(Array.isArray($$a)){var $$v="+(r?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$c){$$i<0&&("+t+"=$$a.concat($$v))}else{$$i>-1&&("+t+"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{"+t+"=$$c}",null,!0)}function hn(e,t,n){var r=n&&n.number,i=nn(e,"value")||"null";i=r?"_n("+i+")":i,Qt(e,"checked","_q("+t+","+i+")"),tn(e,sa,an(t,i),null,!0)}function mn(e,t,n){var r=n&&n.number,i='Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(r?"_n(val)":"val")+"})",o="var $$selectedVal = "+i+";";o=o+" "+an(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),tn(e,"change",o,null,!0)}function gn(e,t,n){var r=e.attrsMap.type,i=n||{},o=i.lazy,a=i.number,s=i.trim,c=!o&&"range"!==r,u=o?"change":"range"===r?aa:"input",l="$event.target.value";s&&(l="$event.target.value.trim()"),a&&(l="_n("+l+")");var f=an(t,l);c&&(f="if($event.target.composing)return;"+f),Qt(e,"value","("+t+")"),tn(e,u,f,null,!0),(s||a||"number"===r)&&tn(e,"blur","$forceUpdate()")}function yn(e){var t;e[aa]&&(t=Di?"change":"input",e[t]=[].concat(e[aa],e[t]||[]),delete e[aa]),e[sa]&&(t=Hi?"click":"change",e[t]=[].concat(e[sa],e[t]||[]),delete e[sa])}function _n(e,t,n,r){if(n){var i=t,o=Lo;t=function(n){null!==(1===arguments.length?i(n):i.apply(null,arguments))&&bn(e,t,r,o)}}Lo.addEventListener(e,t,r)}function bn(e,t,n,r){(r||Lo).removeEventListener(e,t,n)}function $n(e,t){if(e.data.on||t.data.on){var n=t.data.on||{},r=e.data.on||{};Lo=t.elm,yn(n),K(n,r,_n,bn,t.context)}}function wn(e,t){if(e.data.domProps||t.data.domProps){var n,r,i=t.elm,o=e.data.domProps||{},a=t.data.domProps||{};a.__ob__&&(a=t.data.domProps=u({},a));for(n in o)null==a[n]&&(i[n]="");for(n in a)if(r=a[n],"textContent"!==n&&"innerHTML"!==n||(t.children&&(t.children.length=0),r!==o[n]))if("value"===n){i._value=r;var s=null==r?"":String(r);xn(i,t,s)&&(i.value=s)}else i[n]=r}}function xn(e,t,n){return!e.composing&&("option"===t.tag||Cn(e,n)||kn(e,n))}function Cn(e,t){return document.activeElement!==e&&e.value!==t}function kn(e,n){var r=e.value,i=e._vModifiers;return i&&i.number||"number"===e.type?t(r)!==t(n):i&&i.trim?r.trim()!==n.trim():r!==n}function An(e){var t=On(e.style);return e.staticStyle?u(e.staticStyle,t):t}function On(e){return Array.isArray(e)?p(e):"string"==typeof e?la(e):e}function Tn(e,t){var n,r={};if(t)for(var i=e;i.componentInstance;)i=i.componentInstance._vnode,i.data&&(n=An(i.data))&&u(r,n);(n=An(e.data))&&u(r,n);for(var o=e;o=o.parent;)o.data&&(n=An(o.data))&&u(r,n);return r}function Sn(e,t){var n=t.data,r=e.data;if(n.staticStyle||n.style||r.staticStyle||r.style){var i,o,a=t.elm,s=e.data.staticStyle,c=e.data.style||{},l=s||c,f=On(t.data.style)||{};t.data.style=f.__ob__?u({},f):f;var p=Tn(t,!0);for(o in l)null==p[o]&&da(a,o,"");for(o in p)(i=p[o])!==l[o]&&da(a,o,null==i?"":i)}}function En(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(/\s+/).forEach(function(t){return e.classList.add(t)}):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function jn(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(/\s+/).forEach(function(t){return e.classList.remove(t)}):e.classList.remove(t);else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");e.setAttribute("class",n.trim())}}function Nn(e){if(e){if("object"==typeof e){var t={};return e.css!==!1&&u(t,ga(e.name||"v")),u(t,e),t}return"string"==typeof e?ga(e):void 0}}function In(e){ka(function(){ka(e)})}function Ln(e,t){(e._transitionClasses||(e._transitionClasses=[])).push(t),En(e,t)}function Dn(e,t){e._transitionClasses&&r(e._transitionClasses,t),jn(e,t)}function Mn(e,t,n){var r=Pn(e,t),i=r.type,o=r.timeout,a=r.propCount;if(!i)return n();var s=i===_a?wa:Ca,c=0,u=function(){e.removeEventListener(s,l),n()},l=function(t){t.target===e&&++c>=a&&u()};setTimeout(function(){c<a&&u()},o+1),e.addEventListener(s,l)}function Pn(e,t){var n,r=window.getComputedStyle(e),i=r[$a+"Delay"].split(", "),o=r[$a+"Duration"].split(", "),a=Rn(i,o),s=r[xa+"Delay"].split(", "),c=r[xa+"Duration"].split(", "),u=Rn(s,c),l=0,f=0;return t===_a?a>0&&(n=_a,l=a,f=o.length):t===ba?u>0&&(n=ba,l=u,f=c.length):(l=Math.max(a,u),n=l>0?a>u?_a:ba:null,f=n?n===_a?o.length:c.length:0),{type:n,timeout:l,propCount:f,hasTransform:n===_a&&Aa.test(r[$a+"Property"])}}function Rn(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map(function(t,n){return Fn(t)+Fn(e[n])}))}function Fn(e){return 1e3*Number(e.slice(0,-1))}function Hn(e,n){var r=e.elm;r._leaveCb&&(r._leaveCb.cancelled=!0,r._leaveCb());var i=Nn(e.data.transition);if(i&&!r._enterCb&&1===r.nodeType){for(var o=i.css,a=i.type,s=i.enterClass,c=i.enterToClass,u=i.enterActiveClass,f=i.appearClass,p=i.appearToClass,d=i.appearActiveClass,v=i.beforeEnter,h=i.enter,g=i.afterEnter,y=i.enterCancelled,_=i.beforeAppear,b=i.appear,$=i.afterAppear,w=i.appearCancelled,x=i.duration,C=so,k=so.$vnode;k&&k.parent;)k=k.parent,C=k.context;var A=!C._isMounted||!e.isRootInsert;if(!A||b||""===b){var O=A&&f?f:s,T=A&&d?d:u,S=A&&p?p:c,E=A?_||v:v,j=A&&"function"==typeof b?b:h,N=A?$||g:g,I=A?w||y:y,L=t(l(x)?x.enter:x),D=o!==!1&&!Mi,M=Vn(j),P=r._enterCb=m(function(){D&&(Dn(r,S),Dn(r,T)),P.cancelled?(D&&Dn(r,O),I&&I(r)):N&&N(r),r._enterCb=null});e.data.show||q(e.data.hook||(e.data.hook={}),"insert",function(){var t=r.parentNode,n=t&&t._pending&&t._pending[e.key];n&&n.tag===e.tag&&n.elm._leaveCb&&n.elm._leaveCb(),j&&j(r,P)}),E&&E(r),D&&(Ln(r,O),Ln(r,T),In(function(){Ln(r,S),Dn(r,O),P.cancelled||M||(Bn(L)?setTimeout(P,L):Mn(r,a,P))})),e.data.show&&(n&&n(),j&&j(r,P)),D||M||P()}}}function Un(e,n){function r(){w.cancelled||(e.data.show||((i.parentNode._pending||(i.parentNode._pending={}))[e.key]=e),p&&p(i),_&&(Ln(i,c),Ln(i,f),In(function(){Ln(i,u),Dn(i,c),w.cancelled||b||(Bn($)?setTimeout(w,$):Mn(i,s,w))})),d&&d(i,w),_||b||w())}var i=e.elm;i._enterCb&&(i._enterCb.cancelled=!0,i._enterCb());var o=Nn(e.data.transition);if(!o)return n();if(!i._leaveCb&&1===i.nodeType){
	var a=o.css,s=o.type,c=o.leaveClass,u=o.leaveToClass,f=o.leaveActiveClass,p=o.beforeLeave,d=o.leave,v=o.afterLeave,h=o.leaveCancelled,g=o.delayLeave,y=o.duration,_=a!==!1&&!Mi,b=Vn(d),$=t(l(y)?y.leave:y),w=i._leaveCb=m(function(){i.parentNode&&i.parentNode._pending&&(i.parentNode._pending[e.key]=null),_&&(Dn(i,u),Dn(i,f)),w.cancelled?(_&&Dn(i,c),h&&h(i)):(n(),v&&v(i)),i._leaveCb=null});g?g(r):r()}}function Bn(e){return"number"==typeof e&&!isNaN(e)}function Vn(e){if(!e)return!1;var t=e.fns;return t?Vn(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function zn(e,t){t.data.show||Hn(t)}function Jn(e,t,n){var r=t.value,i=e.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,c=e.options.length;s<c;s++)if(a=e.options[s],i)o=h(r,qn(a))>-1,a.selected!==o&&(a.selected=o);else if(v(qn(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function Kn(e,t){for(var n=0,r=t.length;n<r;n++)if(v(qn(t[n]),e))return!1;return!0}function qn(e){return"_value"in e?e._value:e.value}function Wn(e){e.target.composing=!0}function Zn(e){e.target.composing=!1,Gn(e.target,"input")}function Gn(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Yn(e){return!e.componentInstance||e.data&&e.data.transition?e:Yn(e.componentInstance._vnode)}function Qn(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Qn(Y(t.children)):e}function Xn(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var i=n._parentListeners;for(var o in i)t[wi(o)]=i[o];return t}function er(e,t){return/\d-keep-alive$/.test(t.tag)?e("keep-alive"):null}function tr(e){for(;e=e.parent;)if(e.data.transition)return!0}function nr(e,t){return t.key===e.key&&t.tag===e.tag}function rr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function ir(e){e.data.newPos=e.elm.getBoundingClientRect()}function or(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,i=t.top-n.top;if(r||i){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+i+"px)",o.transitionDuration="0s"}}function ar(e){return Fa=Fa||document.createElement("div"),Fa.innerHTML=e,Fa.textContent}function sr(e,t){var n=t?ws:$s;return e.replace(n,function(e){return bs[e]})}function cr(e,t){function n(t){l+=t,e=e.substring(t)}function r(e,n,r){var i,s;if(null==n&&(n=l),null==r&&(r=l),e&&(s=e.toLowerCase()),e)for(i=a.length-1;i>=0&&a[i].lowerCasedTag!==s;i--);else i=0;if(i>=0){for(var c=a.length-1;c>=i;c--)t.end&&t.end(a[c].tag,n,r);a.length=i,o=i&&a[i-1].tag}else"br"===s?t.start&&t.start(e,[],!0,n,r):"p"===s&&(t.start&&t.start(e,[],!1,n,r),t.end&&t.end(e,n,r))}for(var i,o,a=[],s=t.expectHTML,c=t.isUnaryTag||Oi,u=t.canBeLeftOpenTag||Oi,l=0;e;){if(i=e,o&&ys(o)){var f=o.toLowerCase(),p=_s[f]||(_s[f]=new RegExp("([\\s\\S]*?)(</"+f+"[^>]*>)","i")),d=0,v=e.replace(p,function(e,n,r){return d=r.length,ys(f)||"noscript"===f||(n=n.replace(/<!--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),t.chars&&t.chars(n),""});l+=e.length-v.length,e=v,r(f,l-d,l)}else{var h=e.indexOf("<");if(0===h){if(Ya.test(e)){var m=e.indexOf("-->");if(m>=0){n(m+3);continue}}if(Qa.test(e)){var g=e.indexOf("]>");if(g>=0){n(g+2);continue}}var y=e.match(Ga);if(y){n(y[0].length);continue}var _=e.match(Za);if(_){var b=l;n(_[0].length),r(_[1],b,l);continue}var $=function(){var t=e.match(qa);if(t){var r={tagName:t[1],attrs:[],start:l};n(t[0].length);for(var i,o;!(i=e.match(Wa))&&(o=e.match(Ja));)n(o[0].length),r.attrs.push(o);if(i)return r.unarySlash=i[1],n(i[0].length),r.end=l,r}}();if($){!function(e){var n=e.tagName,i=e.unarySlash;s&&("p"===o&&Va(n)&&r(o),u(n)&&o===n&&r(n));for(var l=c(n)||"html"===n&&"head"===o||!!i,f=e.attrs.length,p=new Array(f),d=0;d<f;d++){var v=e.attrs[d];Xa&&v[0].indexOf('""')===-1&&(""===v[3]&&delete v[3],""===v[4]&&delete v[4],""===v[5]&&delete v[5]);var h=v[3]||v[4]||v[5]||"";p[d]={name:v[1],value:sr(h,t.shouldDecodeNewlines)}}l||(a.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:p}),o=n),t.start&&t.start(n,p,l,e.start,e.end)}($);continue}}var w=void 0,x=void 0,C=void 0;if(h>=0){for(x=e.slice(h);!(Za.test(x)||qa.test(x)||Ya.test(x)||Qa.test(x)||(C=x.indexOf("<",1))<0);)h+=C,x=e.slice(h);w=e.substring(0,h),n(h)}h<0&&(w=e,e=""),t.chars&&w&&t.chars(w)}if(e===i){t.chars&&t.chars(e);break}}r()}function ur(e,t){var n=t?Cs(t):xs;if(n.test(e)){for(var r,i,o=[],a=n.lastIndex=0;r=n.exec(e);){i=r.index,i>a&&o.push(JSON.stringify(e.slice(a,i)));var s=Wt(r[1].trim());o.push("_s("+s+")"),a=i+r[0].length}return a<e.length&&o.push(JSON.stringify(e.slice(a))),o.join("+")}}function lr(e,t){function n(e){e.pre&&(s=!1),os(e.tag)&&(c=!1)}es=t.warn||Gt,ss=t.getTagNamespace||Oi,as=t.mustUseProp||Oi,os=t.isPreTag||Oi,rs=Yt(t.modules,"preTransformNode"),ns=Yt(t.modules,"transformNode"),is=Yt(t.modules,"postTransformNode"),ts=t.delimiters;var r,i,o=[],a=t.preserveWhitespace!==!1,s=!1,c=!1;return cr(e,{warn:es,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,start:function(e,a,u){var l=i&&i.ns||ss(e);Di&&"svg"===l&&(a=Tr(a));var f={type:1,tag:e,attrsList:a,attrsMap:Ar(a),parent:i,children:[]};l&&(f.ns=l),Or(f)&&!Ui()&&(f.forbidden=!0);for(var p=0;p<rs.length;p++)rs[p](f,t);if(s||(fr(f),f.pre&&(s=!0)),os(f.tag)&&(c=!0),s)pr(f);else{hr(f),mr(f),br(f),dr(f),f.plain=!f.key&&!a.length,vr(f),$r(f),wr(f);for(var d=0;d<ns.length;d++)ns[d](f,t);xr(f)}if(r?o.length||r.if&&(f.elseif||f.else)&&_r(r,{exp:f.elseif,block:f}):r=f,i&&!f.forbidden)if(f.elseif||f.else)gr(f,i);else if(f.slotScope){i.plain=!1;var v=f.slotTarget||'"default"';(i.scopedSlots||(i.scopedSlots={}))[v]=f}else i.children.push(f),f.parent=i;u?n(f):(i=f,o.push(f));for(var h=0;h<is.length;h++)is[h](f,t)},end:function(){var e=o[o.length-1],t=e.children[e.children.length-1];t&&3===t.type&&" "===t.text&&!c&&e.children.pop(),o.length-=1,i=o[o.length-1],n(e)},chars:function(e){if(i&&(!Di||"textarea"!==i.tag||i.attrsMap.placeholder!==e)){var t=i.children;if(e=c||e.trim()?Ns(e):a&&t.length?" ":""){var n;!s&&" "!==e&&(n=ur(e,ts))?t.push({type:2,expression:n,text:e}):" "===e&&t.length&&" "===t[t.length-1].text||t.push({type:3,text:e})}}}}),r}function fr(e){null!=rn(e,"v-pre")&&(e.pre=!0)}function pr(e){var t=e.attrsList.length;if(t)for(var n=e.attrs=new Array(t),r=0;r<t;r++)n[r]={name:e.attrsList[r].name,value:JSON.stringify(e.attrsList[r].value)};else e.pre||(e.plain=!0)}function dr(e){var t=nn(e,"key");t&&(e.key=t)}function vr(e){var t=nn(e,"ref");t&&(e.ref=t,e.refInFor=Cr(e))}function hr(e){var t;if(t=rn(e,"v-for")){var n=t.match(Os);if(!n)return;e.for=n[2].trim();var r=n[1].trim(),i=r.match(Ts);i?(e.alias=i[1].trim(),e.iterator1=i[2].trim(),i[3]&&(e.iterator2=i[3].trim())):e.alias=r}}function mr(e){var t=rn(e,"v-if");if(t)e.if=t,_r(e,{exp:t,block:e});else{null!=rn(e,"v-else")&&(e.else=!0);var n=rn(e,"v-else-if");n&&(e.elseif=n)}}function gr(e,t){var n=yr(t.children);n&&n.if&&_r(n,{exp:e.elseif,block:e})}function yr(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}function _r(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function br(e){null!=rn(e,"v-once")&&(e.once=!0)}function $r(e){if("slot"===e.tag)e.slotName=nn(e,"name");else{var t=nn(e,"slot");t&&(e.slotTarget='""'===t?'"default"':t),"template"===e.tag&&(e.slotScope=rn(e,"scope"))}}function wr(e){var t;(t=nn(e,"is"))&&(e.component=t),null!=rn(e,"inline-template")&&(e.inlineTemplate=!0)}function xr(e){var t,n,r,i,o,a,s,c=e.attrsList;for(t=0,n=c.length;t<n;t++)if(r=i=c[t].name,o=c[t].value,As.test(r))if(e.hasBindings=!0,a=kr(r),a&&(r=r.replace(js,"")),Es.test(r))r=r.replace(Es,""),o=Wt(o),s=!1,a&&(a.prop&&(s=!0,"innerHtml"===(r=wi(r))&&(r="innerHTML")),a.camel&&(r=wi(r))),s||as(e.tag,e.attrsMap.type,r)?Qt(e,r,o):Xt(e,r,o);else if(ks.test(r))r=r.replace(ks,""),tn(e,r,o,a);else{r=r.replace(As,"");var u=r.match(Ss),l=u&&u[1];l&&(r=r.slice(0,-(l.length+1))),en(e,r,i,o,l,a)}else Xt(e,r,JSON.stringify(o))}function Cr(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}function kr(e){var t=e.match(js);if(t){var n={};return t.forEach(function(e){n[e.slice(1)]=!0}),n}}function Ar(e){for(var t={},n=0,r=e.length;n<r;n++)t[e[n].name]=e[n].value;return t}function Or(e){return"style"===e.tag||"script"===e.tag&&(!e.attrsMap.type||"text/javascript"===e.attrsMap.type)}function Tr(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];Is.test(r.name)||(r.name=r.name.replace(Ls,""),t.push(r))}return t}function Sr(e,t){e&&(cs=Ds(t.staticKeys||""),us=t.isReservedTag||Oi,jr(e),Nr(e,!1))}function Er(e){return n("type,tag,attrsList,attrsMap,plain,parent,children,attrs"+(e?","+e:""))}function jr(e){if(e.static=Lr(e),1===e.type){if(!us(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var r=e.children[t];jr(r),r.static||(e.static=!1)}}}function Nr(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,r=e.children.length;n<r;n++)Nr(e.children[n],t||!!e.for);e.ifConditions&&Ir(e.ifConditions,t)}}function Ir(e,t){for(var n=1,r=e.length;n<r;n++)Nr(e[n].block,t)}function Lr(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||bi(e.tag)||!us(e.tag)||Dr(e)||!Object.keys(e).every(cs))))}function Dr(e){for(;e.parent;){if(e=e.parent,"template"!==e.tag)return!1;if(e.for)return!0}return!1}function Mr(e,t){var n=t?"nativeOn:{":"on:{";for(var r in e)n+='"'+r+'":'+Pr(r,e[r])+",";return n.slice(0,-1)+"}"}function Pr(e,t){if(!t)return"function(){}";if(Array.isArray(t))return"["+t.map(function(t){return Pr(e,t)}).join(",")+"]";var n=Ps.test(t.value),r=Ms.test(t.value);if(t.modifiers){var i="",o="",a=[];for(var s in t.modifiers)Hs[s]?(o+=Hs[s],Rs[s]&&a.push(s)):a.push(s);a.length&&(i+=Rr(a)),o&&(i+=o);return"function($event){"+i+(n?t.value+"($event)":r?"("+t.value+")($event)":t.value)+"}"}return n||r?t.value:"function($event){"+t.value+"}"}function Rr(e){return"if(!('button' in $event)&&"+e.map(Fr).join("&&")+")return null;"}function Fr(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=Rs[e];return"_k($event.keyCode,"+JSON.stringify(e)+(n?","+JSON.stringify(n):"")+")"}function Hr(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+(t.modifiers&&t.modifiers.prop?",true":"")+")"}}function Ur(e,t){var n=hs,r=hs=[],i=ms;ms=0,gs=t,ls=t.warn||Gt,fs=Yt(t.modules,"transformCode"),ps=Yt(t.modules,"genData"),ds=t.directives||{},vs=t.isReservedTag||Oi;var o=e?Br(e):'_c("div")';return hs=n,ms=i,{render:"with(this){return "+o+"}",staticRenderFns:r}}function Br(e){if(e.staticRoot&&!e.staticProcessed)return Vr(e);if(e.once&&!e.onceProcessed)return zr(e);if(e.for&&!e.forProcessed)return qr(e);if(e.if&&!e.ifProcessed)return Jr(e);if("template"!==e.tag||e.slotTarget){if("slot"===e.tag)return oi(e);var t;if(e.component)t=ai(e.component,e);else{var n=e.plain?void 0:Wr(e),r=e.inlineTemplate?null:Xr(e,!0);t="_c('"+e.tag+"'"+(n?","+n:"")+(r?","+r:"")+")"}for(var i=0;i<fs.length;i++)t=fs[i](e,t);return t}return Xr(e)||"void 0"}function Vr(e){return e.staticProcessed=!0,hs.push("with(this){return "+Br(e)+"}"),"_m("+(hs.length-1)+(e.staticInFor?",true":"")+")"}function zr(e){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Jr(e);if(e.staticInFor){for(var t="",n=e.parent;n;){if(n.for){t=n.key;break}n=n.parent}return t?"_o("+Br(e)+","+ms+++(t?","+t:"")+")":Br(e)}return Vr(e)}function Jr(e){return e.ifProcessed=!0,Kr(e.ifConditions.slice())}function Kr(e){function t(e){return e.once?zr(e):Br(e)}if(!e.length)return"_e()";var n=e.shift();return n.exp?"("+n.exp+")?"+t(n.block)+":"+Kr(e):""+t(n.block)}function qr(e){var t=e.for,n=e.alias,r=e.iterator1?","+e.iterator1:"",i=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,"_l(("+t+"),function("+n+r+i+"){return "+Br(e)+"})"}function Wr(e){var t="{",n=Zr(e);n&&(t+=n+","),e.key&&(t+="key:"+e.key+","),e.ref&&(t+="ref:"+e.ref+","),e.refInFor&&(t+="refInFor:true,"),e.pre&&(t+="pre:true,"),e.component&&(t+='tag:"'+e.tag+'",');for(var r=0;r<ps.length;r++)t+=ps[r](e);if(e.attrs&&(t+="attrs:{"+si(e.attrs)+"},"),e.props&&(t+="domProps:{"+si(e.props)+"},"),e.events&&(t+=Mr(e.events)+","),e.nativeEvents&&(t+=Mr(e.nativeEvents,!0)+","),e.slotTarget&&(t+="slot:"+e.slotTarget+","),e.scopedSlots&&(t+=Yr(e.scopedSlots)+","),e.model&&(t+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var i=Gr(e);i&&(t+=i+",")}return t=t.replace(/,$/,"")+"}",e.wrapData&&(t=e.wrapData(t)),t}function Zr(e){var t=e.directives;if(t){var n,r,i,o,a="directives:[",s=!1;for(n=0,r=t.length;n<r;n++){i=t[n],o=!0;var c=ds[i.name]||Us[i.name];c&&(o=!!c(e,i,ls)),o&&(s=!0,a+='{name:"'+i.name+'",rawName:"'+i.rawName+'"'+(i.value?",value:("+i.value+"),expression:"+JSON.stringify(i.value):"")+(i.arg?',arg:"'+i.arg+'"':"")+(i.modifiers?",modifiers:"+JSON.stringify(i.modifiers):"")+"},")}return s?a.slice(0,-1)+"]":void 0}}function Gr(e){var t=e.children[0];if(1===t.type){var n=Ur(t,gs);return"inlineTemplate:{render:function(){"+n.render+"},staticRenderFns:["+n.staticRenderFns.map(function(e){return"function(){"+e+"}"}).join(",")+"]}"}}function Yr(e){return"scopedSlots:_u(["+Object.keys(e).map(function(t){return Qr(t,e[t])}).join(",")+"])"}function Qr(e,t){return"["+e+",function("+String(t.attrsMap.scope)+"){return "+("template"===t.tag?Xr(t)||"void 0":Br(t))+"}]"}function Xr(e,t){var n=e.children;if(n.length){var r=n[0];if(1===n.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag)return Br(r);var i=t?ei(n):0;return"["+n.map(ri).join(",")+"]"+(i?","+i:"")}}function ei(e){for(var t=0,n=0;n<e.length;n++){var r=e[n];if(1===r.type){if(ti(r)||r.ifConditions&&r.ifConditions.some(function(e){return ti(e.block)})){t=2;break}(ni(r)||r.ifConditions&&r.ifConditions.some(function(e){return ni(e.block)}))&&(t=1)}}return t}function ti(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function ni(e){return!vs(e.tag)}function ri(e){return 1===e.type?Br(e):ii(e)}function ii(e){return"_v("+(2===e.type?e.expression:ci(JSON.stringify(e.text)))+")"}function oi(e){var t=e.slotName||'"default"',n=Xr(e),r="_t("+t+(n?","+n:""),i=e.attrs&&"{"+e.attrs.map(function(e){return wi(e.name)+":"+e.value}).join(",")+"}",o=e.attrsMap["v-bind"];return!i&&!o||n||(r+=",null"),i&&(r+=","+i),o&&(r+=(i?"":",null")+","+o),r+")"}function ai(e,t){var n=t.inlineTemplate?null:Xr(t,!0);return"_c("+e+","+Wr(t)+(n?","+n:"")+")"}function si(e){for(var t="",n=0;n<e.length;n++){var r=e[n];t+='"'+r.name+'":'+ci(r.value)+","}return t.slice(0,-1)}function ci(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function ui(e,t){var n=lr(e.trim(),t);Sr(n,t);var r=Ur(n,t);return{ast:n,render:r.render,staticRenderFns:r.staticRenderFns}}function li(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),d}}function fi(e,t){var n=(t.warn,rn(e,"class"));n&&(e.staticClass=JSON.stringify(n));var r=nn(e,"class",!1);r&&(e.classBinding=r)}function pi(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}function di(e,t){var n=(t.warn,rn(e,"style"));n&&(e.staticStyle=JSON.stringify(la(n)));var r=nn(e,"style",!1);r&&(e.styleBinding=r)}function vi(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}function hi(e,t){t.value&&Qt(e,"textContent","_s("+t.value+")")}function mi(e,t){t.value&&Qt(e,"innerHTML","_s("+t.value+")")}function gi(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}var yi,_i,bi=n("slot,component",!0),$i=Object.prototype.hasOwnProperty,wi=a(function(e){return e.replace(/-(\w)/g,function(e,t){return t?t.toUpperCase():""})}),xi=a(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),Ci=a(function(e){return e.replace(/([^-])([A-Z])/g,"$1-$2").replace(/([^-])([A-Z])/g,"$1-$2").toLowerCase()}),ki=Object.prototype.toString,Ai="[object Object]",Oi=function(){return!1},Ti=function(e){return e},Si={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:Oi,isUnknownElement:Oi,getTagNamespace:d,parsePlatformTagName:Ti,mustUseProp:Oi,_assetTypes:["component","directive","filter"],_lifecycleHooks:["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated"],_maxUpdateCount:100},Ei=Object.freeze({}),ji=/[^\w.$]/,Ni="__proto__"in{},Ii="undefined"!=typeof window,Li=Ii&&window.navigator.userAgent.toLowerCase(),Di=Li&&/msie|trident/.test(Li),Mi=Li&&Li.indexOf("msie 9.0")>0,Pi=Li&&Li.indexOf("edge/")>0,Ri=Li&&Li.indexOf("android")>0,Fi=Li&&/iphone|ipad|ipod|ios/.test(Li),Hi=Li&&/chrome\/\d+/.test(Li)&&!Pi,Ui=function(){return void 0===yi&&(yi=!Ii&&"undefined"!=typeof global&&"server"===global.process.env.VUE_ENV),yi},Bi=Ii&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__,Vi="undefined"!=typeof Symbol&&b(Symbol)&&"undefined"!=typeof Reflect&&b(Reflect.ownKeys),zi=function(){function e(){r=!1;var e=n.slice(0);n.length=0;for(var t=0;t<e.length;t++)e[t]()}var t,n=[],r=!1;if("undefined"!=typeof Promise&&b(Promise)){var i=Promise.resolve(),o=function(e){console.error(e)};t=function(){i.then(e).catch(o),Fi&&setTimeout(d)}}else if("undefined"==typeof MutationObserver||!b(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())t=function(){setTimeout(e,0)};else{var a=1,s=new MutationObserver(e),c=document.createTextNode(String(a));s.observe(c,{characterData:!0}),t=function(){a=(a+1)%2,c.data=String(a)}}return function(e,i){var o;if(n.push(function(){e&&e.call(i),o&&o(i)}),r||(r=!0,t()),!e&&"undefined"!=typeof Promise)return new Promise(function(e){o=e})}}();_i="undefined"!=typeof Set&&b(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return this.set[e]===!0},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var Ji=d,Ki=0,qi=function(){this.id=Ki++,this.subs=[]};qi.prototype.addSub=function(e){this.subs.push(e)},qi.prototype.removeSub=function(e){r(this.subs,e)},qi.prototype.depend=function(){qi.target&&qi.target.addDep(this)},qi.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},qi.target=null;var Wi=[],Zi=Array.prototype,Gi=Object.create(Zi);["push","pop","shift","unshift","splice","sort","reverse"].forEach(function(e){var t=Zi[e];y(Gi,e,function(){for(var n=arguments,r=arguments.length,i=new Array(r);r--;)i[r]=n[r];var o,a=t.apply(this,i),s=this.__ob__;switch(e){case"push":o=i;break;case"unshift":o=i;break;case"splice":o=i.slice(2)}return o&&s.observeArray(o),s.dep.notify(),a})});var Yi=Object.getOwnPropertyNames(Gi),Qi={shouldConvert:!0,isSettingProps:!1},Xi=function(e){if(this.value=e,this.dep=new qi,this.vmCount=0,y(e,"__ob__",this),Array.isArray(e)){(Ni?x:C)(e,Gi,Yi),this.observeArray(e)}else this.walk(e)};Xi.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)A(e,t[n],e[t[n]])},Xi.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)k(e[t])};var eo=Si.optionMergeStrategies;eo.data=function(e,t,n){return n?e||t?function(){var r="function"==typeof t?t.call(n):t,i="function"==typeof e?e.call(n):void 0;return r?E(r,i):i}:void 0:t?"function"!=typeof t?e:e?function(){return E(t.call(this),e.call(this))}:t:e},Si._lifecycleHooks.forEach(function(e){eo[e]=j}),Si._assetTypes.forEach(function(e){eo[e+"s"]=N}),eo.watch=function(e,t){if(!t)return Object.create(e||null);if(!e)return t;var n={};u(n,e);for(var r in t){var i=n[r],o=t[r];i&&!Array.isArray(i)&&(i=[i]),n[r]=i?i.concat(o):[o]}return n},eo.props=eo.methods=eo.computed=function(e,t){if(!t)return Object.create(e||null);if(!e)return t;var n=Object.create(null);return u(n,e),u(n,t),n};var to=function(e,t){return void 0===t?e:t},no=function(e,t,n,r,i,o,a){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.functionalContext=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1},ro={child:{}};ro.child.get=function(){return this.componentInstance},Object.defineProperties(no.prototype,ro);var io,oo=function(){var e=new no;return e.text="",e.isComment=!0,e},ao=a(function(e){var t="~"===e.charAt(0);e=t?e.slice(1):e;var n="!"===e.charAt(0);return e=n?e.slice(1):e,{name:e,once:t,capture:n}}),so=null,co=[],uo={},lo=!1,fo=!1,po=0,vo=0,ho=function(e,t,n,r){this.vm=e,e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++vo,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new _i,this.newDepIds=new _i,this.expression="","function"==typeof t?this.getter=t:(this.getter=_(t),this.getter||(this.getter=function(){})),this.value=this.lazy?void 0:this.get()};ho.prototype.get=function(){$(this);var e,t=this.vm;if(this.user)try{e=this.getter.call(t,t)}catch(e){U(e,t,'getter for watcher "'+this.expression+'"')}else e=this.getter.call(t,t);return this.deep&&he(e),w(),this.cleanupDeps(),e},ho.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},ho.prototype.cleanupDeps=function(){for(var e=this,t=this.deps.length;t--;){var n=e.deps[t];e.newDepIds.has(n.id)||n.removeSub(e)}var r=this.depIds;this.depIds=this.newDepIds,this.newDepIds=r,this.newDepIds.clear(),r=this.deps,this.deps=this.newDeps,this.newDeps=r,this.newDeps.length=0},ho.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ve(this)},ho.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){U(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},ho.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ho.prototype.depend=function(){for(var e=this,t=this.deps.length;t--;)e.deps[t].depend()},ho.prototype.teardown=function(){var e=this;if(this.active){this.vm._isBeingDestroyed||r(this.vm._watchers,this);for(var t=this.deps.length;t--;)e.deps[t].removeSub(e);this.active=!1}};var mo=new _i,go={enumerable:!0,configurable:!0,get:d,set:d},yo={lazy:!0},_o={init:function(e,t,n,r){if(!e.componentInstance||e.componentInstance._isDestroyed){(e.componentInstance=Ee(e,so,n,r)).$mount(t?e.elm:void 0,t)}else if(e.data.keepAlive){var i=e;_o.prepatch(i,i)}},prepatch:function(e,t){var n=t.componentOptions;se(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){e.componentInstance._isMounted||(e.componentInstance._isMounted=!0,fe(e.componentInstance,"mounted")),e.data.keepAlive&&ue(e.componentInstance,!0)},destroy:function(e){e.componentInstance._isDestroyed||(e.data.keepAlive?le(e.componentInstance,!0):e.componentInstance.$destroy())}},bo=Object.keys(_o),$o=1,wo=2,xo=0;!function(e){e.prototype._init=function(e){var t=this;t._uid=xo++,t._isVue=!0,e&&e._isComponent?Qe(t,e):t.$options=D(Xe(t.constructor),e||{},t),t._renderProxy=t,t._self=t,oe(t),Q(t),Ze(t),fe(t,"beforeCreate"),Ye(t),ye(t),Ge(t),fe(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(nt),function(e){var t={};t.get=function(){return this._data};var n={};n.get=function(){return this._props},Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=O,e.prototype.$delete=T,e.prototype.$watch=function(e,t,n){var r=this;n=n||{},n.user=!0;var i=new ho(r,e,t,n);return n.immediate&&t.call(r,i.value),function(){i.teardown()}}}(nt),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this,i=this;if(Array.isArray(e))for(var o=0,a=e.length;o<a;o++)r.$on(e[o],n);else(i._events[e]||(i._events[e]=[])).push(n),t.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){function n(){r.$off(e,n),t.apply(r,arguments)}var r=this;return n.fn=t,r.$on(e,n),r},e.prototype.$off=function(e,t){var n=this,r=this;if(!arguments.length)return r._events=Object.create(null),r;if(Array.isArray(e)){for(var i=0,o=e.length;i<o;i++)n.$off(e[i],t);return r}var a=r._events[e];if(!a)return r;if(1===arguments.length)return r._events[e]=null,r;for(var s,c=a.length;c--;)if((s=a[c])===t||s.fn===t){a.splice(c,1);break}return r},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?c(n):n;for(var r=c(arguments,1),i=0,o=n.length;i<o;i++)n[i].apply(t,r)}return t}}(nt),function(e){e.prototype._update=function(e,t){var n=this;n._isMounted&&fe(n,"beforeUpdate");var r=n.$el,i=n._vnode,o=so;so=n,n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1,n.$options._parentElm,n.$options._refElm),so=o,r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){var e=this;e._watcher&&e._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){fe(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||r(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),fe(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$options._parentElm=e.$options._refElm=null}}}(nt),function(n){n.prototype.$nextTick=function(e){return zi(e,this)},n.prototype._render=function(){var e=this,t=e.$options,n=t.render,r=t.staticRenderFns,i=t._parentVnode;if(e._isMounted)for(var o in e.$slots)e.$slots[o]=z(e.$slots[o]);e.$scopedSlots=i&&i.data.scopedSlots||Ei,r&&!e._staticTrees&&(e._staticTrees=[]),e.$vnode=i;var a;try{a=n.call(e._renderProxy,e.$createElement)}catch(t){U(t,e,"render function"),a=e._vnode}return a instanceof no||(a=oo()),a.parent=i,a},n.prototype._o=Ke,n.prototype._n=t,n.prototype._s=e,n.prototype._l=He,n.prototype._t=Ue,n.prototype._q=v,n.prototype._i=h,n.prototype._m=Je,n.prototype._f=Be,n.prototype._k=Ve,n.prototype._b=ze,n.prototype._v=B,n.prototype._e=oo,n.prototype._u=ie}(nt);var Co=[String,RegExp],ko={name:"keep-alive",abstract:!0,props:{include:Co,exclude:Co},created:function(){this.cache=Object.create(null)},destroyed:function(){var e=this;for(var t in e.cache)pt(e.cache[t])},watch:{include:function(e){ft(this.cache,function(t){return lt(e,t)})},exclude:function(e){ft(this.cache,function(t){return!lt(e,t)})}},render:function(){var e=Y(this.$slots.default),t=e&&e.componentOptions;if(t){var n=ut(t);if(n&&(this.include&&!lt(this.include,n)||this.exclude&&lt(this.exclude,n)))return e;var r=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;this.cache[r]?e.componentInstance=this.cache[r].componentInstance:this.cache[r]=e,e.data.keepAlive=!0}return e}},Ao={KeepAlive:ko};!function(e){var t={};t.get=function(){return Si},Object.defineProperty(e,"config",t),e.util={warn:Ji,extend:u,mergeOptions:D,defineReactive:A},e.set=O,e.delete=T,e.nextTick=zi,e.options=Object.create(null),Si._assetTypes.forEach(function(t){e.options[t+"s"]=Object.create(null)}),e.options._base=e,u(e.options.components,Ao),rt(e),it(e),ot(e),ct(e)}(nt),Object.defineProperty(nt.prototype,"$isServer",{get:Ui}),nt.version="2.2.6";var Oo,To,So,Eo,jo,No,Io,Lo,Do,Mo=n("input,textarea,option,select"),Po=function(e,t,n){return"value"===n&&Mo(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Ro=n("contenteditable,draggable,spellcheck"),Fo=n("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Ho="http://www.w3.org/1999/xlink",Uo=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Bo=function(e){return Uo(e)?e.slice(6,e.length):""},Vo=function(e){return null==e||e===!1},zo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jo=n("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template"),Ko=n("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),qo=function(e){return"pre"===e},Wo=function(e){return Jo(e)||Ko(e)},Zo=Object.create(null),Go=Object.freeze({createElement:$t,createElementNS:wt,createTextNode:xt,createComment:Ct,insertBefore:kt,removeChild:At,appendChild:Ot,parentNode:Tt,nextSibling:St,tagName:Et,setTextContent:jt,setAttribute:Nt}),Yo={create:function(e,t){It(t)},update:function(e,t){e.data.ref!==t.data.ref&&(It(e,!0),It(t))},destroy:function(e){It(e,!0)}},Qo=new no("",{},[]),Xo=["create","activate","update","remove","destroy"],ea={create:Ht,update:Ht,destroy:function(e){Ht(e,Qo)}},ta=Object.create(null),na=[Yo,ea],ra={create:Jt,update:Jt},ia={create:qt,update:qt},oa=/[\w).+\-_$\]]/,aa="__r",sa="__c",ca={create:$n,update:$n},ua={create:wn,update:wn},la=a(function(e){var t={};return e.split(/;(?![^(]*\))/g).forEach(function(e){if(e){var n=e.split(/:(.+)/);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}),fa=/^--/,pa=/\s*!important$/,da=function(e,t,n){fa.test(t)?e.style.setProperty(t,n):pa.test(n)?e.style.setProperty(t,n.replace(pa,""),"important"):e.style[ha(t)]=n},va=["Webkit","Moz","ms"],ha=a(function(e){if(Do=Do||document.createElement("div"),"filter"!==(e=wi(e))&&e in Do.style)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<va.length;n++){var r=va[n]+t;if(r in Do.style)return r}}),ma={create:Sn,update:Sn},ga=a(function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}}),ya=Ii&&!Mi,_a="transition",ba="animation",$a="transition",wa="transitionend",xa="animation",Ca="animationend";ya&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&($a="WebkitTransition",wa="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(xa="WebkitAnimation",Ca="webkitAnimationEnd"));var ka=Ii&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout,Aa=/\b(transform|all)(,|$)/,Oa=Ii?{create:zn,activate:zn,remove:function(e,t){e.data.show?t():Un(e,t)}}:{},Ta=[ra,ia,ca,ua,ma,Oa],Sa=Ta.concat(na),Ea=function(e){function t(e){return new no(O.tagName(e).toLowerCase(),{},[],void 0,e)}function r(e,t){function n(){0==--n.listeners&&i(e)}return n.listeners=t,n}function i(e){var t=O.parentNode(e);Dt(t)&&O.removeChild(t,e)}function a(e,t,n,r,i){if(e.isRootInsert=!i,!s(e,t,n,r)){var o=e.data,a=e.children,c=e.tag;Dt(c)?(e.elm=e.ns?O.createElementNS(e.ns,c):O.createElement(c,e),v(e),f(e,a,t),Dt(o)&&d(e,t),l(n,e.elm,r)):Mt(e.isComment)?(e.elm=O.createComment(e.text),
	l(n,e.elm,r)):(e.elm=O.createTextNode(e.text),l(n,e.elm,r))}}function s(e,t,n,r){var i=e.data;if(Dt(i)){var o=Dt(e.componentInstance)&&i.keepAlive;if(Dt(i=i.hook)&&Dt(i=i.init)&&i(e,!1,n,r),Dt(e.componentInstance))return c(e,t),Mt(o)&&u(e,t,n,r),!0}}function c(e,t){Dt(e.data.pendingInsert)&&t.push.apply(t,e.data.pendingInsert),e.elm=e.componentInstance.$el,p(e)?(d(e,t),v(e)):(It(e),t.push(e))}function u(e,t,n,r){for(var i,o=e;o.componentInstance;)if(o=o.componentInstance._vnode,Dt(i=o.data)&&Dt(i=i.transition)){for(i=0;i<k.activate.length;++i)k.activate[i](Qo,o);t.push(o);break}l(n,e.elm,r)}function l(e,t,n){Dt(e)&&(Dt(n)?O.insertBefore(e,t,n):O.appendChild(e,t))}function f(e,t,n){if(Array.isArray(t))for(var r=0;r<t.length;++r)a(t[r],n,e.elm,null,!0);else o(e.text)&&O.appendChild(e.elm,O.createTextNode(e.text))}function p(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return Dt(e.tag)}function d(e,t){for(var n=0;n<k.create.length;++n)k.create[n](Qo,e);x=e.data.hook,Dt(x)&&(Dt(x.create)&&x.create(Qo,e),Dt(x.insert)&&t.push(e))}function v(e){for(var t,n=e;n;)Dt(t=n.context)&&Dt(t=t.$options._scopeId)&&O.setAttribute(e.elm,t,""),n=n.parent;Dt(t=so)&&t!==e.context&&Dt(t=t.$options._scopeId)&&O.setAttribute(e.elm,t,"")}function h(e,t,n,r,i,o){for(;r<=i;++r)a(n[r],o,e,t)}function m(e){var t,n,r=e.data;if(Dt(r))for(Dt(t=r.hook)&&Dt(t=t.destroy)&&t(e),t=0;t<k.destroy.length;++t)k.destroy[t](e);if(Dt(t=e.children))for(n=0;n<e.children.length;++n)m(e.children[n])}function g(e,t,n,r){for(;n<=r;++n){var o=t[n];Dt(o)&&(Dt(o.tag)?(y(o),m(o)):i(o.elm))}}function y(e,t){if(Dt(t)||Dt(e.data)){var n=k.remove.length+1;for(Dt(t)?t.listeners+=n:t=r(e.elm,n),Dt(x=e.componentInstance)&&Dt(x=x._vnode)&&Dt(x.data)&&y(x,t),x=0;x<k.remove.length;++x)k.remove[x](e,t);Dt(x=e.data.hook)&&Dt(x=x.remove)?x(e,t):t()}else i(e.elm)}function _(e,t,n,r,i){for(var o,s,c,u,l=0,f=0,p=t.length-1,d=t[0],v=t[p],m=n.length-1,y=n[0],_=n[m],$=!i;l<=p&&f<=m;)Lt(d)?d=t[++l]:Lt(v)?v=t[--p]:Pt(d,y)?(b(d,y,r),d=t[++l],y=n[++f]):Pt(v,_)?(b(v,_,r),v=t[--p],_=n[--m]):Pt(d,_)?(b(d,_,r),$&&O.insertBefore(e,d.elm,O.nextSibling(v.elm)),d=t[++l],_=n[--m]):Pt(v,y)?(b(v,y,r),$&&O.insertBefore(e,v.elm,d.elm),v=t[--p],y=n[++f]):(Lt(o)&&(o=Ft(t,l,p)),s=Dt(y.key)?o[y.key]:null,Lt(s)?(a(y,r,e,d.elm),y=n[++f]):(c=t[s],Pt(c,y)?(b(c,y,r),t[s]=void 0,$&&O.insertBefore(e,y.elm,d.elm),y=n[++f]):(a(y,r,e,d.elm),y=n[++f])));l>p?(u=Lt(n[m+1])?null:n[m+1].elm,h(e,u,n,f,m,r)):f>m&&g(e,t,l,p)}function b(e,t,n,r){if(e!==t){if(Mt(t.isStatic)&&Mt(e.isStatic)&&t.key===e.key&&(Mt(t.isCloned)||Mt(t.isOnce)))return t.elm=e.elm,void(t.componentInstance=e.componentInstance);var i,o=t.data;Dt(o)&&Dt(i=o.hook)&&Dt(i=i.prepatch)&&i(e,t);var a=t.elm=e.elm,s=e.children,c=t.children;if(Dt(o)&&p(t)){for(i=0;i<k.update.length;++i)k.update[i](e,t);Dt(i=o.hook)&&Dt(i=i.update)&&i(e,t)}Lt(t.text)?Dt(s)&&Dt(c)?s!==c&&_(a,s,c,n,r):Dt(c)?(Dt(e.text)&&O.setTextContent(a,""),h(a,null,c,0,c.length-1,n)):Dt(s)?g(a,s,0,s.length-1):Dt(e.text)&&O.setTextContent(a,""):e.text!==t.text&&O.setTextContent(a,t.text),Dt(o)&&Dt(i=o.hook)&&Dt(i=i.postpatch)&&i(e,t)}}function $(e,t,n){if(Mt(n)&&Dt(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}function w(e,t,n){t.elm=e;var r=t.tag,i=t.data,o=t.children;if(Dt(i)&&(Dt(x=i.hook)&&Dt(x=x.init)&&x(t,!0),Dt(x=t.componentInstance)))return c(t,n),!0;if(Dt(r)){if(Dt(o))if(e.hasChildNodes()){for(var a=!0,s=e.firstChild,u=0;u<o.length;u++){if(!s||!w(s,o[u],n)){a=!1;break}s=s.nextSibling}if(!a||s)return!1}else f(t,o,n);if(Dt(i))for(var l in i)if(!T(l)){d(t,n);break}}else e.data!==t.text&&(e.data=t.text);return!0}var x,C,k={},A=e.modules,O=e.nodeOps;for(x=0;x<Xo.length;++x)for(k[Xo[x]]=[],C=0;C<A.length;++C)Dt(A[C][Xo[x]])&&k[Xo[x]].push(A[C][Xo[x]]);var T=n("attrs,style,class,staticClass,staticStyle,key");return function(e,n,r,i,o,s){if(Lt(n))return void(Dt(e)&&m(e));var c=!1,u=[];if(Lt(e))c=!0,a(n,u,o,s);else{var l=Dt(e.nodeType);if(!l&&Pt(e,n))b(e,n,u,i);else{if(l){if(1===e.nodeType&&e.hasAttribute("server-rendered")&&(e.removeAttribute("server-rendered"),r=!0),Mt(r)&&w(e,n,u))return $(n,u,!0),e;e=t(e)}var f=e.elm,d=O.parentNode(f);if(a(n,u,f._leaveCb?null:d,O.nextSibling(f)),Dt(n.parent)){for(var v=n.parent;v;)v.elm=n.elm,v=v.parent;if(p(n))for(var h=0;h<k.create.length;++h)k.create[h](Qo,n.parent)}Dt(d)?g(d,[e],0,0):Dt(e.tag)&&m(e)}}return $(n,u,c),n.elm}}({nodeOps:Go,modules:Sa});Mi&&document.addEventListener("selectionchange",function(){var e=document.activeElement;e&&e.vmodel&&Gn(e,"input")});var ja={inserted:function(e,t,n){if("select"===n.tag){var r=function(){Jn(e,t,n.context)};r(),(Di||Pi)&&setTimeout(r,0)}else"textarea"!==n.tag&&"text"!==e.type&&"password"!==e.type||(e._vModifiers=t.modifiers,t.modifiers.lazy||(Ri||(e.addEventListener("compositionstart",Wn),e.addEventListener("compositionend",Zn)),Mi&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Jn(e,t,n.context);(e.multiple?t.value.some(function(t){return Kn(t,e.options)}):t.value!==t.oldValue&&Kn(t.value,e.options))&&Gn(e,"change")}}},Na={bind:function(e,t,n){var r=t.value;n=Yn(n);var i=n.data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&i&&!Mi?(n.data.show=!0,Hn(n,function(){e.style.display=o})):e.style.display=r?o:"none"},update:function(e,t,n){var r=t.value;r!==t.oldValue&&(n=Yn(n),n.data&&n.data.transition&&!Mi?(n.data.show=!0,r?Hn(n,function(){e.style.display=e.__vOriginalDisplay}):Un(n,function(){e.style.display="none"})):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,i){i||(e.style.display=e.__vOriginalDisplay)}},Ia={model:ja,show:Na},La={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]},Da={name:"transition",props:La,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(function(e){return e.tag}),n.length)){var r=this.mode,i=n[0];if(tr(this.$vnode))return i;var a=Qn(i);if(!a)return i;if(this._leaving)return er(e,i);var s="__transition-"+this._uid+"-";a.key=null==a.key?s+a.tag:o(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var c=(a.data||(a.data={})).transition=Xn(this),l=this._vnode,f=Qn(l);if(a.data.directives&&a.data.directives.some(function(e){return"show"===e.name})&&(a.data.show=!0),f&&f.data&&!nr(a,f)){var p=f&&(f.data.transition=u({},c));if("out-in"===r)return this._leaving=!0,q(p,"afterLeave",function(){t._leaving=!1,t.$forceUpdate()}),er(e,i);if("in-out"===r){var d,v=function(){d()};q(c,"afterEnter",v),q(c,"enterCancelled",v),q(p,"delayLeave",function(e){d=e})}}return i}}},Ma=u({tag:String,moveClass:String},La);delete Ma.mode;var Pa={props:Ma,render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=Xn(this),s=0;s<i.length;s++){var c=i[s];c.tag&&null!=c.key&&0!==String(c.key).indexOf("__vlist")&&(o.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a)}if(r){for(var u=[],l=[],f=0;f<r.length;f++){var p=r[f];p.data.transition=a,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?u.push(p):l.push(p)}this.kept=e(t,null,u),this.removed=l}return e(t,null,o)},beforeUpdate:function(){this.__patch__(this._vnode,this.kept,!1,!0),this._vnode=this.kept},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";if(e.length&&this.hasMove(e[0].elm,t)){e.forEach(rr),e.forEach(ir),e.forEach(or);var n=document.body;n.offsetHeight;e.forEach(function(e){if(e.data.moved){var n=e.elm,r=n.style;Ln(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(wa,n._moveCb=function e(r){r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(wa,e),n._moveCb=null,Dn(n,t))})}})}},methods:{hasMove:function(e,t){if(!ya)return!1;if(null!=this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach(function(e){jn(n,e)}),En(n,t),n.style.display="none",this.$el.appendChild(n);var r=Pn(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}},Ra={Transition:Da,TransitionGroup:Pa};nt.config.mustUseProp=Po,nt.config.isReservedTag=Wo,nt.config.getTagNamespace=yt,nt.config.isUnknownElement=_t,u(nt.options.directives,Ia),u(nt.options.components,Ra),nt.prototype.__patch__=Ii?Ea:d,nt.prototype.$mount=function(e,t){return e=e&&Ii?bt(e):void 0,ae(this,e,t)},setTimeout(function(){Si.devtools&&Bi&&Bi.emit("init",nt)},0);var Fa,Ha=!!Ii&&function(e,t){var n=document.createElement("div");return n.innerHTML='<div a="'+e+'">',n.innerHTML.indexOf(t)>0}("\n","&#10;"),Ua=n("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),Ba=n("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),Va=n("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),za=[/"([^"]*)"+/.source,/'([^']*)'+/.source,/([^\s"'=<>`]+)/.source],Ja=new RegExp("^\\s*"+/([^\s"'<>\/=]+)/.source+"(?:\\s*("+/(?:=)/.source+")\\s*(?:"+za.join("|")+"))?"),Ka="[a-zA-Z_][\\w\\-\\.]*",qa=new RegExp("^<((?:"+Ka+"\\:)?"+Ka+")"),Wa=/^\s*(\/?)>/,Za=new RegExp("^<\\/((?:"+Ka+"\\:)?"+Ka+")[^>]*>"),Ga=/^<!DOCTYPE [^>]+>/i,Ya=/^<!--/,Qa=/^<!\[/,Xa=!1;"x".replace(/x(.)?/g,function(e,t){Xa=""===t});var es,ts,ns,rs,is,os,as,ss,cs,us,ls,fs,ps,ds,vs,hs,ms,gs,ys=n("script,style,textarea",!0),_s={},bs={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n"},$s=/&(?:lt|gt|quot|amp);/g,ws=/&(?:lt|gt|quot|amp|#10);/g,xs=/\{\{((?:.|\n)+?)\}\}/g,Cs=a(function(e){var t=e[0].replace(/[-.*+?^${}()|[\]\/\\]/g,"\\$&"),n=e[1].replace(/[-.*+?^${}()|[\]\/\\]/g,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")}),ks=/^@|^v-on:/,As=/^v-|^@|^:/,Os=/(.*?)\s+(?:in|of)\s+(.*)/,Ts=/\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/,Ss=/:(.*)$/,Es=/^:|^v-bind:/,js=/\.[^.]+/g,Ns=a(ar),Is=/^xmlns:NS\d+/,Ls=/^NS\d+:/,Ds=a(Er),Ms=/^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/,Ps=/^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/,Rs={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Fs=function(e){return"if("+e+")return null;"},Hs={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Fs("$event.target !== $event.currentTarget"),ctrl:Fs("!$event.ctrlKey"),shift:Fs("!$event.shiftKey"),alt:Fs("!$event.altKey"),meta:Fs("!$event.metaKey"),left:Fs("'button' in $event && $event.button !== 0"),middle:Fs("'button' in $event && $event.button !== 1"),right:Fs("'button' in $event && $event.button !== 2")},Us={bind:Hr,cloak:d},Bs={staticKeys:["staticClass"],transformNode:fi,genData:pi},Vs={staticKeys:["staticStyle"],transformNode:di,genData:vi},zs=[Bs,Vs],Js={model:dn,text:hi,html:mi},Ks={expectHTML:!0,modules:zs,directives:Js,isPreTag:qo,isUnaryTag:Ua,mustUseProp:Po,canBeLeftOpenTag:Ba,isReservedTag:Wo,getTagNamespace:yt,staticKeys:function(e){return e.reduce(function(e,t){return e.concat(t.staticKeys||[])},[]).join(",")}(zs)},qs=function(e){function t(t,n){var r=Object.create(e),i=[],o=[];if(r.warn=function(e,t){(t?o:i).push(e)},n){n.modules&&(r.modules=(e.modules||[]).concat(n.modules)),n.directives&&(r.directives=u(Object.create(e.directives),n.directives));for(var a in n)"modules"!==a&&"directives"!==a&&(r[a]=n[a])}var s=ui(t,r);return s.errors=i,s.tips=o,s}function n(e,n,i){n=n||{};var o=n.delimiters?String(n.delimiters)+e:e;if(r[o])return r[o];var a=t(e,n),s={},c=[];s.render=li(a.render,c);var u=a.staticRenderFns.length;s.staticRenderFns=new Array(u);for(var l=0;l<u;l++)s.staticRenderFns[l]=li(a.staticRenderFns[l],c);return r[o]=s}var r=Object.create(null);return{compile:t,compileToFunctions:n}}(Ks),Ws=qs.compileToFunctions,Zs=a(function(e){var t=bt(e);return t&&t.innerHTML}),Gs=nt.prototype.$mount;return nt.prototype.$mount=function(e,t){if((e=e&&bt(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var r=n.template;if(r)if("string"==typeof r)"#"===r.charAt(0)&&(r=Zs(r));else{if(!r.nodeType)return this;r=r.innerHTML}else e&&(r=gi(e));if(r){var i=Ws(r,{shouldDecodeNewlines:Ha,delimiters:n.delimiters},this),o=i.render,a=i.staticRenderFns;n.render=o,n.staticRenderFns=a}}return Gs.call(this,e,t)},nt.compile=Ws,nt});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	file
	copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *             Github.js is freely distributable.
	
	/* eslint valid-jsdoc: ["error", {"requireReturnDescription": false}] */

	var _Gist = __webpack_require__(4);

	var _Gist2 = _interopRequireDefault(_Gist);

	var _User = __webpack_require__(40);

	var _User2 = _interopRequireDefault(_User);

	var _Issue = __webpack_require__(41);

	var _Issue2 = _interopRequireDefault(_Issue);

	var _Search = __webpack_require__(42);

	var _Search2 = _interopRequireDefault(_Search);

	var _RateLimit = __webpack_require__(43);

	var _RateLimit2 = _interopRequireDefault(_RateLimit);

	var _Repository = __webpack_require__(44);

	var _Repository2 = _interopRequireDefault(_Repository);

	var _Organization = __webpack_require__(47);

	var _Organization2 = _interopRequireDefault(_Organization);

	var _Team = __webpack_require__(48);

	var _Team2 = _interopRequireDefault(_Team);

	var _Markdown = __webpack_require__(49);

	var _Markdown2 = _interopRequireDefault(_Markdown);

	var _Project = __webpack_require__(50);

	var _Project2 = _interopRequireDefault(_Project);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * GitHub encapsulates the functionality to create various API wrapper objects.
	 */
	var GitHub = function () {
	  /**
	   * Create a new GitHub.
	   * @param {Requestable.auth} [auth] - the credentials to authenticate to Github. If auth is
	   *                                  not provided requests will be made unauthenticated
	   * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	   */
	  function GitHub(auth) {
	    var apiBase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://api.github.com';

	    _classCallCheck(this, GitHub);

	    this.__apiBase = apiBase;
	    this.__auth = auth || {};
	  }

	  /**
	   * Create a new Gist wrapper
	   * @param {number} [id] - the id for the gist, leave undefined when creating a new gist
	   * @return {Gist}
	   */


	  _createClass(GitHub, [{
	    key: 'getGist',
	    value: function getGist(id) {
	      return new _Gist2.default(id, this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new User wrapper
	     * @param {string} [user] - the name of the user to get information about
	     *                        leave undefined for the authenticated user
	     * @return {User}
	     */

	  }, {
	    key: 'getUser',
	    value: function getUser(user) {
	      return new _User2.default(user, this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new Organization wrapper
	     * @param {string} organization - the name of the organization
	     * @return {Organization}
	     */

	  }, {
	    key: 'getOrganization',
	    value: function getOrganization(organization) {
	      return new _Organization2.default(organization, this.__auth, this.__apiBase);
	    }

	    /**
	     * create a new Team wrapper
	     * @param {string} teamId - the name of the team
	     * @return {team}
	     */

	  }, {
	    key: 'getTeam',
	    value: function getTeam(teamId) {
	      return new _Team2.default(teamId, this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new Repository wrapper
	     * @param {string} user - the user who owns the respository
	     * @param {string} repo - the name of the repository
	     * @return {Repository}
	     */

	  }, {
	    key: 'getRepo',
	    value: function getRepo(user, repo) {
	      return new _Repository2.default(this._getFullName(user, repo), this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new Issue wrapper
	     * @param {string} user - the user who owns the respository
	     * @param {string} repo - the name of the repository
	     * @return {Issue}
	     */

	  }, {
	    key: 'getIssues',
	    value: function getIssues(user, repo) {
	      return new _Issue2.default(this._getFullName(user, repo), this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new Search wrapper
	     * @param {string} query - the query to search for
	     * @return {Search}
	     */

	  }, {
	    key: 'search',
	    value: function search(query) {
	      return new _Search2.default(query, this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new RateLimit wrapper
	     * @return {RateLimit}
	     */

	  }, {
	    key: 'getRateLimit',
	    value: function getRateLimit() {
	      return new _RateLimit2.default(this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new Markdown wrapper
	     * @return {Markdown}
	     */

	  }, {
	    key: 'getMarkdown',
	    value: function getMarkdown() {
	      return new _Markdown2.default(this.__auth, this.__apiBase);
	    }

	    /**
	     * Create a new Project wrapper
	     * @param {string} id - the id of the project
	     * @return {Markdown}
	     */

	  }, {
	    key: 'getProject',
	    value: function getProject(id) {
	      return new _Project2.default(id, this.__auth, this.__apiBase);
	    }

	    /**
	     * Computes the full repository name
	     * @param {string} user - the username (or the full name)
	     * @param {string} repo - the repository name, must not be passed if `user` is the full name
	     * @return {string} the repository's full name
	     */

	  }, {
	    key: '_getFullName',
	    value: function _getFullName(user, repo) {
	      var fullname = user;

	      if (repo) {
	        fullname = user + '/' + repo;
	      }

	      return fullname;
	    }
	  }]);

	  return GitHub;
	}();

	module.exports = GitHub;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdpdEh1Yi5qcyJdLCJuYW1lcyI6WyJHaXRIdWIiLCJhdXRoIiwiYXBpQmFzZSIsIl9fYXBpQmFzZSIsIl9fYXV0aCIsImlkIiwidXNlciIsIm9yZ2FuaXphdGlvbiIsInRlYW1JZCIsInJlcG8iLCJfZ2V0RnVsbE5hbWUiLCJxdWVyeSIsImZ1bGxuYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7cWpCQUFBOzs7Ozs7QUFNQTs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7QUFFQTs7O0lBR01BLE07QUFDSDs7Ozs7O0FBTUEsa0JBQVlDLElBQVosRUFBc0Q7QUFBQSxRQUFwQ0MsT0FBb0MsdUVBQTFCLHdCQUEwQjs7QUFBQTs7QUFDbkQsU0FBS0MsU0FBTCxHQUFpQkQsT0FBakI7QUFDQSxTQUFLRSxNQUFMLEdBQWNILFFBQVEsRUFBdEI7QUFDRjs7QUFFRDs7Ozs7Ozs7OzRCQUtRSSxFLEVBQUk7QUFDVCxhQUFPLG1CQUFTQSxFQUFULEVBQWEsS0FBS0QsTUFBbEIsRUFBMEIsS0FBS0QsU0FBL0IsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7NEJBTVFHLEksRUFBTTtBQUNYLGFBQU8sbUJBQVNBLElBQVQsRUFBZSxLQUFLRixNQUFwQixFQUE0QixLQUFLRCxTQUFqQyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7O29DQUtnQkksWSxFQUFjO0FBQzNCLGFBQU8sMkJBQWlCQSxZQUFqQixFQUErQixLQUFLSCxNQUFwQyxFQUE0QyxLQUFLRCxTQUFqRCxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OzRCQUtRSyxNLEVBQVE7QUFDYixhQUFPLG1CQUFTQSxNQUFULEVBQWlCLEtBQUtKLE1BQXRCLEVBQThCLEtBQUtELFNBQW5DLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzRCQU1RRyxJLEVBQU1HLEksRUFBTTtBQUNqQixhQUFPLHlCQUFlLEtBQUtDLFlBQUwsQ0FBa0JKLElBQWxCLEVBQXdCRyxJQUF4QixDQUFmLEVBQThDLEtBQUtMLE1BQW5ELEVBQTJELEtBQUtELFNBQWhFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzhCQU1VRyxJLEVBQU1HLEksRUFBTTtBQUNuQixhQUFPLG9CQUFVLEtBQUtDLFlBQUwsQ0FBa0JKLElBQWxCLEVBQXdCRyxJQUF4QixDQUFWLEVBQXlDLEtBQUtMLE1BQTlDLEVBQXNELEtBQUtELFNBQTNELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7MkJBS09RLEssRUFBTztBQUNYLGFBQU8scUJBQVdBLEtBQVgsRUFBa0IsS0FBS1AsTUFBdkIsRUFBK0IsS0FBS0QsU0FBcEMsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7O21DQUllO0FBQ1osYUFBTyx3QkFBYyxLQUFLQyxNQUFuQixFQUEyQixLQUFLRCxTQUFoQyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7a0NBSWM7QUFDWCxhQUFPLHVCQUFhLEtBQUtDLE1BQWxCLEVBQTBCLEtBQUtELFNBQS9CLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7K0JBS1dFLEUsRUFBSTtBQUNaLGFBQU8sc0JBQVlBLEVBQVosRUFBZ0IsS0FBS0QsTUFBckIsRUFBNkIsS0FBS0QsU0FBbEMsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7aUNBTWFHLEksRUFBTUcsSSxFQUFNO0FBQ3RCLFVBQUlHLFdBQVdOLElBQWY7O0FBRUEsVUFBSUcsSUFBSixFQUFVO0FBQ1BHLG1CQUFjTixJQUFkLFNBQXNCRyxJQUF0QjtBQUNGOztBQUVELGFBQU9HLFFBQVA7QUFDRjs7Ozs7O0FBR0pDLE9BQU9DLE9BQVAsR0FBaUJkLE1BQWpCIiwiZmlsZSI6IkdpdEh1Yi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEBjb3B5cmlnaHQgIDIwMTMgTWljaGFlbCBBdWZyZWl0ZXIgKERldmVsb3BtZW50IFNlZWQpIGFuZCAyMDE2IFlhaG9vIEluYy5cbiAqIEBsaWNlbnNlICAgIExpY2Vuc2VkIHVuZGVyIHtAbGluayBodHRwczovL3NwZHgub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZS1DbGVhci5odG1sIEJTRC0zLUNsYXVzZS1DbGVhcn0uXG4gKiAgICAgICAgICAgICBHaXRodWIuanMgaXMgZnJlZWx5IGRpc3RyaWJ1dGFibGUuXG4gKi9cbi8qIGVzbGludCB2YWxpZC1qc2RvYzogW1wiZXJyb3JcIiwge1wicmVxdWlyZVJldHVybkRlc2NyaXB0aW9uXCI6IGZhbHNlfV0gKi9cblxuaW1wb3J0IEdpc3QgZnJvbSAnLi9HaXN0JztcbmltcG9ydCBVc2VyIGZyb20gJy4vVXNlcic7XG5pbXBvcnQgSXNzdWUgZnJvbSAnLi9Jc3N1ZSc7XG5pbXBvcnQgU2VhcmNoIGZyb20gJy4vU2VhcmNoJztcbmltcG9ydCBSYXRlTGltaXQgZnJvbSAnLi9SYXRlTGltaXQnO1xuaW1wb3J0IFJlcG9zaXRvcnkgZnJvbSAnLi9SZXBvc2l0b3J5JztcbmltcG9ydCBPcmdhbml6YXRpb24gZnJvbSAnLi9Pcmdhbml6YXRpb24nO1xuaW1wb3J0IFRlYW0gZnJvbSAnLi9UZWFtJztcbmltcG9ydCBNYXJrZG93biBmcm9tICcuL01hcmtkb3duJztcbmltcG9ydCBQcm9qZWN0IGZyb20gJy4vUHJvamVjdCc7XG5cbi8qKlxuICogR2l0SHViIGVuY2Fwc3VsYXRlcyB0aGUgZnVuY3Rpb25hbGl0eSB0byBjcmVhdGUgdmFyaW91cyBBUEkgd3JhcHBlciBvYmplY3RzLlxuICovXG5jbGFzcyBHaXRIdWIge1xuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgR2l0SHViLlxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5hdXRofSBbYXV0aF0gLSB0aGUgY3JlZGVudGlhbHMgdG8gYXV0aGVudGljYXRlIHRvIEdpdGh1Yi4gSWYgYXV0aCBpc1xuICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90IHByb3ZpZGVkIHJlcXVlc3RzIHdpbGwgYmUgbWFkZSB1bmF1dGhlbnRpY2F0ZWRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbYXBpQmFzZT1odHRwczovL2FwaS5naXRodWIuY29tXSAtIHRoZSBiYXNlIEdpdGh1YiBBUEkgVVJMXG4gICAgKi9cbiAgIGNvbnN0cnVjdG9yKGF1dGgsIGFwaUJhc2UgPSAnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbScpIHtcbiAgICAgIHRoaXMuX19hcGlCYXNlID0gYXBpQmFzZTtcbiAgICAgIHRoaXMuX19hdXRoID0gYXV0aCB8fCB7fTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgR2lzdCB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge251bWJlcn0gW2lkXSAtIHRoZSBpZCBmb3IgdGhlIGdpc3QsIGxlYXZlIHVuZGVmaW5lZCB3aGVuIGNyZWF0aW5nIGEgbmV3IGdpc3RcbiAgICAqIEByZXR1cm4ge0dpc3R9XG4gICAgKi9cbiAgIGdldEdpc3QoaWQpIHtcbiAgICAgIHJldHVybiBuZXcgR2lzdChpZCwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgVXNlciB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW3VzZXJdIC0gdGhlIG5hbWUgb2YgdGhlIHVzZXIgdG8gZ2V0IGluZm9ybWF0aW9uIGFib3V0XG4gICAgKiAgICAgICAgICAgICAgICAgICAgICAgIGxlYXZlIHVuZGVmaW5lZCBmb3IgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlclxuICAgICogQHJldHVybiB7VXNlcn1cbiAgICAqL1xuICAgZ2V0VXNlcih1c2VyKSB7XG4gICAgICByZXR1cm4gbmV3IFVzZXIodXNlciwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgT3JnYW5pemF0aW9uIHdyYXBwZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcmdhbml6YXRpb24gLSB0aGUgbmFtZSBvZiB0aGUgb3JnYW5pemF0aW9uXG4gICAgKiBAcmV0dXJuIHtPcmdhbml6YXRpb259XG4gICAgKi9cbiAgIGdldE9yZ2FuaXphdGlvbihvcmdhbml6YXRpb24pIHtcbiAgICAgIHJldHVybiBuZXcgT3JnYW5pemF0aW9uKG9yZ2FuaXphdGlvbiwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBjcmVhdGUgYSBuZXcgVGVhbSB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gdGVhbUlkIC0gdGhlIG5hbWUgb2YgdGhlIHRlYW1cbiAgICAqIEByZXR1cm4ge3RlYW19XG4gICAgKi9cbiAgIGdldFRlYW0odGVhbUlkKSB7XG4gICAgICByZXR1cm4gbmV3IFRlYW0odGVhbUlkLCB0aGlzLl9fYXV0aCwgdGhpcy5fX2FwaUJhc2UpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyBSZXBvc2l0b3J5IHdyYXBwZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyIC0gdGhlIHVzZXIgd2hvIG93bnMgdGhlIHJlc3Bvc2l0b3J5XG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcmVwbyAtIHRoZSBuYW1lIG9mIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAcmV0dXJuIHtSZXBvc2l0b3J5fVxuICAgICovXG4gICBnZXRSZXBvKHVzZXIsIHJlcG8pIHtcbiAgICAgIHJldHVybiBuZXcgUmVwb3NpdG9yeSh0aGlzLl9nZXRGdWxsTmFtZSh1c2VyLCByZXBvKSwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgSXNzdWUgd3JhcHBlclxuICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXIgLSB0aGUgdXNlciB3aG8gb3ducyB0aGUgcmVzcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZXBvIC0gdGhlIG5hbWUgb2YgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEByZXR1cm4ge0lzc3VlfVxuICAgICovXG4gICBnZXRJc3N1ZXModXNlciwgcmVwbykge1xuICAgICAgcmV0dXJuIG5ldyBJc3N1ZSh0aGlzLl9nZXRGdWxsTmFtZSh1c2VyLCByZXBvKSwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgU2VhcmNoIHdyYXBwZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBxdWVyeSAtIHRoZSBxdWVyeSB0byBzZWFyY2ggZm9yXG4gICAgKiBAcmV0dXJuIHtTZWFyY2h9XG4gICAgKi9cbiAgIHNlYXJjaChxdWVyeSkge1xuICAgICAgcmV0dXJuIG5ldyBTZWFyY2gocXVlcnksIHRoaXMuX19hdXRoLCB0aGlzLl9fYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IFJhdGVMaW1pdCB3cmFwcGVyXG4gICAgKiBAcmV0dXJuIHtSYXRlTGltaXR9XG4gICAgKi9cbiAgIGdldFJhdGVMaW1pdCgpIHtcbiAgICAgIHJldHVybiBuZXcgUmF0ZUxpbWl0KHRoaXMuX19hdXRoLCB0aGlzLl9fYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IE1hcmtkb3duIHdyYXBwZXJcbiAgICAqIEByZXR1cm4ge01hcmtkb3dufVxuICAgICovXG4gICBnZXRNYXJrZG93bigpIHtcbiAgICAgIHJldHVybiBuZXcgTWFya2Rvd24odGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgUHJvamVjdCB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgLSB0aGUgaWQgb2YgdGhlIHByb2plY3RcbiAgICAqIEByZXR1cm4ge01hcmtkb3dufVxuICAgICovXG4gICBnZXRQcm9qZWN0KGlkKSB7XG4gICAgICByZXR1cm4gbmV3IFByb2plY3QoaWQsIHRoaXMuX19hdXRoLCB0aGlzLl9fYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ29tcHV0ZXMgdGhlIGZ1bGwgcmVwb3NpdG9yeSBuYW1lXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlciAtIHRoZSB1c2VybmFtZSAob3IgdGhlIGZ1bGwgbmFtZSlcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZXBvIC0gdGhlIHJlcG9zaXRvcnkgbmFtZSwgbXVzdCBub3QgYmUgcGFzc2VkIGlmIGB1c2VyYCBpcyB0aGUgZnVsbCBuYW1lXG4gICAgKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSByZXBvc2l0b3J5J3MgZnVsbCBuYW1lXG4gICAgKi9cbiAgIF9nZXRGdWxsTmFtZSh1c2VyLCByZXBvKSB7XG4gICAgICBsZXQgZnVsbG5hbWUgPSB1c2VyO1xuXG4gICAgICBpZiAocmVwbykge1xuICAgICAgICAgZnVsbG5hbWUgPSBgJHt1c2VyfS8ke3JlcG99YDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bGxuYW1lO1xuICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdpdEh1YjtcbiJdfQ==
	//# sourceMappingURL=GitHub.js.map


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A Gist can retrieve and modify gists.
	 */
	var Gist = function (_Requestable) {
	  _inherits(Gist, _Requestable);

	  /**
	   * Create a Gist.
	   * @param {string} id - the id of the gist (not required when creating a gist)
	   * @param {Requestable.auth} [auth] - information required to authenticate to Github
	   * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	   */
	  function Gist(id, auth, apiBase) {
	    _classCallCheck(this, Gist);

	    var _this = _possibleConstructorReturn(this, (Gist.__proto__ || Object.getPrototypeOf(Gist)).call(this, auth, apiBase));

	    _this.__id = id;
	    return _this;
	  }

	  /**
	   * Fetch a gist.
	   * @see https://developer.github.com/v3/gists/#get-a-single-gist
	   * @param {Requestable.callback} [cb] - will receive the gist
	   * @return {Promise} - the Promise for the http request
	   */


	  _createClass(Gist, [{
	    key: 'read',
	    value: function read(cb) {
	      return this._request('GET', '/gists/' + this.__id, null, cb);
	    }

	    /**
	     * Create a new gist.
	     * @see https://developer.github.com/v3/gists/#create-a-gist
	     * @param {Object} gist - the data for the new gist
	     * @param {Requestable.callback} [cb] - will receive the new gist upon creation
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'create',
	    value: function create(gist, cb) {
	      var _this2 = this;

	      return this._request('POST', '/gists', gist, cb).then(function (response) {
	        _this2.__id = response.data.id;
	        return response;
	      });
	    }

	    /**
	     * Delete a gist.
	     * @see https://developer.github.com/v3/gists/#delete-a-gist
	     * @param {Requestable.callback} [cb] - will receive true if the request succeeds
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'delete',
	    value: function _delete(cb) {
	      return this._request('DELETE', '/gists/' + this.__id, null, cb);
	    }

	    /**
	     * Fork a gist.
	     * @see https://developer.github.com/v3/gists/#fork-a-gist
	     * @param {Requestable.callback} [cb] - the function that will receive the gist
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'fork',
	    value: function fork(cb) {
	      return this._request('POST', '/gists/' + this.__id + '/forks', null, cb);
	    }

	    /**
	     * Update a gist.
	     * @see https://developer.github.com/v3/gists/#edit-a-gist
	     * @param {Object} gist - the new data for the gist
	     * @param {Requestable.callback} [cb] - the function that receives the API result
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'update',
	    value: function update(gist, cb) {
	      return this._request('PATCH', '/gists/' + this.__id, gist, cb);
	    }

	    /**
	     * Star a gist.
	     * @see https://developer.github.com/v3/gists/#star-a-gist
	     * @param {Requestable.callback} [cb] - will receive true if the request is successful
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'star',
	    value: function star(cb) {
	      return this._request('PUT', '/gists/' + this.__id + '/star', null, cb);
	    }

	    /**
	     * Unstar a gist.
	     * @see https://developer.github.com/v3/gists/#unstar-a-gist
	     * @param {Requestable.callback} [cb] - will receive true if the request is successful
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'unstar',
	    value: function unstar(cb) {
	      return this._request('DELETE', '/gists/' + this.__id + '/star', null, cb);
	    }

	    /**
	     * Check if a gist is starred by the user.
	     * @see https://developer.github.com/v3/gists/#check-if-a-gist-is-starred
	     * @param {Requestable.callback} [cb] - will receive true if the gist is starred and false if the gist is not starred
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'isStarred',
	    value: function isStarred(cb) {
	      return this._request204or404('/gists/' + this.__id + '/star', null, cb);
	    }

	    /**
	     * List the gist's comments
	     * @see https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist
	     * @param {Requestable.callback} [cb] - will receive the array of comments
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listComments',
	    value: function listComments(cb) {
	      return this._requestAllPages('/gists/' + this.__id + '/comments', null, cb);
	    }

	    /**
	     * Fetch one of the gist's comments
	     * @see https://developer.github.com/v3/gists/comments/#get-a-single-comment
	     * @param {number} comment - the id of the comment
	     * @param {Requestable.callback} [cb] - will receive the comment
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'getComment',
	    value: function getComment(comment, cb) {
	      return this._request('GET', '/gists/' + this.__id + '/comments/' + comment, null, cb);
	    }

	    /**
	     * Comment on a gist
	     * @see https://developer.github.com/v3/gists/comments/#create-a-comment
	     * @param {string} comment - the comment to add
	     * @param {Requestable.callback} [cb] - the function that receives the API result
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'createComment',
	    value: function createComment(comment, cb) {
	      return this._request('POST', '/gists/' + this.__id + '/comments', { body: comment }, cb);
	    }

	    /**
	     * Edit a comment on the gist
	     * @see https://developer.github.com/v3/gists/comments/#edit-a-comment
	     * @param {number} comment - the id of the comment
	     * @param {string} body - the new comment
	     * @param {Requestable.callback} [cb] - will receive the modified comment
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'editComment',
	    value: function editComment(comment, body, cb) {
	      return this._request('PATCH', '/gists/' + this.__id + '/comments/' + comment, { body: body }, cb);
	    }

	    /**
	     * Delete a comment on the gist.
	     * @see https://developer.github.com/v3/gists/comments/#delete-a-comment
	     * @param {number} comment - the id of the comment
	     * @param {Requestable.callback} [cb] - will receive true if the request succeeds
	     * @return {Promise} - the Promise for the http request
	     */

	  }, {
	    key: 'deleteComment',
	    value: function deleteComment(comment, cb) {
	      return this._request('DELETE', '/gists/' + this.__id + '/comments/' + comment, null, cb);
	    }
	  }]);

	  return Gist;
	}(_Requestable3.default);

	module.exports = Gist;
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Gist.js.map


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _axios = __webpack_require__(6);

	var _axios2 = _interopRequireDefault(_axios);

	var _debug = __webpack_require__(32);

	var _debug2 = _interopRequireDefault(_debug);

	var _jsBase = __webpack_require__(35);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *             Github.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var log = (0, _debug2.default)('github:request');

	/**
	 * The error structure returned when a network call fails
	 */

	var ResponseError = function (_Error) {
	   _inherits(ResponseError, _Error);

	   /**
	    * Construct a new ResponseError
	    * @param {string} message - an message to return instead of the the default error message
	    * @param {string} path - the requested path
	    * @param {Object} response - the object returned by Axios
	    */
	   function ResponseError(message, path, response) {
	      _classCallCheck(this, ResponseError);

	      var _this = _possibleConstructorReturn(this, (ResponseError.__proto__ || Object.getPrototypeOf(ResponseError)).call(this, message));

	      _this.path = path;
	      _this.request = response.config;
	      _this.response = (response || {}).response || response;
	      _this.status = response.status;
	      return _this;
	   }

	   return ResponseError;
	}(Error);

	/**
	 * Requestable wraps the logic for making http requests to the API
	 */


	var Requestable = function () {
	   /**
	    * Either a username and password or an oauth token for Github
	    * @typedef {Object} Requestable.auth
	    * @prop {string} [username] - the Github username
	    * @prop {string} [password] - the user's password
	    * @prop {token} [token] - an OAuth token
	    */
	   /**
	    * Initialize the http internals.
	    * @param {Requestable.auth} [auth] - the credentials to authenticate to Github. If auth is
	    *                                  not provided request will be made unauthenticated
	    * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	    * @param {string} [AcceptHeader=v3] - the accept header for the requests
	    */
	   function Requestable(auth, apiBase, AcceptHeader) {
	      _classCallCheck(this, Requestable);

	      this.__apiBase = apiBase || 'https://api.github.com';
	      this.__auth = {
	         token: auth.token,
	         username: auth.username,
	         password: auth.password
	      };
	      this.__AcceptHeader = AcceptHeader || 'v3';

	      if (auth.token) {
	         this.__authorizationHeader = 'token ' + auth.token;
	      } else if (auth.username && auth.password) {
	         this.__authorizationHeader = 'Basic ' + _jsBase.Base64.encode(auth.username + ':' + auth.password);
	      }
	   }

	   /**
	    * Compute the URL to use to make a request.
	    * @private
	    * @param {string} path - either a URL relative to the API base or an absolute URL
	    * @return {string} - the URL to use
	    */


	   _createClass(Requestable, [{
	      key: '__getURL',
	      value: function __getURL(path) {
	         var url = path;

	         if (path.indexOf('//') === -1) {
	            url = this.__apiBase + path;
	         }

	         var newCacheBuster = 'timestamp=' + new Date().getTime();
	         return url.replace(/(timestamp=\d+)/, newCacheBuster);
	      }

	      /**
	       * Compute the headers required for an API request.
	       * @private
	       * @param {boolean} raw - if the request should be treated as JSON or as a raw request
	       * @param {string} AcceptHeader - the accept header for the request
	       * @return {Object} - the headers to use in the request
	       */

	   }, {
	      key: '__getRequestHeaders',
	      value: function __getRequestHeaders(raw, AcceptHeader) {
	         var headers = {
	            'Content-Type': 'application/json;charset=UTF-8',
	            'Accept': 'application/vnd.github.' + (AcceptHeader || this.__AcceptHeader)
	         };

	         if (raw) {
	            headers.Accept += '.raw';
	         }
	         headers.Accept += '+json';

	         if (this.__authorizationHeader) {
	            headers.Authorization = this.__authorizationHeader;
	         }

	         return headers;
	      }

	      /**
	       * Sets the default options for API requests
	       * @protected
	       * @param {Object} [requestOptions={}] - the current options for the request
	       * @return {Object} - the options to pass to the request
	       */

	   }, {
	      key: '_getOptionsWithDefaults',
	      value: function _getOptionsWithDefaults() {
	         var requestOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	         if (!(requestOptions.visibility || requestOptions.affiliation)) {
	            requestOptions.type = requestOptions.type || 'all';
	         }
	         requestOptions.sort = requestOptions.sort || 'updated';
	         requestOptions.per_page = requestOptions.per_page || '100'; // eslint-disable-line

	         return requestOptions;
	      }

	      /**
	       * if a `Date` is passed to this function it will be converted to an ISO string
	       * @param {*} date - the object to attempt to cooerce into an ISO date string
	       * @return {string} - the ISO representation of `date` or whatever was passed in if it was not a date
	       */

	   }, {
	      key: '_dateToISO',
	      value: function _dateToISO(date) {
	         if (date && date instanceof Date) {
	            date = date.toISOString();
	         }

	         return date;
	      }

	      /**
	       * A function that receives the result of the API request.
	       * @callback Requestable.callback
	       * @param {Requestable.Error} error - the error returned by the API or `null`
	       * @param {(Object|true)} result - the data returned by the API or `true` if the API returns `204 No Content`
	       * @param {Object} request - the raw {@linkcode https://github.com/mzabriskie/axios#response-schema Response}
	       */
	      /**
	       * Make a request.
	       * @param {string} method - the method for the request (GET, PUT, POST, DELETE)
	       * @param {string} path - the path for the request
	       * @param {*} [data] - the data to send to the server. For HTTP methods that don't have a body the data
	       *                   will be sent as query parameters
	       * @param {Requestable.callback} [cb] - the callback for the request
	       * @param {boolean} [raw=false] - if the request should be sent as raw. If this is a falsy value then the
	       *                              request will be made as JSON
	       * @return {Promise} - the Promise for the http request
	       */

	   }, {
	      key: '_request',
	      value: function _request(method, path, data, cb, raw) {
	         var url = this.__getURL(path);

	         var AcceptHeader = (data || {}).AcceptHeader;
	         if (AcceptHeader) {
	            delete data.AcceptHeader;
	         }
	         var headers = this.__getRequestHeaders(raw, AcceptHeader);

	         var queryParams = {};

	         var shouldUseDataAsParams = data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && methodHasNoBody(method);
	         if (shouldUseDataAsParams) {
	            queryParams = data;
	            data = undefined;
	         }

	         var config = {
	            url: url,
	            method: method,
	            headers: headers,
	            params: queryParams,
	            data: data,
	            responseType: raw ? 'text' : 'json'
	         };

	         log(config.method + ' to ' + config.url);
	         var requestPromise = (0, _axios2.default)(config).catch(callbackErrorOrThrow(cb, path));

	         if (cb) {
	            requestPromise.then(function (response) {
	               if (response.data && Object.keys(response.data).length > 0) {
	                  // When data has results
	                  cb(null, response.data, response);
	               } else if (config.method !== 'GET' && Object.keys(response.data).length < 1) {
	                  // True when successful submit a request and receive a empty object
	                  cb(null, response.status < 300, response);
	               } else {
	                  cb(null, response.data, response);
	               }
	            });
	         }

	         return requestPromise;
	      }

	      /**
	       * Make a request to an endpoint the returns 204 when true and 404 when false
	       * @param {string} path - the path to request
	       * @param {Object} data - any query parameters for the request
	       * @param {Requestable.callback} cb - the callback that will receive `true` or `false`
	       * @param {method} [method=GET] - HTTP Method to use
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: '_request204or404',
	      value: function _request204or404(path, data, cb) {
	         var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';

	         return this._request(method, path, data).then(function success(response) {
	            if (cb) {
	               cb(null, true, response);
	            }
	            return true;
	         }, function failure(response) {
	            if (response.response.status === 404) {
	               if (cb) {
	                  cb(null, false, response);
	               }
	               return false;
	            }

	            if (cb) {
	               cb(response);
	            }
	            throw response;
	         });
	      }

	      /**
	       * Make a request and fetch all the available data. Github will paginate responses so for queries
	       * that might span multiple pages this method is preferred to {@link Requestable#request}
	       * @param {string} path - the path to request
	       * @param {Object} options - the query parameters to include
	       * @param {Requestable.callback} [cb] - the function to receive the data. The returned data will always be an array.
	       * @param {Object[]} results - the partial results. This argument is intended for interal use only.
	       * @return {Promise} - a promise which will resolve when all pages have been fetched
	       * @deprecated This will be folded into {@link Requestable#_request} in the 2.0 release.
	       */

	   }, {
	      key: '_requestAllPages',
	      value: function _requestAllPages(path, options, cb, results) {
	         var _this2 = this;

	         results = results || [];

	         return this._request('GET', path, options).then(function (response) {
	            var _results;

	            var thisGroup = void 0;
	            if (response.data instanceof Array) {
	               thisGroup = response.data;
	            } else if (response.data.items instanceof Array) {
	               thisGroup = response.data.items;
	            } else {
	               var message = 'cannot figure out how to append ' + response.data + ' to the result set';
	               throw new ResponseError(message, path, response);
	            }
	            (_results = results).push.apply(_results, _toConsumableArray(thisGroup));

	            var nextUrl = getNextPage(response.headers.link);
	            if (nextUrl) {
	               log('getting next page: ' + nextUrl);
	               return _this2._requestAllPages(nextUrl, options, cb, results);
	            }

	            if (cb) {
	               cb(null, results, response);
	            }

	            response.data = results;
	            return response;
	         }).catch(callbackErrorOrThrow(cb, path));
	      }
	   }]);

	   return Requestable;
	}();

	module.exports = Requestable;

	// ////////////////////////// //
	//  Private helper functions  //
	// ////////////////////////// //
	var METHODS_WITH_NO_BODY = ['GET', 'HEAD', 'DELETE'];
	function methodHasNoBody(method) {
	   return METHODS_WITH_NO_BODY.indexOf(method) !== -1;
	}

	function getNextPage() {
	   var linksHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

	   var links = linksHeader.split(/\s*,\s*/); // splits and strips the urls
	   return links.reduce(function (nextUrl, link) {
	      if (link.search(/rel="next"/) !== -1) {
	         return (link.match(/<(.*)>/) || [])[1];
	      }

	      return nextUrl;
	   }, undefined);
	}

	function callbackErrorOrThrow(cb, path) {
	   return function handler(object) {
	      var error = void 0;
	      if (object.hasOwnProperty('config')) {
	         var _object$response = object.response,
	             status = _object$response.status,
	             statusText = _object$response.statusText,
	             _object$config = object.config,
	             method = _object$config.method,
	             url = _object$config.url;

	         var message = status + ' error making request ' + method + ' ' + url + ': "' + statusText + '"';
	         error = new ResponseError(message, path, object);
	         log(message + ' ' + JSON.stringify(object.data));
	      } else {
	         error = object;
	      }
	      if (cb) {
	         log('going to error callback');
	         cb(error);
	      } else {
	         log('throwing error');
	         throw error;
	      }
	   };
	}
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Requestable.js.map


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(7);

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);
	var bind = __webpack_require__(9);
	var Axios = __webpack_require__(10);
	var defaults = __webpack_require__(11);

	/**
	 * Create an instance of Axios
	 *
	 * @param {Object} defaultConfig The default config for the instance
	 * @return {Axios} A new instance of Axios
	 */
	function createInstance(defaultConfig) {
	  var context = new Axios(defaultConfig);
	  var instance = bind(Axios.prototype.request, context);

	  // Copy axios.prototype to instance
	  utils.extend(instance, Axios.prototype, context);

	  // Copy context to instance
	  utils.extend(instance, context);

	  return instance;
	}

	// Create the default instance to be exported
	var axios = createInstance(defaults);

	// Expose Axios class to allow class inheritance
	axios.Axios = Axios;

	// Factory for creating new instances
	axios.create = function create(instanceConfig) {
	  return createInstance(utils.merge(defaults, instanceConfig));
	};

	// Expose Cancel & CancelToken
	axios.Cancel = __webpack_require__(29);
	axios.CancelToken = __webpack_require__(30);
	axios.isCancel = __webpack_require__(26);

	// Expose all/spread
	axios.all = function all(promises) {
	  return Promise.all(promises);
	};
	axios.spread = __webpack_require__(31);

	module.exports = axios;

	// Allow use of default import syntax in TypeScript
	module.exports.default = axios;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var bind = __webpack_require__(9);

	/*global toString:true*/

	// utils is a library of generic helper functions non-specific to axios

	var toString = Object.prototype.toString;

	/**
	 * Determine if a value is an Array
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an Array, otherwise false
	 */
	function isArray(val) {
	  return toString.call(val) === '[object Array]';
	}

	/**
	 * Determine if a value is an ArrayBuffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
	 */
	function isArrayBuffer(val) {
	  return toString.call(val) === '[object ArrayBuffer]';
	}

	/**
	 * Determine if a value is a FormData
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an FormData, otherwise false
	 */
	function isFormData(val) {
	  return (typeof FormData !== 'undefined') && (val instanceof FormData);
	}

	/**
	 * Determine if a value is a view on an ArrayBuffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
	 */
	function isArrayBufferView(val) {
	  var result;
	  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
	    result = ArrayBuffer.isView(val);
	  } else {
	    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
	  }
	  return result;
	}

	/**
	 * Determine if a value is a String
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a String, otherwise false
	 */
	function isString(val) {
	  return typeof val === 'string';
	}

	/**
	 * Determine if a value is a Number
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Number, otherwise false
	 */
	function isNumber(val) {
	  return typeof val === 'number';
	}

	/**
	 * Determine if a value is undefined
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if the value is undefined, otherwise false
	 */
	function isUndefined(val) {
	  return typeof val === 'undefined';
	}

	/**
	 * Determine if a value is an Object
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an Object, otherwise false
	 */
	function isObject(val) {
	  return val !== null && typeof val === 'object';
	}

	/**
	 * Determine if a value is a Date
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Date, otherwise false
	 */
	function isDate(val) {
	  return toString.call(val) === '[object Date]';
	}

	/**
	 * Determine if a value is a File
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a File, otherwise false
	 */
	function isFile(val) {
	  return toString.call(val) === '[object File]';
	}

	/**
	 * Determine if a value is a Blob
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Blob, otherwise false
	 */
	function isBlob(val) {
	  return toString.call(val) === '[object Blob]';
	}

	/**
	 * Determine if a value is a Function
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Function, otherwise false
	 */
	function isFunction(val) {
	  return toString.call(val) === '[object Function]';
	}

	/**
	 * Determine if a value is a Stream
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Stream, otherwise false
	 */
	function isStream(val) {
	  return isObject(val) && isFunction(val.pipe);
	}

	/**
	 * Determine if a value is a URLSearchParams object
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
	 */
	function isURLSearchParams(val) {
	  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
	}

	/**
	 * Trim excess whitespace off the beginning and end of a string
	 *
	 * @param {String} str The String to trim
	 * @returns {String} The String freed of excess whitespace
	 */
	function trim(str) {
	  return str.replace(/^\s*/, '').replace(/\s*$/, '');
	}

	/**
	 * Determine if we're running in a standard browser environment
	 *
	 * This allows axios to run in a web worker, and react-native.
	 * Both environments support XMLHttpRequest, but not fully standard globals.
	 *
	 * web workers:
	 *  typeof window -> undefined
	 *  typeof document -> undefined
	 *
	 * react-native:
	 *  typeof document.createElement -> undefined
	 */
	function isStandardBrowserEnv() {
	  return (
	    typeof window !== 'undefined' &&
	    typeof document !== 'undefined' &&
	    typeof document.createElement === 'function'
	  );
	}

	/**
	 * Iterate over an Array or an Object invoking a function for each item.
	 *
	 * If `obj` is an Array callback will be called passing
	 * the value, index, and complete array for each item.
	 *
	 * If 'obj' is an Object callback will be called passing
	 * the value, key, and complete object for each property.
	 *
	 * @param {Object|Array} obj The object to iterate
	 * @param {Function} fn The callback to invoke for each item
	 */
	function forEach(obj, fn) {
	  // Don't bother if no value provided
	  if (obj === null || typeof obj === 'undefined') {
	    return;
	  }

	  // Force an array if not already something iterable
	  if (typeof obj !== 'object' && !isArray(obj)) {
	    /*eslint no-param-reassign:0*/
	    obj = [obj];
	  }

	  if (isArray(obj)) {
	    // Iterate over array values
	    for (var i = 0, l = obj.length; i < l; i++) {
	      fn.call(null, obj[i], i, obj);
	    }
	  } else {
	    // Iterate over object keys
	    for (var key in obj) {
	      if (Object.prototype.hasOwnProperty.call(obj, key)) {
	        fn.call(null, obj[key], key, obj);
	      }
	    }
	  }
	}

	/**
	 * Accepts varargs expecting each argument to be an object, then
	 * immutably merges the properties of each object and returns result.
	 *
	 * When multiple objects contain the same key the later object in
	 * the arguments list will take precedence.
	 *
	 * Example:
	 *
	 * ```js
	 * var result = merge({foo: 123}, {foo: 456});
	 * console.log(result.foo); // outputs 456
	 * ```
	 *
	 * @param {Object} obj1 Object to merge
	 * @returns {Object} Result of all merge properties
	 */
	function merge(/* obj1, obj2, obj3, ... */) {
	  var result = {};
	  function assignValue(val, key) {
	    if (typeof result[key] === 'object' && typeof val === 'object') {
	      result[key] = merge(result[key], val);
	    } else {
	      result[key] = val;
	    }
	  }

	  for (var i = 0, l = arguments.length; i < l; i++) {
	    forEach(arguments[i], assignValue);
	  }
	  return result;
	}

	/**
	 * Extends object a by mutably adding to it the properties of object b.
	 *
	 * @param {Object} a The object to be extended
	 * @param {Object} b The object to copy properties from
	 * @param {Object} thisArg The object to bind function to
	 * @return {Object} The resulting value of object a
	 */
	function extend(a, b, thisArg) {
	  forEach(b, function assignValue(val, key) {
	    if (thisArg && typeof val === 'function') {
	      a[key] = bind(val, thisArg);
	    } else {
	      a[key] = val;
	    }
	  });
	  return a;
	}

	module.exports = {
	  isArray: isArray,
	  isArrayBuffer: isArrayBuffer,
	  isFormData: isFormData,
	  isArrayBufferView: isArrayBufferView,
	  isString: isString,
	  isNumber: isNumber,
	  isObject: isObject,
	  isUndefined: isUndefined,
	  isDate: isDate,
	  isFile: isFile,
	  isBlob: isBlob,
	  isFunction: isFunction,
	  isStream: isStream,
	  isURLSearchParams: isURLSearchParams,
	  isStandardBrowserEnv: isStandardBrowserEnv,
	  forEach: forEach,
	  merge: merge,
	  extend: extend,
	  trim: trim
	};


/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function bind(fn, thisArg) {
	  return function wrap() {
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }
	    return fn.apply(thisArg, args);
	  };
	};


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var defaults = __webpack_require__(11);
	var utils = __webpack_require__(8);
	var InterceptorManager = __webpack_require__(23);
	var dispatchRequest = __webpack_require__(24);
	var isAbsoluteURL = __webpack_require__(27);
	var combineURLs = __webpack_require__(28);

	/**
	 * Create a new instance of Axios
	 *
	 * @param {Object} instanceConfig The default config for the instance
	 */
	function Axios(instanceConfig) {
	  this.defaults = instanceConfig;
	  this.interceptors = {
	    request: new InterceptorManager(),
	    response: new InterceptorManager()
	  };
	}

	/**
	 * Dispatch a request
	 *
	 * @param {Object} config The config specific for this request (merged with this.defaults)
	 */
	Axios.prototype.request = function request(config) {
	  /*eslint no-param-reassign:0*/
	  // Allow for axios('example/url'[, config]) a la fetch API
	  if (typeof config === 'string') {
	    config = utils.merge({
	      url: arguments[0]
	    }, arguments[1]);
	  }

	  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);

	  // Support baseURL config
	  if (config.baseURL && !isAbsoluteURL(config.url)) {
	    config.url = combineURLs(config.baseURL, config.url);
	  }

	  // Hook up interceptors middleware
	  var chain = [dispatchRequest, undefined];
	  var promise = Promise.resolve(config);

	  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
	    chain.unshift(interceptor.fulfilled, interceptor.rejected);
	  });

	  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
	    chain.push(interceptor.fulfilled, interceptor.rejected);
	  });

	  while (chain.length) {
	    promise = promise.then(chain.shift(), chain.shift());
	  }

	  return promise;
	};

	// Provide aliases for supported request methods
	utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
	  /*eslint func-names:0*/
	  Axios.prototype[method] = function(url, config) {
	    return this.request(utils.merge(config || {}, {
	      method: method,
	      url: url
	    }));
	  };
	});

	utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
	  /*eslint func-names:0*/
	  Axios.prototype[method] = function(url, data, config) {
	    return this.request(utils.merge(config || {}, {
	      method: method,
	      url: url,
	      data: data
	    }));
	  };
	});

	module.exports = Axios;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var utils = __webpack_require__(8);
	var normalizeHeaderName = __webpack_require__(13);

	var PROTECTION_PREFIX = /^\)\]\}',?\n/;
	var DEFAULT_CONTENT_TYPE = {
	  'Content-Type': 'application/x-www-form-urlencoded'
	};

	function setContentTypeIfUnset(headers, value) {
	  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
	    headers['Content-Type'] = value;
	  }
	}

	function getDefaultAdapter() {
	  var adapter;
	  if (typeof XMLHttpRequest !== 'undefined') {
	    // For browsers use XHR adapter
	    adapter = __webpack_require__(14);
	  } else if (typeof process !== 'undefined') {
	    // For node use HTTP adapter
	    adapter = __webpack_require__(14);
	  }
	  return adapter;
	}

	var defaults = {
	  adapter: getDefaultAdapter(),

	  transformRequest: [function transformRequest(data, headers) {
	    normalizeHeaderName(headers, 'Content-Type');
	    if (utils.isFormData(data) ||
	      utils.isArrayBuffer(data) ||
	      utils.isStream(data) ||
	      utils.isFile(data) ||
	      utils.isBlob(data)
	    ) {
	      return data;
	    }
	    if (utils.isArrayBufferView(data)) {
	      return data.buffer;
	    }
	    if (utils.isURLSearchParams(data)) {
	      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
	      return data.toString();
	    }
	    if (utils.isObject(data)) {
	      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
	      return JSON.stringify(data);
	    }
	    return data;
	  }],

	  transformResponse: [function transformResponse(data) {
	    /*eslint no-param-reassign:0*/
	    if (typeof data === 'string') {
	      data = data.replace(PROTECTION_PREFIX, '');
	      try {
	        data = JSON.parse(data);
	      } catch (e) { /* Ignore */ }
	    }
	    return data;
	  }],

	  timeout: 0,

	  xsrfCookieName: 'XSRF-TOKEN',
	  xsrfHeaderName: 'X-XSRF-TOKEN',

	  maxContentLength: -1,

	  validateStatus: function validateStatus(status) {
	    return status >= 200 && status < 300;
	  }
	};

	defaults.headers = {
	  common: {
	    'Accept': 'application/json, text/plain, */*'
	  }
	};

	utils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {
	  defaults.headers[method] = {};
	});

	utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
	  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
	});

	module.exports = defaults;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))

/***/ },
/* 12 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	module.exports = function normalizeHeaderName(headers, normalizedName) {
	  utils.forEach(headers, function processHeader(value, name) {
	    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
	      headers[normalizedName] = value;
	      delete headers[name];
	    }
	  });
	};


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var utils = __webpack_require__(8);
	var settle = __webpack_require__(15);
	var buildURL = __webpack_require__(18);
	var parseHeaders = __webpack_require__(19);
	var isURLSameOrigin = __webpack_require__(20);
	var createError = __webpack_require__(16);
	var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(21);

	module.exports = function xhrAdapter(config) {
	  return new Promise(function dispatchXhrRequest(resolve, reject) {
	    var requestData = config.data;
	    var requestHeaders = config.headers;

	    if (utils.isFormData(requestData)) {
	      delete requestHeaders['Content-Type']; // Let the browser set it
	    }

	    var request = new XMLHttpRequest();
	    var loadEvent = 'onreadystatechange';
	    var xDomain = false;

	    // For IE 8/9 CORS support
	    // Only supports POST and GET calls and doesn't returns the response headers.
	    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
	    if (process.env.NODE_ENV !== 'test' &&
	        typeof window !== 'undefined' &&
	        window.XDomainRequest && !('withCredentials' in request) &&
	        !isURLSameOrigin(config.url)) {
	      request = new window.XDomainRequest();
	      loadEvent = 'onload';
	      xDomain = true;
	      request.onprogress = function handleProgress() {};
	      request.ontimeout = function handleTimeout() {};
	    }

	    // HTTP basic authentication
	    if (config.auth) {
	      var username = config.auth.username || '';
	      var password = config.auth.password || '';
	      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
	    }

	    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

	    // Set the request timeout in MS
	    request.timeout = config.timeout;

	    // Listen for ready state
	    request[loadEvent] = function handleLoad() {
	      if (!request || (request.readyState !== 4 && !xDomain)) {
	        return;
	      }

	      // The request errored out and we didn't get a response, this will be
	      // handled by onerror instead
	      // With one exception: request that using file: protocol, most browsers
	      // will return status as 0 even though it's a successful request
	      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
	        return;
	      }

	      // Prepare the response
	      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
	      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
	      var response = {
	        data: responseData,
	        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
	        status: request.status === 1223 ? 204 : request.status,
	        statusText: request.status === 1223 ? 'No Content' : request.statusText,
	        headers: responseHeaders,
	        config: config,
	        request: request
	      };

	      settle(resolve, reject, response);

	      // Clean up request
	      request = null;
	    };

	    // Handle low level network errors
	    request.onerror = function handleError() {
	      // Real errors are hidden from us by the browser
	      // onerror should only fire if it's a network error
	      reject(createError('Network Error', config));

	      // Clean up request
	      request = null;
	    };

	    // Handle timeout
	    request.ontimeout = function handleTimeout() {
	      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));

	      // Clean up request
	      request = null;
	    };

	    // Add xsrf header
	    // This is only done if running in a standard browser environment.
	    // Specifically not if we're in a web worker, or react-native.
	    if (utils.isStandardBrowserEnv()) {
	      var cookies = __webpack_require__(22);

	      // Add xsrf header
	      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
	          cookies.read(config.xsrfCookieName) :
	          undefined;

	      if (xsrfValue) {
	        requestHeaders[config.xsrfHeaderName] = xsrfValue;
	      }
	    }

	    // Add headers to the request
	    if ('setRequestHeader' in request) {
	      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
	        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
	          // Remove Content-Type if data is undefined
	          delete requestHeaders[key];
	        } else {
	          // Otherwise add header to the request
	          request.setRequestHeader(key, val);
	        }
	      });
	    }

	    // Add withCredentials to request if needed
	    if (config.withCredentials) {
	      request.withCredentials = true;
	    }

	    // Add responseType to request if needed
	    if (config.responseType) {
	      try {
	        request.responseType = config.responseType;
	      } catch (e) {
	        if (request.responseType !== 'json') {
	          throw e;
	        }
	      }
	    }

	    // Handle progress if needed
	    if (typeof config.onDownloadProgress === 'function') {
	      request.addEventListener('progress', config.onDownloadProgress);
	    }

	    // Not all browsers support upload events
	    if (typeof config.onUploadProgress === 'function' && request.upload) {
	      request.upload.addEventListener('progress', config.onUploadProgress);
	    }

	    if (config.cancelToken) {
	      // Handle cancellation
	      config.cancelToken.promise.then(function onCanceled(cancel) {
	        if (!request) {
	          return;
	        }

	        request.abort();
	        reject(cancel);
	        // Clean up request
	        request = null;
	      });
	    }

	    if (requestData === undefined) {
	      requestData = null;
	    }

	    // Send the request
	    request.send(requestData);
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var createError = __webpack_require__(16);

	/**
	 * Resolve or reject a Promise based on response status.
	 *
	 * @param {Function} resolve A function that resolves the promise.
	 * @param {Function} reject A function that rejects the promise.
	 * @param {object} response The response.
	 */
	module.exports = function settle(resolve, reject, response) {
	  var validateStatus = response.config.validateStatus;
	  // Note: status is not exposed by XDomainRequest
	  if (!response.status || !validateStatus || validateStatus(response.status)) {
	    resolve(response);
	  } else {
	    reject(createError(
	      'Request failed with status code ' + response.status,
	      response.config,
	      null,
	      response
	    ));
	  }
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var enhanceError = __webpack_require__(17);

	/**
	 * Create an Error with the specified message, config, error code, and response.
	 *
	 * @param {string} message The error message.
	 * @param {Object} config The config.
	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
	 @ @param {Object} [response] The response.
	 * @returns {Error} The created error.
	 */
	module.exports = function createError(message, config, code, response) {
	  var error = new Error(message);
	  return enhanceError(error, config, code, response);
	};


/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Update an Error with the specified config, error code, and response.
	 *
	 * @param {Error} error The error to update.
	 * @param {Object} config The config.
	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
	 @ @param {Object} [response] The response.
	 * @returns {Error} The error.
	 */
	module.exports = function enhanceError(error, config, code, response) {
	  error.config = config;
	  if (code) {
	    error.code = code;
	  }
	  error.response = response;
	  return error;
	};


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	function encode(val) {
	  return encodeURIComponent(val).
	    replace(/%40/gi, '@').
	    replace(/%3A/gi, ':').
	    replace(/%24/g, '$').
	    replace(/%2C/gi, ',').
	    replace(/%20/g, '+').
	    replace(/%5B/gi, '[').
	    replace(/%5D/gi, ']');
	}

	/**
	 * Build a URL by appending params to the end
	 *
	 * @param {string} url The base of the url (e.g., http://www.google.com)
	 * @param {object} [params] The params to be appended
	 * @returns {string} The formatted url
	 */
	module.exports = function buildURL(url, params, paramsSerializer) {
	  /*eslint no-param-reassign:0*/
	  if (!params) {
	    return url;
	  }

	  var serializedParams;
	  if (paramsSerializer) {
	    serializedParams = paramsSerializer(params);
	  } else if (utils.isURLSearchParams(params)) {
	    serializedParams = params.toString();
	  } else {
	    var parts = [];

	    utils.forEach(params, function serialize(val, key) {
	      if (val === null || typeof val === 'undefined') {
	        return;
	      }

	      if (utils.isArray(val)) {
	        key = key + '[]';
	      }

	      if (!utils.isArray(val)) {
	        val = [val];
	      }

	      utils.forEach(val, function parseValue(v) {
	        if (utils.isDate(v)) {
	          v = v.toISOString();
	        } else if (utils.isObject(v)) {
	          v = JSON.stringify(v);
	        }
	        parts.push(encode(key) + '=' + encode(v));
	      });
	    });

	    serializedParams = parts.join('&');
	  }

	  if (serializedParams) {
	    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
	  }

	  return url;
	};


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	/**
	 * Parse headers into an object
	 *
	 * ```
	 * Date: Wed, 27 Aug 2014 08:58:49 GMT
	 * Content-Type: application/json
	 * Connection: keep-alive
	 * Transfer-Encoding: chunked
	 * ```
	 *
	 * @param {String} headers Headers needing to be parsed
	 * @returns {Object} Headers parsed into an object
	 */
	module.exports = function parseHeaders(headers) {
	  var parsed = {};
	  var key;
	  var val;
	  var i;

	  if (!headers) { return parsed; }

	  utils.forEach(headers.split('\n'), function parser(line) {
	    i = line.indexOf(':');
	    key = utils.trim(line.substr(0, i)).toLowerCase();
	    val = utils.trim(line.substr(i + 1));

	    if (key) {
	      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
	    }
	  });

	  return parsed;
	};


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	module.exports = (
	  utils.isStandardBrowserEnv() ?

	  // Standard browser envs have full support of the APIs needed to test
	  // whether the request URL is of the same origin as current location.
	  (function standardBrowserEnv() {
	    var msie = /(msie|trident)/i.test(navigator.userAgent);
	    var urlParsingNode = document.createElement('a');
	    var originURL;

	    /**
	    * Parse a URL to discover it's components
	    *
	    * @param {String} url The URL to be parsed
	    * @returns {Object}
	    */
	    function resolveURL(url) {
	      var href = url;

	      if (msie) {
	        // IE needs attribute set twice to normalize properties
	        urlParsingNode.setAttribute('href', href);
	        href = urlParsingNode.href;
	      }

	      urlParsingNode.setAttribute('href', href);

	      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
	      return {
	        href: urlParsingNode.href,
	        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
	        host: urlParsingNode.host,
	        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
	        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
	        hostname: urlParsingNode.hostname,
	        port: urlParsingNode.port,
	        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
	                  urlParsingNode.pathname :
	                  '/' + urlParsingNode.pathname
	      };
	    }

	    originURL = resolveURL(window.location.href);

	    /**
	    * Determine if a URL shares the same origin as the current location
	    *
	    * @param {String} requestURL The URL to test
	    * @returns {boolean} True if URL shares the same origin, otherwise false
	    */
	    return function isURLSameOrigin(requestURL) {
	      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
	      return (parsed.protocol === originURL.protocol &&
	            parsed.host === originURL.host);
	    };
	  })() :

	  // Non standard browser envs (web workers, react-native) lack needed support.
	  (function nonStandardBrowserEnv() {
	    return function isURLSameOrigin() {
	      return true;
	    };
	  })()
	);


/***/ },
/* 21 */
/***/ function(module, exports) {

	'use strict';

	// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

	var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

	function E() {
	  this.message = 'String contains an invalid character';
	}
	E.prototype = new Error;
	E.prototype.code = 5;
	E.prototype.name = 'InvalidCharacterError';

	function btoa(input) {
	  var str = String(input);
	  var output = '';
	  for (
	    // initialize result and counter
	    var block, charCode, idx = 0, map = chars;
	    // if the next str index does not exist:
	    //   change the mapping table to "="
	    //   check if d has no fractional digits
	    str.charAt(idx | 0) || (map = '=', idx % 1);
	    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
	    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
	  ) {
	    charCode = str.charCodeAt(idx += 3 / 4);
	    if (charCode > 0xFF) {
	      throw new E();
	    }
	    block = block << 8 | charCode;
	  }
	  return output;
	}

	module.exports = btoa;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	module.exports = (
	  utils.isStandardBrowserEnv() ?

	  // Standard browser envs support document.cookie
	  (function standardBrowserEnv() {
	    return {
	      write: function write(name, value, expires, path, domain, secure) {
	        var cookie = [];
	        cookie.push(name + '=' + encodeURIComponent(value));

	        if (utils.isNumber(expires)) {
	          cookie.push('expires=' + new Date(expires).toGMTString());
	        }

	        if (utils.isString(path)) {
	          cookie.push('path=' + path);
	        }

	        if (utils.isString(domain)) {
	          cookie.push('domain=' + domain);
	        }

	        if (secure === true) {
	          cookie.push('secure');
	        }

	        document.cookie = cookie.join('; ');
	      },

	      read: function read(name) {
	        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
	        return (match ? decodeURIComponent(match[3]) : null);
	      },

	      remove: function remove(name) {
	        this.write(name, '', Date.now() - 86400000);
	      }
	    };
	  })() :

	  // Non standard browser env (web workers, react-native) lack needed support.
	  (function nonStandardBrowserEnv() {
	    return {
	      write: function write() {},
	      read: function read() { return null; },
	      remove: function remove() {}
	    };
	  })()
	);


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	function InterceptorManager() {
	  this.handlers = [];
	}

	/**
	 * Add a new interceptor to the stack
	 *
	 * @param {Function} fulfilled The function to handle `then` for a `Promise`
	 * @param {Function} rejected The function to handle `reject` for a `Promise`
	 *
	 * @return {Number} An ID used to remove interceptor later
	 */
	InterceptorManager.prototype.use = function use(fulfilled, rejected) {
	  this.handlers.push({
	    fulfilled: fulfilled,
	    rejected: rejected
	  });
	  return this.handlers.length - 1;
	};

	/**
	 * Remove an interceptor from the stack
	 *
	 * @param {Number} id The ID that was returned by `use`
	 */
	InterceptorManager.prototype.eject = function eject(id) {
	  if (this.handlers[id]) {
	    this.handlers[id] = null;
	  }
	};

	/**
	 * Iterate over all the registered interceptors
	 *
	 * This method is particularly useful for skipping over any
	 * interceptors that may have become `null` calling `eject`.
	 *
	 * @param {Function} fn The function to call for each interceptor
	 */
	InterceptorManager.prototype.forEach = function forEach(fn) {
	  utils.forEach(this.handlers, function forEachHandler(h) {
	    if (h !== null) {
	      fn(h);
	    }
	  });
	};

	module.exports = InterceptorManager;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);
	var transformData = __webpack_require__(25);
	var isCancel = __webpack_require__(26);
	var defaults = __webpack_require__(11);

	/**
	 * Throws a `Cancel` if cancellation has been requested.
	 */
	function throwIfCancellationRequested(config) {
	  if (config.cancelToken) {
	    config.cancelToken.throwIfRequested();
	  }
	}

	/**
	 * Dispatch a request to the server using the configured adapter.
	 *
	 * @param {object} config The config that is to be used for the request
	 * @returns {Promise} The Promise to be fulfilled
	 */
	module.exports = function dispatchRequest(config) {
	  throwIfCancellationRequested(config);

	  // Ensure headers exist
	  config.headers = config.headers || {};

	  // Transform request data
	  config.data = transformData(
	    config.data,
	    config.headers,
	    config.transformRequest
	  );

	  // Flatten headers
	  config.headers = utils.merge(
	    config.headers.common || {},
	    config.headers[config.method] || {},
	    config.headers || {}
	  );

	  utils.forEach(
	    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
	    function cleanHeaderConfig(method) {
	      delete config.headers[method];
	    }
	  );

	  var adapter = config.adapter || defaults.adapter;

	  return adapter(config).then(function onAdapterResolution(response) {
	    throwIfCancellationRequested(config);

	    // Transform response data
	    response.data = transformData(
	      response.data,
	      response.headers,
	      config.transformResponse
	    );

	    return response;
	  }, function onAdapterRejection(reason) {
	    if (!isCancel(reason)) {
	      throwIfCancellationRequested(config);

	      // Transform response data
	      if (reason && reason.response) {
	        reason.response.data = transformData(
	          reason.response.data,
	          reason.response.headers,
	          config.transformResponse
	        );
	      }
	    }

	    return Promise.reject(reason);
	  });
	};


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(8);

	/**
	 * Transform the data for a request or a response
	 *
	 * @param {Object|String} data The data to be transformed
	 * @param {Array} headers The headers for the request or response
	 * @param {Array|Function} fns A single function or Array of functions
	 * @returns {*} The resulting transformed data
	 */
	module.exports = function transformData(data, headers, fns) {
	  /*eslint no-param-reassign:0*/
	  utils.forEach(fns, function transform(fn) {
	    data = fn(data, headers);
	  });

	  return data;
	};


/***/ },
/* 26 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function isCancel(value) {
	  return !!(value && value.__CANCEL__);
	};


/***/ },
/* 27 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Determines whether the specified URL is absolute
	 *
	 * @param {string} url The URL to test
	 * @returns {boolean} True if the specified URL is absolute, otherwise false
	 */
	module.exports = function isAbsoluteURL(url) {
	  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
	  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
	  // by any combination of letters, digits, plus, period, or hyphen.
	  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
	};


/***/ },
/* 28 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Creates a new URL by combining the specified URLs
	 *
	 * @param {string} baseURL The base URL
	 * @param {string} relativeURL The relative URL
	 * @returns {string} The combined URL
	 */
	module.exports = function combineURLs(baseURL, relativeURL) {
	  return baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '');
	};


/***/ },
/* 29 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * A `Cancel` is an object that is thrown when an operation is canceled.
	 *
	 * @class
	 * @param {string=} message The message.
	 */
	function Cancel(message) {
	  this.message = message;
	}

	Cancel.prototype.toString = function toString() {
	  return 'Cancel' + (this.message ? ': ' + this.message : '');
	};

	Cancel.prototype.__CANCEL__ = true;

	module.exports = Cancel;


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cancel = __webpack_require__(29);

	/**
	 * A `CancelToken` is an object that can be used to request cancellation of an operation.
	 *
	 * @class
	 * @param {Function} executor The executor function.
	 */
	function CancelToken(executor) {
	  if (typeof executor !== 'function') {
	    throw new TypeError('executor must be a function.');
	  }

	  var resolvePromise;
	  this.promise = new Promise(function promiseExecutor(resolve) {
	    resolvePromise = resolve;
	  });

	  var token = this;
	  executor(function cancel(message) {
	    if (token.reason) {
	      // Cancellation has already been requested
	      return;
	    }

	    token.reason = new Cancel(message);
	    resolvePromise(token.reason);
	  });
	}

	/**
	 * Throws a `Cancel` if cancellation has been requested.
	 */
	CancelToken.prototype.throwIfRequested = function throwIfRequested() {
	  if (this.reason) {
	    throw this.reason;
	  }
	};

	/**
	 * Returns an object that contains a new `CancelToken` and a function that, when called,
	 * cancels the `CancelToken`.
	 */
	CancelToken.source = function source() {
	  var cancel;
	  var token = new CancelToken(function executor(c) {
	    cancel = c;
	  });
	  return {
	    token: token,
	    cancel: cancel
	  };
	};

	module.exports = CancelToken;


/***/ },
/* 31 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Syntactic sugar for invoking a function and expanding an array for arguments.
	 *
	 * Common use case would be to use `Function.prototype.apply`.
	 *
	 *  ```js
	 *  function f(x, y, z) {}
	 *  var args = [1, 2, 3];
	 *  f.apply(null, args);
	 *  ```
	 *
	 * With `spread` this example can be re-written.
	 *
	 *  ```js
	 *  spread(function(x, y, z) {})([1, 2, 3]);
	 *  ```
	 *
	 * @param {Function} callback
	 * @returns {Function}
	 */
	module.exports = function spread(callback) {
	  return function wrap(arr) {
	    return callback.apply(null, arr);
	  };
	};


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = __webpack_require__(33);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();

	/**
	 * Colors.
	 */

	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];

	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */

	function useColors() {
	  // NB: In an Electron preload script, document will be defined but not fully
	  // initialized. Since we know we're in Chrome, we'll just detect this case
	  // explicitly
	  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {
	    return true;
	  }

	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
	    // double check webkit in userAgent just in case we are in a worker
	    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}

	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */

	exports.formatters.j = function(v) {
	  try {
	    return JSON.stringify(v);
	  } catch (err) {
	    return '[UnexpectedJSONParseError]: ' + err.message;
	  }
	};


	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */

	function formatArgs(args) {
	  var useColors = this.useColors;

	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);

	  if (!useColors) return;

	  var c = 'color: ' + this.color;
	  args.splice(1, 0, c, 'color: inherit')

	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-zA-Z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });

	  args.splice(lastC, 0, c);
	}

	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */

	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}

	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */

	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}

	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */

	function load() {
	  try {
	    return exports.storage.debug;
	  } catch(e) {}

	  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	  if (typeof process !== 'undefined' && 'env' in process) {
	    return process.env.DEBUG;
	  }
	}

	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */

	exports.enable(load());

	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */

	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = createDebug.debug = createDebug.default = createDebug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(34);

	/**
	 * The currently active debug mode names, and names to skip.
	 */

	exports.names = [];
	exports.skips = [];

	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	 */

	exports.formatters = {};

	/**
	 * Previous log timestamp.
	 */

	var prevTime;

	/**
	 * Select a color.
	 * @param {String} namespace
	 * @return {Number}
	 * @api private
	 */

	function selectColor(namespace) {
	  var hash = 0, i;

	  for (i in namespace) {
	    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
	    hash |= 0; // Convert to 32bit integer
	  }

	  return exports.colors[Math.abs(hash) % exports.colors.length];
	}

	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */

	function createDebug(namespace) {

	  function debug() {
	    // disabled?
	    if (!debug.enabled) return;

	    var self = debug;

	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;

	    // turn the `arguments` into a proper Array
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }

	    args[0] = exports.coerce(args[0]);

	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %O
	      args.unshift('%O');
	    }

	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);

	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });

	    // apply env-specific formatting (colors, etc.)
	    exports.formatArgs.call(self, args);

	    var logFn = debug.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }

	  debug.namespace = namespace;
	  debug.enabled = exports.enabled(namespace);
	  debug.useColors = exports.useColors();
	  debug.color = selectColor(namespace);

	  // env-specific initialization logic for debug instances
	  if ('function' === typeof exports.init) {
	    exports.init(debug);
	  }

	  return debug;
	}

	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */

	function enable(namespaces) {
	  exports.save(namespaces);

	  var split = (namespaces || '').split(/[\s,]+/);
	  var len = split.length;

	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}

	/**
	 * Disable debug output.
	 *
	 * @api public
	 */

	function disable() {
	  exports.enable('');
	}

	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */

	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}

	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */

	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ },
/* 34 */
/***/ function(module, exports) {

	/**
	 * Helpers.
	 */

	var s = 1000
	var m = s * 60
	var h = m * 60
	var d = h * 24
	var y = d * 365.25

	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} options
	 * @throws {Error} throw an error if val is not a non-empty string or a number
	 * @return {String|Number}
	 * @api public
	 */

	module.exports = function (val, options) {
	  options = options || {}
	  var type = typeof val
	  if (type === 'string' && val.length > 0) {
	    return parse(val)
	  } else if (type === 'number' && isNaN(val) === false) {
	    return options.long ?
				fmtLong(val) :
				fmtShort(val)
	  }
	  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))
	}

	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */

	function parse(str) {
	  str = String(str)
	  if (str.length > 10000) {
	    return
	  }
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)
	  if (!match) {
	    return
	  }
	  var n = parseFloat(match[1])
	  var type = (match[2] || 'ms').toLowerCase()
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n
	    default:
	      return undefined
	  }
	}

	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function fmtShort(ms) {
	  if (ms >= d) {
	    return Math.round(ms / d) + 'd'
	  }
	  if (ms >= h) {
	    return Math.round(ms / h) + 'h'
	  }
	  if (ms >= m) {
	    return Math.round(ms / m) + 'm'
	  }
	  if (ms >= s) {
	    return Math.round(ms / s) + 's'
	  }
	  return ms + 'ms'
	}

	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function fmtLong(ms) {
	  return plural(ms, d, 'day') ||
	    plural(ms, h, 'hour') ||
	    plural(ms, m, 'minute') ||
	    plural(ms, s, 'second') ||
	    ms + ' ms'
	}

	/**
	 * Pluralization helper.
	 */

	function plural(ms, n, name) {
	  if (ms < n) {
	    return
	  }
	  if (ms < n * 1.5) {
	    return Math.floor(ms / n) + ' ' + name
	  }
	  return Math.ceil(ms / n) + ' ' + name + 's'
	}


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $
	 *
	 *  Licensed under the MIT license.
	 *    http://opensource.org/licenses/mit-license
	 *
	 *  References:
	 *    http://en.wikipedia.org/wiki/Base64
	 */

	(function(global) {
	    'use strict';
	    // existing version for noConflict()
	    var _Base64 = global.Base64;
	    var version = "2.1.9";
	    // if node.js, we use Buffer
	    var buffer;
	    if (typeof module !== 'undefined' && module.exports) {
	        try {
	            buffer = __webpack_require__(36).Buffer;
	        } catch (err) {}
	    }
	    // constants
	    var b64chars
	        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
	    var b64tab = function(bin) {
	        var t = {};
	        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;
	        return t;
	    }(b64chars);
	    var fromCharCode = String.fromCharCode;
	    // encoder stuff
	    var cb_utob = function(c) {
	        if (c.length < 2) {
	            var cc = c.charCodeAt(0);
	            return cc < 0x80 ? c
	                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))
	                                + fromCharCode(0x80 | (cc & 0x3f)))
	                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))
	                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))
	                   + fromCharCode(0x80 | ( cc         & 0x3f)));
	        } else {
	            var cc = 0x10000
	                + (c.charCodeAt(0) - 0xD800) * 0x400
	                + (c.charCodeAt(1) - 0xDC00);
	            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))
	                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))
	                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))
	                    + fromCharCode(0x80 | ( cc         & 0x3f)));
	        }
	    };
	    var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
	    var utob = function(u) {
	        return u.replace(re_utob, cb_utob);
	    };
	    var cb_encode = function(ccc) {
	        var padlen = [0, 2, 1][ccc.length % 3],
	        ord = ccc.charCodeAt(0) << 16
	            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)
	            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),
	        chars = [
	            b64chars.charAt( ord >>> 18),
	            b64chars.charAt((ord >>> 12) & 63),
	            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),
	            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)
	        ];
	        return chars.join('');
	    };
	    var btoa = global.btoa ? function(b) {
	        return global.btoa(b);
	    } : function(b) {
	        return b.replace(/[\s\S]{1,3}/g, cb_encode);
	    };
	    var _encode = buffer ? function (u) {
	        return (u.constructor === buffer.constructor ? u : new buffer(u))
	        .toString('base64')
	    }
	    : function (u) { return btoa(utob(u)) }
	    ;
	    var encode = function(u, urisafe) {
	        return !urisafe
	            ? _encode(String(u))
	            : _encode(String(u)).replace(/[+\/]/g, function(m0) {
	                return m0 == '+' ? '-' : '_';
	            }).replace(/=/g, '');
	    };
	    var encodeURI = function(u) { return encode(u, true) };
	    // decoder stuff
	    var re_btou = new RegExp([
	        '[\xC0-\xDF][\x80-\xBF]',
	        '[\xE0-\xEF][\x80-\xBF]{2}',
	        '[\xF0-\xF7][\x80-\xBF]{3}'
	    ].join('|'), 'g');
	    var cb_btou = function(cccc) {
	        switch(cccc.length) {
	        case 4:
	            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)
	                |    ((0x3f & cccc.charCodeAt(1)) << 12)
	                |    ((0x3f & cccc.charCodeAt(2)) <<  6)
	                |     (0x3f & cccc.charCodeAt(3)),
	            offset = cp - 0x10000;
	            return (fromCharCode((offset  >>> 10) + 0xD800)
	                    + fromCharCode((offset & 0x3FF) + 0xDC00));
	        case 3:
	            return fromCharCode(
	                ((0x0f & cccc.charCodeAt(0)) << 12)
	                    | ((0x3f & cccc.charCodeAt(1)) << 6)
	                    |  (0x3f & cccc.charCodeAt(2))
	            );
	        default:
	            return  fromCharCode(
	                ((0x1f & cccc.charCodeAt(0)) << 6)
	                    |  (0x3f & cccc.charCodeAt(1))
	            );
	        }
	    };
	    var btou = function(b) {
	        return b.replace(re_btou, cb_btou);
	    };
	    var cb_decode = function(cccc) {
	        var len = cccc.length,
	        padlen = len % 4,
	        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)
	            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)
	            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)
	            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),
	        chars = [
	            fromCharCode( n >>> 16),
	            fromCharCode((n >>>  8) & 0xff),
	            fromCharCode( n         & 0xff)
	        ];
	        chars.length -= [0, 0, 2, 1][padlen];
	        return chars.join('');
	    };
	    var atob = global.atob ? function(a) {
	        return global.atob(a);
	    } : function(a){
	        return a.replace(/[\s\S]{1,4}/g, cb_decode);
	    };
	    var _decode = buffer ? function(a) {
	        return (a.constructor === buffer.constructor
	                ? a : new buffer(a, 'base64')).toString();
	    }
	    : function(a) { return btou(atob(a)) };
	    var decode = function(a){
	        return _decode(
	            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })
	                .replace(/[^A-Za-z0-9\+\/]/g, '')
	        );
	    };
	    var noConflict = function() {
	        var Base64 = global.Base64;
	        global.Base64 = _Base64;
	        return Base64;
	    };
	    // export Base64
	    global.Base64 = {
	        VERSION: version,
	        atob: atob,
	        btoa: btoa,
	        fromBase64: decode,
	        toBase64: encode,
	        utob: utob,
	        encode: encode,
	        encodeURI: encodeURI,
	        btou: btou,
	        decode: decode,
	        noConflict: noConflict
	    };
	    // if ES5 is available, make Base64.extendString() available
	    if (typeof Object.defineProperty === 'function') {
	        var noEnum = function(v){
	            return {value:v,enumerable:false,writable:true,configurable:true};
	        };
	        global.Base64.extendString = function () {
	            Object.defineProperty(
	                String.prototype, 'fromBase64', noEnum(function () {
	                    return decode(this)
	                }));
	            Object.defineProperty(
	                String.prototype, 'toBase64', noEnum(function (urisafe) {
	                    return encode(this, urisafe)
	                }));
	            Object.defineProperty(
	                String.prototype, 'toBase64URI', noEnum(function () {
	                    return encode(this, true)
	                }));
	        };
	    }
	    // that's it!
	    if (global['Meteor']) {
	       Base64 = global.Base64; // for normal export in Meteor.js
	    }
	})(this);


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(37)
	var ieee754 = __webpack_require__(38)
	var isArray = __webpack_require__(39)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 37 */
/***/ function(module, exports) {

	'use strict'

	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}

	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63

	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}

	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64)
	}

	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)

	  arr = new Arr(len * 3 / 4 - placeHolders)

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len

	  var L = 0

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }

	  parts.push(output)

	  return parts.join('')
	}


/***/ },
/* 38 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 39 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	var _debug = __webpack_require__(32);

	var _debug2 = _interopRequireDefault(_debug);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var log = (0, _debug2.default)('github:user');

	/**
	 * A User allows scoping of API requests to a particular Github user.
	 */

	var User = function (_Requestable) {
	   _inherits(User, _Requestable);

	   /**
	    * Create a User.
	    * @param {string} [username] - the user to use for user-scoped queries
	    * @param {Requestable.auth} [auth] - information required to authenticate to Github
	    * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	    */
	   function User(username, auth, apiBase) {
	      _classCallCheck(this, User);

	      var _this = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, auth, apiBase));

	      _this.__user = username;
	      return _this;
	   }

	   /**
	    * Get the url for the request. (dependent on if we're requesting for the authenticated user or not)
	    * @private
	    * @param {string} endpoint - the endpoint being requested
	    * @return {string} - the resolved endpoint
	    */


	   _createClass(User, [{
	      key: '__getScopedUrl',
	      value: function __getScopedUrl(endpoint) {
	         if (this.__user) {
	            return endpoint ? '/users/' + this.__user + '/' + endpoint : '/users/' + this.__user;
	         } else {
	            // eslint-disable-line
	            switch (endpoint) {
	               case '':
	                  return '/user';

	               case 'notifications':
	               case 'gists':
	                  return '/' + endpoint;

	               default:
	                  return '/user/' + endpoint;
	            }
	         }
	      }

	      /**
	       * List the user's repositories
	       * @see https://developer.github.com/v3/repos/#list-user-repositories
	       * @param {Object} [options={}] - any options to refine the search
	       * @param {Requestable.callback} [cb] - will receive the list of repositories
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listRepos',
	      value: function listRepos(options, cb) {
	         if (typeof options === 'function') {
	            cb = options;
	            options = {};
	         }

	         options = this._getOptionsWithDefaults(options);

	         log('Fetching repositories with options: ' + JSON.stringify(options));
	         return this._requestAllPages(this.__getScopedUrl('repos'), options, cb);
	      }

	      /**
	       * List the orgs that the user belongs to
	       * @see https://developer.github.com/v3/orgs/#list-user-organizations
	       * @param {Requestable.callback} [cb] - will receive the list of organizations
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listOrgs',
	      value: function listOrgs(cb) {
	         return this._request('GET', this.__getScopedUrl('orgs'), null, cb);
	      }

	      /**
	       * List the user's gists
	       * @see https://developer.github.com/v3/gists/#list-a-users-gists
	       * @param {Requestable.callback} [cb] - will receive the list of gists
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listGists',
	      value: function listGists(cb) {
	         return this._request('GET', this.__getScopedUrl('gists'), null, cb);
	      }

	      /**
	       * List the user's notifications
	       * @see https://developer.github.com/v3/activity/notifications/#list-your-notifications
	       * @param {Object} [options={}] - any options to refine the search
	       * @param {Requestable.callback} [cb] - will receive the list of repositories
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listNotifications',
	      value: function listNotifications(options, cb) {
	         options = options || {};
	         if (typeof options === 'function') {
	            cb = options;
	            options = {};
	         }

	         options.since = this._dateToISO(options.since);
	         options.before = this._dateToISO(options.before);

	         return this._request('GET', this.__getScopedUrl('notifications'), options, cb);
	      }

	      /**
	       * Show the user's profile
	       * @see https://developer.github.com/v3/users/#get-a-single-user
	       * @param {Requestable.callback} [cb] - will receive the user's information
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getProfile',
	      value: function getProfile(cb) {
	         return this._request('GET', this.__getScopedUrl(''), null, cb);
	      }

	      /**
	       * Gets the list of starred repositories for the user
	       * @see https://developer.github.com/v3/activity/starring/#list-repositories-being-starred
	       * @param {Requestable.callback} [cb] - will receive the list of starred repositories
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listStarredRepos',
	      value: function listStarredRepos(cb) {
	         var requestOptions = this._getOptionsWithDefaults();
	         return this._requestAllPages(this.__getScopedUrl('starred'), requestOptions, cb);
	      }

	      /**
	       * List email addresses for a user
	       * @see https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
	       * @param {Requestable.callback} [cb] - will receive the list of emails
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getEmails',
	      value: function getEmails(cb) {
	         return this._request('GET', '/user/emails', null, cb);
	      }

	      /**
	       * Have the authenticated user follow this user
	       * @see https://developer.github.com/v3/users/followers/#follow-a-user
	       * @param {string} username - the user to follow
	       * @param {Requestable.callback} [cb] - will receive true if the request succeeds
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'follow',
	      value: function follow(username, cb) {
	         return this._request('PUT', '/user/following/' + this.__user, null, cb);
	      }

	      /**
	       * Have the currently authenticated user unfollow this user
	       * @see https://developer.github.com/v3/users/followers/#follow-a-user
	       * @param {string} username - the user to unfollow
	       * @param {Requestable.callback} [cb] - receives true if the request succeeds
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'unfollow',
	      value: function unfollow(username, cb) {
	         return this._request('DELETE', '/user/following/' + this.__user, null, cb);
	      }

	      /**
	       * Create a new repository for the currently authenticated user
	       * @see https://developer.github.com/v3/repos/#create
	       * @param {object} options - the repository definition
	       * @param {Requestable.callback} [cb] - will receive the API response
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createRepo',
	      value: function createRepo(options, cb) {
	         return this._request('POST', '/user/repos', options, cb);
	      }
	   }]);

	   return User;
	}(_Requestable3.default);

	module.exports = User;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsibG9nIiwiVXNlciIsInVzZXJuYW1lIiwiYXV0aCIsImFwaUJhc2UiLCJfX3VzZXIiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJjYiIsIl9nZXRPcHRpb25zV2l0aERlZmF1bHRzIiwiSlNPTiIsInN0cmluZ2lmeSIsIl9yZXF1ZXN0QWxsUGFnZXMiLCJfX2dldFNjb3BlZFVybCIsIl9yZXF1ZXN0Iiwic2luY2UiLCJfZGF0ZVRvSVNPIiwiYmVmb3JlIiwicmVxdWVzdE9wdGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBT0E7Ozs7QUFDQTs7Ozs7Ozs7OzsrZUFSQTs7Ozs7OztBQVNBLElBQU1BLE1BQU0scUJBQU0sYUFBTixDQUFaOztBQUVBOzs7O0lBR01DLEk7OztBQUNIOzs7Ozs7QUFNQSxpQkFBWUMsUUFBWixFQUFzQkMsSUFBdEIsRUFBNEJDLE9BQTVCLEVBQXFDO0FBQUE7O0FBQUEsOEdBQzVCRCxJQUQ0QixFQUN0QkMsT0FEc0I7O0FBRWxDLFlBQUtDLE1BQUwsR0FBY0gsUUFBZDtBQUZrQztBQUdwQzs7QUFFRDs7Ozs7Ozs7OztxQ0FNZUksUSxFQUFVO0FBQ3RCLGFBQUksS0FBS0QsTUFBVCxFQUFpQjtBQUNkLG1CQUFPQyx1QkFDTSxLQUFLRCxNQURYLFNBQ3FCQyxRQURyQixlQUVNLEtBQUtELE1BRmxCO0FBS0YsVUFORCxNQU1PO0FBQUU7QUFDTixvQkFBUUMsUUFBUjtBQUNHLG9CQUFLLEVBQUw7QUFDRyx5QkFBTyxPQUFQOztBQUVILG9CQUFLLGVBQUw7QUFDQSxvQkFBSyxPQUFMO0FBQ0csK0JBQVdBLFFBQVg7O0FBRUg7QUFDRyxvQ0FBZ0JBLFFBQWhCO0FBVE47QUFXRjtBQUNIOztBQUVEOzs7Ozs7Ozs7O2dDQU9VQyxPLEVBQVNDLEUsRUFBSTtBQUNwQixhQUFJLE9BQU9ELE9BQVAsS0FBbUIsVUFBdkIsRUFBbUM7QUFDaENDLGlCQUFLRCxPQUFMO0FBQ0FBLHNCQUFVLEVBQVY7QUFDRjs7QUFFREEsbUJBQVUsS0FBS0UsdUJBQUwsQ0FBNkJGLE9BQTdCLENBQVY7O0FBRUFQLHNEQUEyQ1UsS0FBS0MsU0FBTCxDQUFlSixPQUFmLENBQTNDO0FBQ0EsZ0JBQU8sS0FBS0ssZ0JBQUwsQ0FBc0IsS0FBS0MsY0FBTCxDQUFvQixPQUFwQixDQUF0QixFQUFvRE4sT0FBcEQsRUFBNkRDLEVBQTdELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OytCQU1TQSxFLEVBQUk7QUFDVixnQkFBTyxLQUFLTSxRQUFMLENBQWMsS0FBZCxFQUFxQixLQUFLRCxjQUFMLENBQW9CLE1BQXBCLENBQXJCLEVBQWtELElBQWxELEVBQXdETCxFQUF4RCxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OztnQ0FNVUEsRSxFQUFJO0FBQ1gsZ0JBQU8sS0FBS00sUUFBTCxDQUFjLEtBQWQsRUFBcUIsS0FBS0QsY0FBTCxDQUFvQixPQUFwQixDQUFyQixFQUFtRCxJQUFuRCxFQUF5REwsRUFBekQsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O3dDQU9rQkQsTyxFQUFTQyxFLEVBQUk7QUFDNUJELG1CQUFVQSxXQUFXLEVBQXJCO0FBQ0EsYUFBSSxPQUFPQSxPQUFQLEtBQW1CLFVBQXZCLEVBQW1DO0FBQ2hDQyxpQkFBS0QsT0FBTDtBQUNBQSxzQkFBVSxFQUFWO0FBQ0Y7O0FBRURBLGlCQUFRUSxLQUFSLEdBQWdCLEtBQUtDLFVBQUwsQ0FBZ0JULFFBQVFRLEtBQXhCLENBQWhCO0FBQ0FSLGlCQUFRVSxNQUFSLEdBQWlCLEtBQUtELFVBQUwsQ0FBZ0JULFFBQVFVLE1BQXhCLENBQWpCOztBQUVBLGdCQUFPLEtBQUtILFFBQUwsQ0FBYyxLQUFkLEVBQXFCLEtBQUtELGNBQUwsQ0FBb0IsZUFBcEIsQ0FBckIsRUFBMkROLE9BQTNELEVBQW9FQyxFQUFwRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OztpQ0FNV0EsRSxFQUFJO0FBQ1osZ0JBQU8sS0FBS00sUUFBTCxDQUFjLEtBQWQsRUFBcUIsS0FBS0QsY0FBTCxDQUFvQixFQUFwQixDQUFyQixFQUE4QyxJQUE5QyxFQUFvREwsRUFBcEQsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7dUNBTWlCQSxFLEVBQUk7QUFDbEIsYUFBSVUsaUJBQWlCLEtBQUtULHVCQUFMLEVBQXJCO0FBQ0EsZ0JBQU8sS0FBS0csZ0JBQUwsQ0FBc0IsS0FBS0MsY0FBTCxDQUFvQixTQUFwQixDQUF0QixFQUFzREssY0FBdEQsRUFBc0VWLEVBQXRFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7O2dDQU1VQSxFLEVBQUk7QUFDWCxnQkFBTyxLQUFLTSxRQUFMLENBQWMsS0FBZCxFQUFxQixjQUFyQixFQUFxQyxJQUFyQyxFQUEyQ04sRUFBM0MsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7OzZCQU9PTixRLEVBQVVNLEUsRUFBSTtBQUNsQixnQkFBTyxLQUFLTSxRQUFMLENBQWMsS0FBZCx1QkFBd0MsS0FBS1QsTUFBN0MsRUFBdUQsSUFBdkQsRUFBNkRHLEVBQTdELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzsrQkFPU04sUSxFQUFVTSxFLEVBQUk7QUFDcEIsZ0JBQU8sS0FBS00sUUFBTCxDQUFjLFFBQWQsdUJBQTJDLEtBQUtULE1BQWhELEVBQTBELElBQTFELEVBQWdFRyxFQUFoRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7aUNBT1dELE8sRUFBU0MsRSxFQUFJO0FBQ3JCLGdCQUFPLEtBQUtNLFFBQUwsQ0FBYyxNQUFkLEVBQXNCLGFBQXRCLEVBQXFDUCxPQUFyQyxFQUE4Q0MsRUFBOUMsQ0FBUDtBQUNGOzs7Ozs7QUFHSlcsT0FBT0MsT0FBUCxHQUFpQm5CLElBQWpCIiwiZmlsZSI6IlVzZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlXG4gKiBAY29weXJpZ2h0ICAyMDEzIE1pY2hhZWwgQXVmcmVpdGVyIChEZXZlbG9wbWVudCBTZWVkKSBhbmQgMjAxNiBZYWhvbyBJbmMuXG4gKiBAbGljZW5zZSAgICBMaWNlbnNlZCB1bmRlciB7QGxpbmsgaHR0cHM6Ly9zcGR4Lm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2UtQ2xlYXIuaHRtbCBCU0QtMy1DbGF1c2UtQ2xlYXJ9LlxuICogICAgICAgICAgICAgR2l0aHViLmpzIGlzIGZyZWVseSBkaXN0cmlidXRhYmxlLlxuICovXG5cbmltcG9ydCBSZXF1ZXN0YWJsZSBmcm9tICcuL1JlcXVlc3RhYmxlJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5jb25zdCBsb2cgPSBkZWJ1ZygnZ2l0aHViOnVzZXInKTtcblxuLyoqXG4gKiBBIFVzZXIgYWxsb3dzIHNjb3Bpbmcgb2YgQVBJIHJlcXVlc3RzIHRvIGEgcGFydGljdWxhciBHaXRodWIgdXNlci5cbiAqL1xuY2xhc3MgVXNlciBleHRlbmRzIFJlcXVlc3RhYmxlIHtcbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgVXNlci5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbdXNlcm5hbWVdIC0gdGhlIHVzZXIgdG8gdXNlIGZvciB1c2VyLXNjb3BlZCBxdWVyaWVzXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmF1dGh9IFthdXRoXSAtIGluZm9ybWF0aW9uIHJlcXVpcmVkIHRvIGF1dGhlbnRpY2F0ZSB0byBHaXRodWJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbYXBpQmFzZT1odHRwczovL2FwaS5naXRodWIuY29tXSAtIHRoZSBiYXNlIEdpdGh1YiBBUEkgVVJMXG4gICAgKi9cbiAgIGNvbnN0cnVjdG9yKHVzZXJuYW1lLCBhdXRoLCBhcGlCYXNlKSB7XG4gICAgICBzdXBlcihhdXRoLCBhcGlCYXNlKTtcbiAgICAgIHRoaXMuX191c2VyID0gdXNlcm5hbWU7XG4gICB9XG5cbiAgIC8qKlxuICAgICogR2V0IHRoZSB1cmwgZm9yIHRoZSByZXF1ZXN0LiAoZGVwZW5kZW50IG9uIGlmIHdlJ3JlIHJlcXVlc3RpbmcgZm9yIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIgb3Igbm90KVxuICAgICogQHByaXZhdGVcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBlbmRwb2ludCAtIHRoZSBlbmRwb2ludCBiZWluZyByZXF1ZXN0ZWRcbiAgICAqIEByZXR1cm4ge3N0cmluZ30gLSB0aGUgcmVzb2x2ZWQgZW5kcG9pbnRcbiAgICAqL1xuICAgX19nZXRTY29wZWRVcmwoZW5kcG9pbnQpIHtcbiAgICAgIGlmICh0aGlzLl9fdXNlcikge1xuICAgICAgICAgcmV0dXJuIGVuZHBvaW50ID9cbiAgICAgICAgICAgIGAvdXNlcnMvJHt0aGlzLl9fdXNlcn0vJHtlbmRwb2ludH1gIDpcbiAgICAgICAgICAgIGAvdXNlcnMvJHt0aGlzLl9fdXNlcn1gXG4gICAgICAgICAgICA7XG5cbiAgICAgIH0gZWxzZSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgIHN3aXRjaCAoZW5kcG9pbnQpIHtcbiAgICAgICAgICAgIGNhc2UgJyc6XG4gICAgICAgICAgICAgICByZXR1cm4gJy91c2VyJztcblxuICAgICAgICAgICAgY2FzZSAnbm90aWZpY2F0aW9ucyc6XG4gICAgICAgICAgICBjYXNlICdnaXN0cyc6XG4gICAgICAgICAgICAgICByZXR1cm4gYC8ke2VuZHBvaW50fWA7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICByZXR1cm4gYC91c2VyLyR7ZW5kcG9pbnR9YDtcbiAgICAgICAgIH1cbiAgICAgIH1cbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSB1c2VyJ3MgcmVwb3NpdG9yaWVzXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvI2xpc3QtdXNlci1yZXBvc2l0b3JpZXNcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gLSBhbnkgb3B0aW9ucyB0byByZWZpbmUgdGhlIHNlYXJjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgbGlzdCBvZiByZXBvc2l0b3JpZXNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdFJlcG9zKG9wdGlvbnMsIGNiKSB7XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgIGNiID0gb3B0aW9ucztcbiAgICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgIH1cblxuICAgICAgb3B0aW9ucyA9IHRoaXMuX2dldE9wdGlvbnNXaXRoRGVmYXVsdHMob3B0aW9ucyk7XG5cbiAgICAgIGxvZyhgRmV0Y2hpbmcgcmVwb3NpdG9yaWVzIHdpdGggb3B0aW9uczogJHtKU09OLnN0cmluZ2lmeShvcHRpb25zKX1gKTtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0QWxsUGFnZXModGhpcy5fX2dldFNjb3BlZFVybCgncmVwb3MnKSwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIG9yZ3MgdGhhdCB0aGUgdXNlciBiZWxvbmdzIHRvXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvb3Jncy8jbGlzdC11c2VyLW9yZ2FuaXphdGlvbnNcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2Ygb3JnYW5pemF0aW9uc1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0T3JncyhjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIHRoaXMuX19nZXRTY29wZWRVcmwoJ29yZ3MnKSwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIHVzZXIncyBnaXN0c1xuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2dpc3RzLyNsaXN0LWEtdXNlcnMtZ2lzdHNcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgZ2lzdHNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdEdpc3RzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgdGhpcy5fX2dldFNjb3BlZFVybCgnZ2lzdHMnKSwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIHVzZXIncyBub3RpZmljYXRpb25zXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvYWN0aXZpdHkvbm90aWZpY2F0aW9ucy8jbGlzdC15b3VyLW5vdGlmaWNhdGlvbnNcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gLSBhbnkgb3B0aW9ucyB0byByZWZpbmUgdGhlIHNlYXJjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgbGlzdCBvZiByZXBvc2l0b3JpZXNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdE5vdGlmaWNhdGlvbnMob3B0aW9ucywgY2IpIHtcbiAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICBjYiA9IG9wdGlvbnM7XG4gICAgICAgICBvcHRpb25zID0ge307XG4gICAgICB9XG5cbiAgICAgIG9wdGlvbnMuc2luY2UgPSB0aGlzLl9kYXRlVG9JU08ob3B0aW9ucy5zaW5jZSk7XG4gICAgICBvcHRpb25zLmJlZm9yZSA9IHRoaXMuX2RhdGVUb0lTTyhvcHRpb25zLmJlZm9yZSk7XG5cbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCB0aGlzLl9fZ2V0U2NvcGVkVXJsKCdub3RpZmljYXRpb25zJyksIG9wdGlvbnMsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBTaG93IHRoZSB1c2VyJ3MgcHJvZmlsZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3VzZXJzLyNnZXQtYS1zaW5nbGUtdXNlclxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgdXNlcidzIGluZm9ybWF0aW9uXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldFByb2ZpbGUoY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCB0aGlzLl9fZ2V0U2NvcGVkVXJsKCcnKSwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldHMgdGhlIGxpc3Qgb2Ygc3RhcnJlZCByZXBvc2l0b3JpZXMgZm9yIHRoZSB1c2VyXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvYWN0aXZpdHkvc3RhcnJpbmcvI2xpc3QtcmVwb3NpdG9yaWVzLWJlaW5nLXN0YXJyZWRcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2Ygc3RhcnJlZCByZXBvc2l0b3JpZXNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdFN0YXJyZWRSZXBvcyhjYikge1xuICAgICAgbGV0IHJlcXVlc3RPcHRpb25zID0gdGhpcy5fZ2V0T3B0aW9uc1dpdGhEZWZhdWx0cygpO1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3RBbGxQYWdlcyh0aGlzLl9fZ2V0U2NvcGVkVXJsKCdzdGFycmVkJyksIHJlcXVlc3RPcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogTGlzdCBlbWFpbCBhZGRyZXNzZXMgZm9yIGEgdXNlclxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3VzZXJzL2VtYWlscy8jbGlzdC1lbWFpbC1hZGRyZXNzZXMtZm9yLWEtdXNlclxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgbGlzdCBvZiBlbWFpbHNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0RW1haWxzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgJy91c2VyL2VtYWlscycsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBIYXZlIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIgZm9sbG93IHRoaXMgdXNlclxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3VzZXJzL2ZvbGxvd2Vycy8jZm9sbG93LWEtdXNlclxuICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJuYW1lIC0gdGhlIHVzZXIgdG8gZm9sbG93XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRydWUgaWYgdGhlIHJlcXVlc3Qgc3VjY2VlZHNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZm9sbG93KHVzZXJuYW1lLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BVVCcsIGAvdXNlci9mb2xsb3dpbmcvJHt0aGlzLl9fdXNlcn1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogSGF2ZSB0aGUgY3VycmVudGx5IGF1dGhlbnRpY2F0ZWQgdXNlciB1bmZvbGxvdyB0aGlzIHVzZXJcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My91c2Vycy9mb2xsb3dlcnMvI2ZvbGxvdy1hLXVzZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VybmFtZSAtIHRoZSB1c2VyIHRvIHVuZm9sbG93XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gcmVjZWl2ZXMgdHJ1ZSBpZiB0aGUgcmVxdWVzdCBzdWNjZWVkc1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICB1bmZvbGxvdyh1c2VybmFtZSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdERUxFVEUnLCBgL3VzZXIvZm9sbG93aW5nLyR7dGhpcy5fX3VzZXJ9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyByZXBvc2l0b3J5IGZvciB0aGUgY3VycmVudGx5IGF1dGhlbnRpY2F0ZWQgdXNlclxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zLyNjcmVhdGVcbiAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIC0gdGhlIHJlcG9zaXRvcnkgZGVmaW5pdGlvblxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgQVBJIHJlc3BvbnNlXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZVJlcG8ob3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgJy91c2VyL3JlcG9zJywgb3B0aW9ucywgY2IpO1xuICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXI7XG4iXX0=
	//# sourceMappingURL=User.js.map


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * Issue wraps the functionality to get issues for repositories
	 */
	var Issue = function (_Requestable) {
	  _inherits(Issue, _Requestable);

	  /**
	   * Create a new Issue
	   * @param {string} repository - the full name of the repository (`:user/:repo`) to get issues for
	   * @param {Requestable.auth} [auth] - information required to authenticate to Github
	   * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	   */
	  function Issue(repository, auth, apiBase) {
	    _classCallCheck(this, Issue);

	    var _this = _possibleConstructorReturn(this, (Issue.__proto__ || Object.getPrototypeOf(Issue)).call(this, auth, apiBase));

	    _this.__repository = repository;
	    return _this;
	  }

	  /**
	   * Create a new issue
	   * @see https://developer.github.com/v3/issues/#create-an-issue
	   * @param {Object} issueData - the issue to create
	   * @param {Requestable.callback} [cb] - will receive the created issue
	   * @return {Promise} - the promise for the http request
	   */


	  _createClass(Issue, [{
	    key: 'createIssue',
	    value: function createIssue(issueData, cb) {
	      return this._request('POST', '/repos/' + this.__repository + '/issues', issueData, cb);
	    }

	    /**
	     * List the issues for the repository
	     * @see https://developer.github.com/v3/issues/#list-issues-for-a-repository
	     * @param {Object} options - filtering options
	     * @param {Requestable.callback} [cb] - will receive the array of issues
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listIssues',
	    value: function listIssues(options, cb) {
	      return this._requestAllPages('/repos/' + this.__repository + '/issues', options, cb);
	    }

	    /**
	     * List the events for an issue
	     * @see https://developer.github.com/v3/issues/events/#list-events-for-an-issue
	     * @param {number} issue - the issue to get events for
	     * @param {Requestable.callback} [cb] - will receive the list of events
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listIssueEvents',
	    value: function listIssueEvents(issue, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/issues/' + issue + '/events', null, cb);
	    }

	    /**
	     * List comments on an issue
	     * @see https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue
	     * @param {number} issue - the id of the issue to get comments from
	     * @param {Requestable.callback} [cb] - will receive the comments
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listIssueComments',
	    value: function listIssueComments(issue, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/issues/' + issue + '/comments', null, cb);
	    }

	    /**
	     * Get a single comment on an issue
	     * @see https://developer.github.com/v3/issues/comments/#get-a-single-comment
	     * @param {number} id - the comment id to get
	     * @param {Requestable.callback} [cb] - will receive the comment
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getIssueComment',
	    value: function getIssueComment(id, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/issues/comments/' + id, null, cb);
	    }

	    /**
	     * Comment on an issue
	     * @see https://developer.github.com/v3/issues/comments/#create-a-comment
	     * @param {number} issue - the id of the issue to comment on
	     * @param {string} comment - the comment to add
	     * @param {Requestable.callback} [cb] - will receive the created comment
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'createIssueComment',
	    value: function createIssueComment(issue, comment, cb) {
	      return this._request('POST', '/repos/' + this.__repository + '/issues/' + issue + '/comments', { body: comment }, cb);
	    }

	    /**
	     * Edit a comment on an issue
	     * @see https://developer.github.com/v3/issues/comments/#edit-a-comment
	     * @param {number} id - the comment id to edit
	     * @param {string} comment - the comment to edit
	     * @param {Requestable.callback} [cb] - will receive the edited comment
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'editIssueComment',
	    value: function editIssueComment(id, comment, cb) {
	      return this._request('PATCH', '/repos/' + this.__repository + '/issues/comments/' + id, { body: comment }, cb);
	    }

	    /**
	     * Delete a comment on an issue
	     * @see https://developer.github.com/v3/issues/comments/#delete-a-comment
	     * @param {number} id - the comment id to delete
	     * @param {Requestable.callback} [cb] - will receive true if the request is successful
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'deleteIssueComment',
	    value: function deleteIssueComment(id, cb) {
	      return this._request('DELETE', '/repos/' + this.__repository + '/issues/comments/' + id, null, cb);
	    }

	    /**
	     * Edit an issue
	     * @see https://developer.github.com/v3/issues/#edit-an-issue
	     * @param {number} issue - the issue number to edit
	     * @param {Object} issueData - the new issue data
	     * @param {Requestable.callback} [cb] - will receive the modified issue
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'editIssue',
	    value: function editIssue(issue, issueData, cb) {
	      return this._request('PATCH', '/repos/' + this.__repository + '/issues/' + issue, issueData, cb);
	    }

	    /**
	     * Get a particular issue
	     * @see https://developer.github.com/v3/issues/#get-a-single-issue
	     * @param {number} issue - the issue number to fetch
	     * @param {Requestable.callback} [cb] - will receive the issue
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getIssue',
	    value: function getIssue(issue, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/issues/' + issue, null, cb);
	    }

	    /**
	     * List the milestones for the repository
	     * @see https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
	     * @param {Object} options - filtering options
	     * @param {Requestable.callback} [cb] - will receive the array of milestones
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listMilestones',
	    value: function listMilestones(options, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/milestones', options, cb);
	    }

	    /**
	     * Get a milestone
	     * @see https://developer.github.com/v3/issues/milestones/#get-a-single-milestone
	     * @param {string} milestone - the id of the milestone to fetch
	     * @param {Requestable.callback} [cb] - will receive the milestone
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getMilestone',
	    value: function getMilestone(milestone, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/milestones/' + milestone, null, cb);
	    }

	    /**
	     * Create a new milestone
	     * @see https://developer.github.com/v3/issues/milestones/#create-a-milestone
	     * @param {Object} milestoneData - the milestone definition
	     * @param {Requestable.callback} [cb] - will receive the milestone
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'createMilestone',
	    value: function createMilestone(milestoneData, cb) {
	      return this._request('POST', '/repos/' + this.__repository + '/milestones', milestoneData, cb);
	    }

	    /**
	     * Edit a milestone
	     * @see https://developer.github.com/v3/issues/milestones/#update-a-milestone
	     * @param {string} milestone - the id of the milestone to edit
	     * @param {Object} milestoneData - the updates to make to the milestone
	     * @param {Requestable.callback} [cb] - will receive the updated milestone
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'editMilestone',
	    value: function editMilestone(milestone, milestoneData, cb) {
	      return this._request('PATCH', '/repos/' + this.__repository + '/milestones/' + milestone, milestoneData, cb);
	    }

	    /**
	     * Delete a milestone (this is distinct from closing a milestone)
	     * @see https://developer.github.com/v3/issues/milestones/#delete-a-milestone
	     * @param {string} milestone - the id of the milestone to delete
	     * @param {Requestable.callback} [cb] - will receive the status
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'deleteMilestone',
	    value: function deleteMilestone(milestone, cb) {
	      return this._request('DELETE', '/repos/' + this.__repository + '/milestones/' + milestone, null, cb);
	    }

	    /**
	     * Create a new label
	     * @see https://developer.github.com/v3/issues/labels/#create-a-label
	     * @param {Object} labelData - the label definition
	     * @param {Requestable.callback} [cb] - will receive the object representing the label
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'createLabel',
	    value: function createLabel(labelData, cb) {
	      return this._request('POST', '/repos/' + this.__repository + '/labels', labelData, cb);
	    }

	    /**
	     * List the labels for the repository
	     * @see https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository
	     * @param {Object} options - filtering options
	     * @param {Requestable.callback} [cb] - will receive the array of labels
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listLabels',
	    value: function listLabels(options, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/labels', options, cb);
	    }

	    /**
	     * Get a label
	     * @see https://developer.github.com/v3/issues/labels/#get-a-single-label
	     * @param {string} label - the name of the label to fetch
	     * @param {Requestable.callback} [cb] - will receive the label
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getLabel',
	    value: function getLabel(label, cb) {
	      return this._request('GET', '/repos/' + this.__repository + '/labels/' + label, null, cb);
	    }

	    /**
	     * Edit a label
	     * @see https://developer.github.com/v3/issues/labels/#update-a-label
	     * @param {string} label - the name of the label to edit
	     * @param {Object} labelData - the updates to make to the label
	     * @param {Requestable.callback} [cb] - will receive the updated label
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'editLabel',
	    value: function editLabel(label, labelData, cb) {
	      return this._request('PATCH', '/repos/' + this.__repository + '/labels/' + label, labelData, cb);
	    }

	    /**
	     * Delete a label
	     * @see https://developer.github.com/v3/issues/labels/#delete-a-label
	     * @param {string} label - the name of the label to delete
	     * @param {Requestable.callback} [cb] - will receive the status
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'deleteLabel',
	    value: function deleteLabel(label, cb) {
	      return this._request('DELETE', '/repos/' + this.__repository + '/labels/' + label, null, cb);
	    }
	  }]);

	  return Issue;
	}(_Requestable3.default);

	module.exports = Issue;
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Issue.js.map


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	var _debug = __webpack_require__(32);

	var _debug2 = _interopRequireDefault(_debug);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var log = (0, _debug2.default)('github:search');

	/**
	 * Wrap the Search API
	 */

	var Search = function (_Requestable) {
	  _inherits(Search, _Requestable);

	  /**
	   * Create a Search
	   * @param {Object} defaults - defaults for the search
	   * @param {Requestable.auth} [auth] - information required to authenticate to Github
	   * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	   */
	  function Search(defaults, auth, apiBase) {
	    _classCallCheck(this, Search);

	    var _this = _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).call(this, auth, apiBase));

	    _this.__defaults = _this._getOptionsWithDefaults(defaults);
	    return _this;
	  }

	  /**
	   * Available search options
	   * @see https://developer.github.com/v3/search/#parameters
	   * @typedef {Object} Search.Params
	   * @param {string} q - the query to make
	   * @param {string} sort - the sort field, one of `stars`, `forks`, or `updated`.
	   *                      Default is [best match](https://developer.github.com/v3/search/#ranking-search-results)
	   * @param {string} order - the ordering, either `asc` or `desc`
	   */
	  /**
	   * Perform a search on the GitHub API
	   * @private
	   * @param {string} path - the scope of the search
	   * @param {Search.Params} [withOptions] - additional parameters for the search
	   * @param {Requestable.callback} [cb] - will receive the results of the search
	   * @return {Promise} - the promise for the http request
	   */


	  _createClass(Search, [{
	    key: '_search',
	    value: function _search(path) {
	      var _this2 = this;

	      var withOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

	      var requestOptions = {};
	      Object.keys(this.__defaults).forEach(function (prop) {
	        requestOptions[prop] = _this2.__defaults[prop];
	      });
	      Object.keys(withOptions).forEach(function (prop) {
	        requestOptions[prop] = withOptions[prop];
	      });

	      log('searching ' + path + ' with options:', requestOptions);
	      return this._requestAllPages('/search/' + path, requestOptions, cb);
	    }

	    /**
	     * Search for repositories
	     * @see https://developer.github.com/v3/search/#search-repositories
	     * @param {Search.Params} [options] - additional parameters for the search
	     * @param {Requestable.callback} [cb] - will receive the results of the search
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'forRepositories',
	    value: function forRepositories(options, cb) {
	      return this._search('repositories', options, cb);
	    }

	    /**
	     * Search for code
	     * @see https://developer.github.com/v3/search/#search-code
	     * @param {Search.Params} [options] - additional parameters for the search
	     * @param {Requestable.callback} [cb] - will receive the results of the search
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'forCode',
	    value: function forCode(options, cb) {
	      return this._search('code', options, cb);
	    }

	    /**
	     * Search for issues
	     * @see https://developer.github.com/v3/search/#search-issues
	     * @param {Search.Params} [options] - additional parameters for the search
	     * @param {Requestable.callback} [cb] - will receive the results of the search
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'forIssues',
	    value: function forIssues(options, cb) {
	      return this._search('issues', options, cb);
	    }

	    /**
	     * Search for users
	     * @see https://developer.github.com/v3/search/#search-users
	     * @param {Search.Params} [options] - additional parameters for the search
	     * @param {Requestable.callback} [cb] - will receive the results of the search
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'forUsers',
	    value: function forUsers(options, cb) {
	      return this._search('users', options, cb);
	    }
	  }]);

	  return Search;
	}(_Requestable3.default);

	module.exports = Search;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlYXJjaC5qcyJdLCJuYW1lcyI6WyJsb2ciLCJTZWFyY2giLCJkZWZhdWx0cyIsImF1dGgiLCJhcGlCYXNlIiwiX19kZWZhdWx0cyIsIl9nZXRPcHRpb25zV2l0aERlZmF1bHRzIiwicGF0aCIsIndpdGhPcHRpb25zIiwiY2IiLCJ1bmRlZmluZWQiLCJyZXF1ZXN0T3B0aW9ucyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwicHJvcCIsIl9yZXF1ZXN0QWxsUGFnZXMiLCJvcHRpb25zIiwiX3NlYXJjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFPQTs7OztBQUNBOzs7Ozs7Ozs7OytlQVJBOzs7Ozs7O0FBU0EsSUFBTUEsTUFBTSxxQkFBTSxlQUFOLENBQVo7O0FBRUE7Ozs7SUFHTUMsTTs7O0FBQ0g7Ozs7OztBQU1BLGtCQUFZQyxRQUFaLEVBQXNCQyxJQUF0QixFQUE0QkMsT0FBNUIsRUFBcUM7QUFBQTs7QUFBQSxnSEFDNUJELElBRDRCLEVBQ3RCQyxPQURzQjs7QUFFbEMsVUFBS0MsVUFBTCxHQUFrQixNQUFLQyx1QkFBTCxDQUE2QkosUUFBN0IsQ0FBbEI7QUFGa0M7QUFHcEM7O0FBRUQ7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7NEJBUVFLLEksRUFBd0M7QUFBQTs7QUFBQSxVQUFsQ0MsV0FBa0MsdUVBQXBCLEVBQW9CO0FBQUEsVUFBaEJDLEVBQWdCLHVFQUFYQyxTQUFXOztBQUM3QyxVQUFJQyxpQkFBaUIsRUFBckI7QUFDQUMsYUFBT0MsSUFBUCxDQUFZLEtBQUtSLFVBQWpCLEVBQTZCUyxPQUE3QixDQUFxQyxVQUFDQyxJQUFELEVBQVU7QUFDNUNKLHVCQUFlSSxJQUFmLElBQXVCLE9BQUtWLFVBQUwsQ0FBZ0JVLElBQWhCLENBQXZCO0FBQ0YsT0FGRDtBQUdBSCxhQUFPQyxJQUFQLENBQVlMLFdBQVosRUFBeUJNLE9BQXpCLENBQWlDLFVBQUNDLElBQUQsRUFBVTtBQUN4Q0osdUJBQWVJLElBQWYsSUFBdUJQLFlBQVlPLElBQVosQ0FBdkI7QUFDRixPQUZEOztBQUlBZix5QkFBaUJPLElBQWpCLHFCQUF1Q0ksY0FBdkM7QUFDQSxhQUFPLEtBQUtLLGdCQUFMLGNBQWlDVCxJQUFqQyxFQUF5Q0ksY0FBekMsRUFBeURGLEVBQXpELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztvQ0FPZ0JRLE8sRUFBU1IsRSxFQUFJO0FBQzFCLGFBQU8sS0FBS1MsT0FBTCxDQUFhLGNBQWIsRUFBNkJELE9BQTdCLEVBQXNDUixFQUF0QyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7NEJBT1FRLE8sRUFBU1IsRSxFQUFJO0FBQ2xCLGFBQU8sS0FBS1MsT0FBTCxDQUFhLE1BQWIsRUFBcUJELE9BQXJCLEVBQThCUixFQUE5QixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7OEJBT1VRLE8sRUFBU1IsRSxFQUFJO0FBQ3BCLGFBQU8sS0FBS1MsT0FBTCxDQUFhLFFBQWIsRUFBdUJELE9BQXZCLEVBQWdDUixFQUFoQyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7NkJBT1NRLE8sRUFBU1IsRSxFQUFJO0FBQ25CLGFBQU8sS0FBS1MsT0FBTCxDQUFhLE9BQWIsRUFBc0JELE9BQXRCLEVBQStCUixFQUEvQixDQUFQO0FBQ0Y7Ozs7OztBQUdKVSxPQUFPQyxPQUFQLEdBQWlCbkIsTUFBakIiLCJmaWxlIjoiU2VhcmNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZVxuICogQGNvcHlyaWdodCAgMjAxMyBNaWNoYWVsIEF1ZnJlaXRlciAoRGV2ZWxvcG1lbnQgU2VlZCkgYW5kIDIwMTYgWWFob28gSW5jLlxuICogQGxpY2Vuc2UgICAgTGljZW5zZWQgdW5kZXIge0BsaW5rIGh0dHBzOi8vc3BkeC5vcmcvbGljZW5zZXMvQlNELTMtQ2xhdXNlLUNsZWFyLmh0bWwgQlNELTMtQ2xhdXNlLUNsZWFyfS5cbiAqICAgICAgICAgICAgIEdpdGh1Yi5qcyBpcyBmcmVlbHkgZGlzdHJpYnV0YWJsZS5cbiAqL1xuXG5pbXBvcnQgUmVxdWVzdGFibGUgZnJvbSAnLi9SZXF1ZXN0YWJsZSc7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuY29uc3QgbG9nID0gZGVidWcoJ2dpdGh1YjpzZWFyY2gnKTtcblxuLyoqXG4gKiBXcmFwIHRoZSBTZWFyY2ggQVBJXG4gKi9cbmNsYXNzIFNlYXJjaCBleHRlbmRzIFJlcXVlc3RhYmxlIHtcbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgU2VhcmNoXG4gICAgKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdHMgLSBkZWZhdWx0cyBmb3IgdGhlIHNlYXJjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5hdXRofSBbYXV0aF0gLSBpbmZvcm1hdGlvbiByZXF1aXJlZCB0byBhdXRoZW50aWNhdGUgdG8gR2l0aHViXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW2FwaUJhc2U9aHR0cHM6Ly9hcGkuZ2l0aHViLmNvbV0gLSB0aGUgYmFzZSBHaXRodWIgQVBJIFVSTFxuICAgICovXG4gICBjb25zdHJ1Y3RvcihkZWZhdWx0cywgYXV0aCwgYXBpQmFzZSkge1xuICAgICAgc3VwZXIoYXV0aCwgYXBpQmFzZSk7XG4gICAgICB0aGlzLl9fZGVmYXVsdHMgPSB0aGlzLl9nZXRPcHRpb25zV2l0aERlZmF1bHRzKGRlZmF1bHRzKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBBdmFpbGFibGUgc2VhcmNoIG9wdGlvbnNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9zZWFyY2gvI3BhcmFtZXRlcnNcbiAgICAqIEB0eXBlZGVmIHtPYmplY3R9IFNlYXJjaC5QYXJhbXNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBxIC0gdGhlIHF1ZXJ5IHRvIG1ha2VcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3J0IC0gdGhlIHNvcnQgZmllbGQsIG9uZSBvZiBgc3RhcnNgLCBgZm9ya3NgLCBvciBgdXBkYXRlZGAuXG4gICAgKiAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0IGlzIFtiZXN0IG1hdGNoXShodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3NlYXJjaC8jcmFua2luZy1zZWFyY2gtcmVzdWx0cylcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcmRlciAtIHRoZSBvcmRlcmluZywgZWl0aGVyIGBhc2NgIG9yIGBkZXNjYFxuICAgICovXG4gICAvKipcbiAgICAqIFBlcmZvcm0gYSBzZWFyY2ggb24gdGhlIEdpdEh1YiBBUElcbiAgICAqIEBwcml2YXRlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCAtIHRoZSBzY29wZSBvZiB0aGUgc2VhcmNoXG4gICAgKiBAcGFyYW0ge1NlYXJjaC5QYXJhbXN9IFt3aXRoT3B0aW9uc10gLSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHJlc3VsdHMgb2YgdGhlIHNlYXJjaFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBfc2VhcmNoKHBhdGgsIHdpdGhPcHRpb25zID0ge30sIGNiID0gdW5kZWZpbmVkKSB7XG4gICAgICBsZXQgcmVxdWVzdE9wdGlvbnMgPSB7fTtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuX19kZWZhdWx0cykuZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgICAgcmVxdWVzdE9wdGlvbnNbcHJvcF0gPSB0aGlzLl9fZGVmYXVsdHNbcHJvcF07XG4gICAgICB9KTtcbiAgICAgIE9iamVjdC5rZXlzKHdpdGhPcHRpb25zKS5mb3JFYWNoKChwcm9wKSA9PiB7XG4gICAgICAgICByZXF1ZXN0T3B0aW9uc1twcm9wXSA9IHdpdGhPcHRpb25zW3Byb3BdO1xuICAgICAgfSk7XG5cbiAgICAgIGxvZyhgc2VhcmNoaW5nICR7cGF0aH0gd2l0aCBvcHRpb25zOmAsIHJlcXVlc3RPcHRpb25zKTtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0QWxsUGFnZXMoYC9zZWFyY2gvJHtwYXRofWAsIHJlcXVlc3RPcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogU2VhcmNoIGZvciByZXBvc2l0b3JpZXNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9zZWFyY2gvI3NlYXJjaC1yZXBvc2l0b3JpZXNcbiAgICAqIEBwYXJhbSB7U2VhcmNoLlBhcmFtc30gW29wdGlvbnNdIC0gYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZvciB0aGUgc2VhcmNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSByZXN1bHRzIG9mIHRoZSBzZWFyY2hcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZm9yUmVwb3NpdG9yaWVzKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VhcmNoKCdyZXBvc2l0b3JpZXMnLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogU2VhcmNoIGZvciBjb2RlXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvc2VhcmNoLyNzZWFyY2gtY29kZVxuICAgICogQHBhcmFtIHtTZWFyY2guUGFyYW1zfSBbb3B0aW9uc10gLSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHJlc3VsdHMgb2YgdGhlIHNlYXJjaFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBmb3JDb2RlKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VhcmNoKCdjb2RlJywgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFNlYXJjaCBmb3IgaXNzdWVzXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvc2VhcmNoLyNzZWFyY2gtaXNzdWVzXG4gICAgKiBAcGFyYW0ge1NlYXJjaC5QYXJhbXN9IFtvcHRpb25zXSAtIGFkZGl0aW9uYWwgcGFyYW1ldGVycyBmb3IgdGhlIHNlYXJjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgcmVzdWx0cyBvZiB0aGUgc2VhcmNoXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGZvcklzc3VlcyhvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3NlYXJjaCgnaXNzdWVzJywgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFNlYXJjaCBmb3IgdXNlcnNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9zZWFyY2gvI3NlYXJjaC11c2Vyc1xuICAgICogQHBhcmFtIHtTZWFyY2guUGFyYW1zfSBbb3B0aW9uc10gLSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHJlc3VsdHMgb2YgdGhlIHNlYXJjaFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBmb3JVc2VycyhvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3NlYXJjaCgndXNlcnMnLCBvcHRpb25zLCBjYik7XG4gICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2VhcmNoO1xuIl19
	//# sourceMappingURL=Search.js.map


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * RateLimit allows users to query their rate-limit status
	 */
	var RateLimit = function (_Requestable) {
	  _inherits(RateLimit, _Requestable);

	  /**
	   * construct a RateLimit
	   * @param {Requestable.auth} auth - the credentials to authenticate to GitHub
	   * @param {string} [apiBase] - the base Github API URL
	   * @return {Promise} - the promise for the http request
	   */
	  function RateLimit(auth, apiBase) {
	    _classCallCheck(this, RateLimit);

	    return _possibleConstructorReturn(this, (RateLimit.__proto__ || Object.getPrototypeOf(RateLimit)).call(this, auth, apiBase));
	  }

	  /**
	   * Query the current rate limit
	   * @see https://developer.github.com/v3/rate_limit/
	   * @param {Requestable.callback} [cb] - will receive the rate-limit data
	   * @return {Promise} - the promise for the http request
	   */


	  _createClass(RateLimit, [{
	    key: 'getRateLimit',
	    value: function getRateLimit(cb) {
	      return this._request('GET', '/rate_limit', null, cb);
	    }
	  }]);

	  return RateLimit;
	}(_Requestable3.default);

	module.exports = RateLimit;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJhdGVMaW1pdC5qcyJdLCJuYW1lcyI6WyJSYXRlTGltaXQiLCJhdXRoIiwiYXBpQmFzZSIsImNiIiwiX3JlcXVlc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBT0E7Ozs7Ozs7Ozs7K2VBUEE7Ozs7Ozs7QUFTQTs7O0lBR01BLFM7OztBQUNIOzs7Ozs7QUFNQSxxQkFBWUMsSUFBWixFQUFrQkMsT0FBbEIsRUFBMkI7QUFBQTs7QUFBQSxpSEFDbEJELElBRGtCLEVBQ1pDLE9BRFk7QUFFMUI7O0FBRUQ7Ozs7Ozs7Ozs7aUNBTWFDLEUsRUFBSTtBQUNkLGFBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsRUFBcUIsYUFBckIsRUFBb0MsSUFBcEMsRUFBMENELEVBQTFDLENBQVA7QUFDRjs7Ozs7O0FBR0pFLE9BQU9DLE9BQVAsR0FBaUJOLFNBQWpCIiwiZmlsZSI6IlJhdGVMaW1pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEBjb3B5cmlnaHQgIDIwMTMgTWljaGFlbCBBdWZyZWl0ZXIgKERldmVsb3BtZW50IFNlZWQpIGFuZCAyMDE2IFlhaG9vIEluYy5cbiAqIEBsaWNlbnNlICAgIExpY2Vuc2VkIHVuZGVyIHtAbGluayBodHRwczovL3NwZHgub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZS1DbGVhci5odG1sIEJTRC0zLUNsYXVzZS1DbGVhcn0uXG4gKiAgICAgICAgICAgICBHaXRodWIuanMgaXMgZnJlZWx5IGRpc3RyaWJ1dGFibGUuXG4gKi9cblxuaW1wb3J0IFJlcXVlc3RhYmxlIGZyb20gJy4vUmVxdWVzdGFibGUnO1xuXG4vKipcbiAqIFJhdGVMaW1pdCBhbGxvd3MgdXNlcnMgdG8gcXVlcnkgdGhlaXIgcmF0ZS1saW1pdCBzdGF0dXNcbiAqL1xuY2xhc3MgUmF0ZUxpbWl0IGV4dGVuZHMgUmVxdWVzdGFibGUge1xuICAgLyoqXG4gICAgKiBjb25zdHJ1Y3QgYSBSYXRlTGltaXRcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuYXV0aH0gYXV0aCAtIHRoZSBjcmVkZW50aWFscyB0byBhdXRoZW50aWNhdGUgdG8gR2l0SHViXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW2FwaUJhc2VdIC0gdGhlIGJhc2UgR2l0aHViIEFQSSBVUkxcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY29uc3RydWN0b3IoYXV0aCwgYXBpQmFzZSkge1xuICAgICAgc3VwZXIoYXV0aCwgYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogUXVlcnkgdGhlIGN1cnJlbnQgcmF0ZSBsaW1pdFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JhdGVfbGltaXQvXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSByYXRlLWxpbWl0IGRhdGFcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0UmF0ZUxpbWl0KGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgJy9yYXRlX2xpbWl0JywgbnVsbCwgY2IpO1xuICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJhdGVMaW1pdDtcbiJdfQ==
	//# sourceMappingURL=RateLimit.js.map


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	var _utf = __webpack_require__(45);

	var _utf2 = _interopRequireDefault(_utf);

	var _jsBase = __webpack_require__(35);

	var _debug = __webpack_require__(32);

	var _debug2 = _interopRequireDefault(_debug);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var log = (0, _debug2.default)('github:repository');

	/**
	 * Respository encapsulates the functionality to create, query, and modify files.
	 */

	var Repository = function (_Requestable) {
	   _inherits(Repository, _Requestable);

	   /**
	    * Create a Repository.
	    * @param {string} fullname - the full name of the repository
	    * @param {Requestable.auth} [auth] - information required to authenticate to Github
	    * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	    */
	   function Repository(fullname, auth, apiBase) {
	      _classCallCheck(this, Repository);

	      var _this = _possibleConstructorReturn(this, (Repository.__proto__ || Object.getPrototypeOf(Repository)).call(this, auth, apiBase));

	      _this.__fullname = fullname;
	      _this.__currentTree = {
	         branch: null,
	         sha: null
	      };
	      return _this;
	   }

	   /**
	    * Get a reference
	    * @see https://developer.github.com/v3/git/refs/#get-a-reference
	    * @param {string} ref - the reference to get
	    * @param {Requestable.callback} [cb] - will receive the reference's refSpec or a list of refSpecs that match `ref`
	    * @return {Promise} - the promise for the http request
	    */


	   _createClass(Repository, [{
	      key: 'getRef',
	      value: function getRef(ref, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/git/refs/' + ref, null, cb);
	      }

	      /**
	       * Create a reference
	       * @see https://developer.github.com/v3/git/refs/#create-a-reference
	       * @param {Object} options - the object describing the ref
	       * @param {Requestable.callback} [cb] - will receive the ref
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createRef',
	      value: function createRef(options, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/git/refs', options, cb);
	      }

	      /**
	       * Delete a reference
	       * @see https://developer.github.com/v3/git/refs/#delete-a-reference
	       * @param {string} ref - the name of the ref to delte
	       * @param {Requestable.callback} [cb] - will receive true if the request is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteRef',
	      value: function deleteRef(ref, cb) {
	         return this._request('DELETE', '/repos/' + this.__fullname + '/git/refs/' + ref, null, cb);
	      }

	      /**
	       * Delete a repository
	       * @see https://developer.github.com/v3/repos/#delete-a-repository
	       * @param {Requestable.callback} [cb] - will receive true if the request is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteRepo',
	      value: function deleteRepo(cb) {
	         return this._request('DELETE', '/repos/' + this.__fullname, null, cb);
	      }

	      /**
	       * List the tags on a repository
	       * @see https://developer.github.com/v3/repos/#list-tags
	       * @param {Requestable.callback} [cb] - will receive the tag data
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listTags',
	      value: function listTags(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/tags', null, cb);
	      }

	      /**
	       * List the open pull requests on the repository
	       * @see https://developer.github.com/v3/pulls/#list-pull-requests
	       * @param {Object} options - options to filter the search
	       * @param {Requestable.callback} [cb] - will receive the list of PRs
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listPullRequests',
	      value: function listPullRequests(options, cb) {
	         options = options || {};
	         return this._request('GET', '/repos/' + this.__fullname + '/pulls', options, cb);
	      }

	      /**
	       * Get information about a specific pull request
	       * @see https://developer.github.com/v3/pulls/#get-a-single-pull-request
	       * @param {number} number - the PR you wish to fetch
	       * @param {Requestable.callback} [cb] - will receive the PR from the API
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getPullRequest',
	      value: function getPullRequest(number, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/pulls/' + number, null, cb);
	      }

	      /**
	       * List the files of a specific pull request
	       * @see https://developer.github.com/v3/pulls/#list-pull-requests-files
	       * @param {number|string} number - the PR you wish to fetch
	       * @param {Requestable.callback} [cb] - will receive the list of files from the API
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listPullRequestFiles',
	      value: function listPullRequestFiles(number, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/pulls/' + number + '/files', null, cb);
	      }

	      /**
	       * Compare two branches/commits/repositories
	       * @see https://developer.github.com/v3/repos/commits/#compare-two-commits
	       * @param {string} base - the base commit
	       * @param {string} head - the head commit
	       * @param {Requestable.callback} cb - will receive the comparison
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'compareBranches',
	      value: function compareBranches(base, head, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/compare/' + base + '...' + head, null, cb);
	      }

	      /**
	       * List all the branches for the repository
	       * @see https://developer.github.com/v3/repos/#list-branches
	       * @param {Requestable.callback} cb - will receive the list of branches
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listBranches',
	      value: function listBranches(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/branches', null, cb);
	      }

	      /**
	       * Get a raw blob from the repository
	       * @see https://developer.github.com/v3/git/blobs/#get-a-blob
	       * @param {string} sha - the sha of the blob to fetch
	       * @param {Requestable.callback} cb - will receive the blob from the API
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getBlob',
	      value: function getBlob(sha, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/git/blobs/' + sha, null, cb, 'raw');
	      }

	      /**
	       * Get a single branch
	       * @see https://developer.github.com/v3/repos/branches/#get-branch
	       * @param {string} branch - the name of the branch to fetch
	       * @param {Requestable.callback} cb - will receive the branch from the API
	       * @returns {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getBranch',
	      value: function getBranch(branch, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/branches/' + branch, null, cb);
	      }

	      /**
	       * Get a commit from the repository
	       * @see https://developer.github.com/v3/repos/commits/#get-a-single-commit
	       * @param {string} sha - the sha for the commit to fetch
	       * @param {Requestable.callback} cb - will receive the commit data
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getCommit',
	      value: function getCommit(sha, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/git/commits/' + sha, null, cb);
	      }

	      /**
	       * List the commits on a repository, optionally filtering by path, author or time range
	       * @see https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository
	       * @param {Object} [options] - the filtering options for commits
	       * @param {string} [options.sha] - the SHA or branch to start from
	       * @param {string} [options.path] - the path to search on
	       * @param {string} [options.author] - the commit author
	       * @param {(Date|string)} [options.since] - only commits after this date will be returned
	       * @param {(Date|string)} [options.until] - only commits before this date will be returned
	       * @param {Requestable.callback} cb - will receive the list of commits found matching the criteria
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listCommits',
	      value: function listCommits(options, cb) {
	         options = options || {};

	         options.since = this._dateToISO(options.since);
	         options.until = this._dateToISO(options.until);

	         return this._request('GET', '/repos/' + this.__fullname + '/commits', options, cb);
	      }

	      /**
	       * Gets a single commit information for a repository
	       * @see https://developer.github.com/v3/repos/commits/#get-a-single-commit
	       * @param {string} ref - the reference for the commit-ish
	       * @param {Requestable.callback} cb - will receive the commit information
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getSingleCommit',
	      value: function getSingleCommit(ref, cb) {
	         ref = ref || '';
	         return this._request('GET', '/repos/' + this.__fullname + '/commits/' + ref, null, cb);
	      }

	      /**
	       * Get tha sha for a particular object in the repository. This is a convenience function
	       * @see https://developer.github.com/v3/repos/contents/#get-contents
	       * @param {string} [branch] - the branch to look in, or the repository's default branch if omitted
	       * @param {string} path - the path of the file or directory
	       * @param {Requestable.callback} cb - will receive a description of the requested object, including a `SHA` property
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getSha',
	      value: function getSha(branch, path, cb) {
	         branch = branch ? '?ref=' + branch : '';
	         return this._request('GET', '/repos/' + this.__fullname + '/contents/' + path + branch, null, cb);
	      }

	      /**
	       * List the commit statuses for a particular sha, branch, or tag
	       * @see https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
	       * @param {string} sha - the sha, branch, or tag to get statuses for
	       * @param {Requestable.callback} cb - will receive the list of statuses
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listStatuses',
	      value: function listStatuses(sha, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/commits/' + sha + '/statuses', null, cb);
	      }

	      /**
	       * Get a description of a git tree
	       * @see https://developer.github.com/v3/git/trees/#get-a-tree
	       * @param {string} treeSHA - the SHA of the tree to fetch
	       * @param {Requestable.callback} cb - will receive the callback data
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getTree',
	      value: function getTree(treeSHA, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/git/trees/' + treeSHA, null, cb);
	      }

	      /**
	       * Create a blob
	       * @see https://developer.github.com/v3/git/blobs/#create-a-blob
	       * @param {(string|Buffer|Blob)} content - the content to add to the repository
	       * @param {Requestable.callback} cb - will receive the details of the created blob
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createBlob',
	      value: function createBlob(content, cb) {
	         var postBody = this._getContentObject(content);

	         log('sending content', postBody);
	         return this._request('POST', '/repos/' + this.__fullname + '/git/blobs', postBody, cb);
	      }

	      /**
	       * Get the object that represents the provided content
	       * @param {string|Buffer|Blob} content - the content to send to the server
	       * @return {Object} the representation of `content` for the GitHub API
	       */

	   }, {
	      key: '_getContentObject',
	      value: function _getContentObject(content) {
	         if (typeof content === 'string') {
	            log('contet is a string');
	            return {
	               content: _utf2.default.encode(content),
	               encoding: 'utf-8'
	            };
	         } else if (typeof Buffer !== 'undefined' && content instanceof Buffer) {
	            log('We appear to be in Node');
	            return {
	               content: content.toString('base64'),
	               encoding: 'base64'
	            };
	         } else if (typeof Blob !== 'undefined' && content instanceof Blob) {
	            log('We appear to be in the browser');
	            return {
	               content: _jsBase.Base64.encode(content),
	               encoding: 'base64'
	            };
	         } else {
	            // eslint-disable-line
	            log('Not sure what this content is: ' + (typeof content === 'undefined' ? 'undefined' : _typeof(content)) + ', ' + JSON.stringify(content));
	            throw new Error('Unknown content passed to postBlob. Must be string or Buffer (node) or Blob (web)');
	         }
	      }

	      /**
	       * Update a tree in Git
	       * @see https://developer.github.com/v3/git/trees/#create-a-tree
	       * @param {string} baseTreeSHA - the SHA of the tree to update
	       * @param {string} path - the path for the new file
	       * @param {string} blobSHA - the SHA for the blob to put at `path`
	       * @param {Requestable.callback} cb - will receive the new tree that is created
	       * @return {Promise} - the promise for the http request
	       * @deprecated use {@link Repository#createTree} instead
	       */

	   }, {
	      key: 'updateTree',
	      value: function updateTree(baseTreeSHA, path, blobSHA, cb) {
	         var newTree = {
	            base_tree: baseTreeSHA, // eslint-disable-line
	            tree: [{
	               path: path,
	               sha: blobSHA,
	               mode: '100644',
	               type: 'blob'
	            }]
	         };

	         return this._request('POST', '/repos/' + this.__fullname + '/git/trees', newTree, cb);
	      }

	      /**
	       * Create a new tree in git
	       * @see https://developer.github.com/v3/git/trees/#create-a-tree
	       * @param {Object} tree - the tree to create
	       * @param {string} baseSHA - the root sha of the tree
	       * @param {Requestable.callback} cb - will receive the new tree that is created
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createTree',
	      value: function createTree(tree, baseSHA, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/git/trees', {
	            tree: tree,
	            base_tree: baseSHA }, cb);
	      }

	      /**
	       * Add a commit to the repository
	       * @see https://developer.github.com/v3/git/commits/#create-a-commit
	       * @param {string} parent - the SHA of the parent commit
	       * @param {string} tree - the SHA of the tree for this commit
	       * @param {string} message - the commit message
	       * @param {Requestable.callback} cb - will receive the commit that is created
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'commit',
	      value: function commit(parent, tree, message, cb) {
	         var _this2 = this;

	         var data = {
	            message: message,
	            tree: tree,
	            parents: [parent]
	         };

	         return this._request('POST', '/repos/' + this.__fullname + '/git/commits', data, cb).then(function (response) {
	            _this2.__currentTree.sha = response.data.sha; // Update latest commit
	            return response;
	         });
	      }

	      /**
	       * Update a ref
	       * @see https://developer.github.com/v3/git/refs/#update-a-reference
	       * @param {string} ref - the ref to update
	       * @param {string} commitSHA - the SHA to point the reference to
	       * @param {boolean} force - indicates whether to force or ensure a fast-forward update
	       * @param {Requestable.callback} cb - will receive the updated ref back
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateHead',
	      value: function updateHead(ref, commitSHA, force, cb) {
	         return this._request('PATCH', '/repos/' + this.__fullname + '/git/refs/' + ref, {
	            sha: commitSHA,
	            force: force
	         }, cb);
	      }

	      /**
	       * Update commit status
	       * @see https://developer.github.com/v3/repos/statuses/
	       * @param {string} commitSHA - the SHA of the commit that should be updated
	       * @param {object} options - Commit status parameters
	       * @param {string} options.state - The state of the status. Can be one of: pending, success, error, or failure.
	       * @param {string} [options.target_url] - The target URL to associate with this status.
	       * @param {string} [options.description] - A short description of the status.
	       * @param {string} [options.context] - A string label to differentiate this status among CI systems.
	       * @param {Requestable.callback} cb - will receive the updated commit back
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateStatus',
	      value: function updateStatus(commitSHA, options, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/statuses/' + commitSHA, options, cb);
	      }

	      /**
	       * Update repository information
	       * @see https://developer.github.com/v3/repos/#edit
	       * @param {object} options - New parameters that will be set to the repository
	       * @param {string} options.name - Name of the repository
	       * @param {string} [options.description] - A short description of the repository
	       * @param {string} [options.homepage] - A URL with more information about the repository
	       * @param {boolean} [options.private] - Either true to make the repository private, or false to make it public.
	       * @param {boolean} [options.has_issues] - Either true to enable issues for this repository, false to disable them.
	       * @param {boolean} [options.has_wiki] - Either true to enable the wiki for this repository, false to disable it.
	       * @param {boolean} [options.has_downloads] - Either true to enable downloads, false to disable them.
	       * @param {string} [options.default_branch] - Updates the default branch for this repository.
	       * @param {Requestable.callback} cb - will receive the updated repository back
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateRepository',
	      value: function updateRepository(options, cb) {
	         return this._request('PATCH', '/repos/' + this.__fullname, options, cb);
	      }

	      /**
	        * Get information about the repository
	        * @see https://developer.github.com/v3/repos/#get
	        * @param {Requestable.callback} cb - will receive the information about the repository
	        * @return {Promise} - the promise for the http request
	        */

	   }, {
	      key: 'getDetails',
	      value: function getDetails(cb) {
	         return this._request('GET', '/repos/' + this.__fullname, null, cb);
	      }

	      /**
	       * List the contributors to the repository
	       * @see https://developer.github.com/v3/repos/#list-contributors
	       * @param {Requestable.callback} cb - will receive the list of contributors
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getContributors',
	      value: function getContributors(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/contributors', null, cb);
	      }

	      /**
	       * List the contributor stats to the repository
	       * @see https://developer.github.com/v3/repos/#list-contributors
	       * @param {Requestable.callback} cb - will receive the list of contributors
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getContributorStats',
	      value: function getContributorStats(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/stats/contributors', null, cb);
	      }

	      /**
	       * List the users who are collaborators on the repository. The currently authenticated user must have
	       * push access to use this method
	       * @see https://developer.github.com/v3/repos/collaborators/#list-collaborators
	       * @param {Requestable.callback} cb - will receive the list of collaborators
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getCollaborators',
	      value: function getCollaborators(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/collaborators', null, cb);
	      }

	      /**
	       * Check if a user is a collaborator on the repository
	       * @see https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator
	       * @param {string} username - the user to check
	       * @param {Requestable.callback} cb - will receive true if the user is a collaborator and false if they are not
	       * @return {Promise} - the promise for the http request {Boolean} [description]
	       */

	   }, {
	      key: 'isCollaborator',
	      value: function isCollaborator(username, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/collaborators/' + username, null, cb);
	      }

	      /**
	       * Get the contents of a repository
	       * @see https://developer.github.com/v3/repos/contents/#get-contents
	       * @param {string} ref - the ref to check
	       * @param {string} path - the path containing the content to fetch
	       * @param {boolean} raw - `true` if the results should be returned raw instead of GitHub's normalized format
	       * @param {Requestable.callback} cb - will receive the fetched data
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getContents',
	      value: function getContents(ref, path, raw, cb) {
	         path = path ? '' + encodeURI(path) : '';
	         return this._request('GET', '/repos/' + this.__fullname + '/contents/' + path, {
	            ref: ref
	         }, cb, raw);
	      }

	      /**
	       * Get the README of a repository
	       * @see https://developer.github.com/v3/repos/contents/#get-the-readme
	       * @param {string} ref - the ref to check
	       * @param {boolean} raw - `true` if the results should be returned raw instead of GitHub's normalized format
	       * @param {Requestable.callback} cb - will receive the fetched data
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getReadme',
	      value: function getReadme(ref, raw, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/readme', {
	            ref: ref
	         }, cb, raw);
	      }

	      /**
	       * Fork a repository
	       * @see https://developer.github.com/v3/repos/forks/#create-a-fork
	       * @param {Requestable.callback} cb - will receive the information about the newly created fork
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'fork',
	      value: function fork(cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/forks', null, cb);
	      }

	      /**
	       * List a repository's forks
	       * @see https://developer.github.com/v3/repos/forks/#list-forks
	       * @param {Requestable.callback} cb - will receive the list of repositories forked from this one
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listForks',
	      value: function listForks(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/forks', null, cb);
	      }

	      /**
	       * Create a new branch from an existing branch.
	       * @param {string} [oldBranch=master] - the name of the existing branch
	       * @param {string} newBranch - the name of the new branch
	       * @param {Requestable.callback} cb - will receive the commit data for the head of the new branch
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createBranch',
	      value: function createBranch(oldBranch, newBranch, cb) {
	         var _this3 = this;

	         if (typeof newBranch === 'function') {
	            cb = newBranch;
	            newBranch = oldBranch;
	            oldBranch = 'master';
	         }

	         return this.getRef('heads/' + oldBranch).then(function (response) {
	            var sha = response.data.object.sha;
	            return _this3.createRef({
	               sha: sha,
	               ref: 'refs/heads/' + newBranch
	            }, cb);
	         });
	      }

	      /**
	       * Create a new pull request
	       * @see https://developer.github.com/v3/pulls/#create-a-pull-request
	       * @param {Object} options - the pull request description
	       * @param {Requestable.callback} cb - will receive the new pull request
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createPullRequest',
	      value: function createPullRequest(options, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/pulls', options, cb);
	      }

	      /**
	       * Update a pull request
	       * @see https://developer.github.com/v3/pulls/#update-a-pull-request
	       * @param {number|string} number - the number of the pull request to update
	       * @param {Object} options - the pull request description
	       * @param {Requestable.callback} [cb] - will receive the pull request information
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updatePullRequest',
	      value: function updatePullRequest(number, options, cb) {
	         return this._request('PATCH', '/repos/' + this.__fullname + '/pulls/' + number, options, cb);
	      }

	      /**
	       * List the hooks for the repository
	       * @see https://developer.github.com/v3/repos/hooks/#list-hooks
	       * @param {Requestable.callback} cb - will receive the list of hooks
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listHooks',
	      value: function listHooks(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/hooks', null, cb);
	      }

	      /**
	       * Get a hook for the repository
	       * @see https://developer.github.com/v3/repos/hooks/#get-single-hook
	       * @param {number} id - the id of the webook
	       * @param {Requestable.callback} cb - will receive the details of the webook
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getHook',
	      value: function getHook(id, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/hooks/' + id, null, cb);
	      }

	      /**
	       * Add a new hook to the repository
	       * @see https://developer.github.com/v3/repos/hooks/#create-a-hook
	       * @param {Object} options - the configuration describing the new hook
	       * @param {Requestable.callback} cb - will receive the new webhook
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createHook',
	      value: function createHook(options, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/hooks', options, cb);
	      }

	      /**
	       * Edit an existing webhook
	       * @see https://developer.github.com/v3/repos/hooks/#edit-a-hook
	       * @param {number} id - the id of the webhook
	       * @param {Object} options - the new description of the webhook
	       * @param {Requestable.callback} cb - will receive the updated webhook
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateHook',
	      value: function updateHook(id, options, cb) {
	         return this._request('PATCH', '/repos/' + this.__fullname + '/hooks/' + id, options, cb);
	      }

	      /**
	       * Delete a webhook
	       * @see https://developer.github.com/v3/repos/hooks/#delete-a-hook
	       * @param {number} id - the id of the webhook to be deleted
	       * @param {Requestable.callback} cb - will receive true if the call is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteHook',
	      value: function deleteHook(id, cb) {
	         return this._request('DELETE', this.__fullname + '/hooks/' + id, null, cb);
	      }

	      /**
	       * List the deploy keys for the repository
	       * @see https://developer.github.com/v3/repos/keys/#list-deploy-keys
	       * @param {Requestable.callback} cb - will receive the list of deploy keys
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listKeys',
	      value: function listKeys(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/keys', null, cb);
	      }

	      /**
	       * Get a deploy key for the repository
	       * @see https://developer.github.com/v3/repos/keys/#get-a-deploy-key
	       * @param {number} id - the id of the deploy key
	       * @param {Requestable.callback} cb - will receive the details of the deploy key
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getKey',
	      value: function getKey(id, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/keys/' + id, null, cb);
	      }

	      /**
	       * Add a new deploy key to the repository
	       * @see https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key
	       * @param {Object} options - the configuration describing the new deploy key
	       * @param {Requestable.callback} cb - will receive the new deploy key
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createKey',
	      value: function createKey(options, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/keys', options, cb);
	      }

	      /**
	       * Delete a deploy key
	       * @see https://developer.github.com/v3/repos/keys/#remove-a-deploy-key
	       * @param {number} id - the id of the deploy key to be deleted
	       * @param {Requestable.callback} cb - will receive true if the call is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteKey',
	      value: function deleteKey(id, cb) {
	         return this._request('DELETE', '/repos/' + this.__fullname + '/keys/' + id, null, cb);
	      }

	      /**
	       * Delete a file from a branch
	       * @see https://developer.github.com/v3/repos/contents/#delete-a-file
	       * @param {string} branch - the branch to delete from, or the default branch if not specified
	       * @param {string} path - the path of the file to remove
	       * @param {Requestable.callback} cb - will receive the commit in which the delete occurred
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteFile',
	      value: function deleteFile(branch, path, cb) {
	         var _this4 = this;

	         return this.getSha(branch, path).then(function (response) {
	            var deleteCommit = {
	               message: 'Delete the file at \'' + path + '\'',
	               sha: response.data.sha,
	               branch: branch
	            };
	            return _this4._request('DELETE', '/repos/' + _this4.__fullname + '/contents/' + path, deleteCommit, cb);
	         });
	      }

	      /**
	       * Change all references in a repo from oldPath to new_path
	       * @param {string} branch - the branch to carry out the reference change, or the default branch if not specified
	       * @param {string} oldPath - original path
	       * @param {string} newPath - new reference path
	       * @param {Requestable.callback} cb - will receive the commit in which the move occurred
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'move',
	      value: function move(branch, oldPath, newPath, cb) {
	         var _this5 = this;

	         var oldSha = void 0;
	         return this.getRef('heads/' + branch).then(function (_ref) {
	            var object = _ref.data.object;
	            return _this5.getTree(object.sha + '?recursive=true');
	         }).then(function (_ref2) {
	            var _ref2$data = _ref2.data,
	                tree = _ref2$data.tree,
	                sha = _ref2$data.sha;

	            oldSha = sha;
	            var newTree = tree.map(function (ref) {
	               if (ref.path === oldPath) {
	                  ref.path = newPath;
	               }
	               if (ref.type === 'tree') {
	                  delete ref.sha;
	               }
	               return ref;
	            });
	            return _this5.createTree(newTree);
	         }).then(function (_ref3) {
	            var tree = _ref3.data;
	            return _this5.commit(oldSha, tree.sha, 'Renamed \'' + oldPath + '\' to \'' + newPath + '\'');
	         }).then(function (_ref4) {
	            var commit = _ref4.data;
	            return _this5.updateHead('heads/' + branch, commit.sha, true, cb);
	         });
	      }

	      /**
	       * Write a file to the repository
	       * @see https://developer.github.com/v3/repos/contents/#update-a-file
	       * @param {string} branch - the name of the branch
	       * @param {string} path - the path for the file
	       * @param {string} content - the contents of the file
	       * @param {string} message - the commit message
	       * @param {Object} [options] - commit options
	       * @param {Object} [options.author] - the author of the commit
	       * @param {Object} [options.commiter] - the committer
	       * @param {boolean} [options.encode] - true if the content should be base64 encoded
	       * @param {Requestable.callback} cb - will receive the new commit
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'writeFile',
	      value: function writeFile(branch, path, content, message, options, cb) {
	         var _this6 = this;

	         if (typeof options === 'function') {
	            cb = options;
	            options = {};
	         }
	         var filePath = path ? encodeURI(path) : '';
	         var shouldEncode = options.encode !== false;
	         var commit = {
	            branch: branch,
	            message: message,
	            author: options.author,
	            committer: options.committer,
	            content: shouldEncode ? _jsBase.Base64.encode(content) : content
	         };

	         return this.getSha(branch, filePath).then(function (response) {
	            commit.sha = response.data.sha;
	            return _this6._request('PUT', '/repos/' + _this6.__fullname + '/contents/' + filePath, commit, cb);
	         }, function () {
	            return _this6._request('PUT', '/repos/' + _this6.__fullname + '/contents/' + filePath, commit, cb);
	         });
	      }

	      /**
	       * Check if a repository is starred by you
	       * @see https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository
	       * @param {Requestable.callback} cb - will receive true if the repository is starred and false if the repository
	       *                                  is not starred
	       * @return {Promise} - the promise for the http request {Boolean} [description]
	       */

	   }, {
	      key: 'isStarred',
	      value: function isStarred(cb) {
	         return this._request204or404('/user/starred/' + this.__fullname, null, cb);
	      }

	      /**
	       * Star a repository
	       * @see https://developer.github.com/v3/activity/starring/#star-a-repository
	       * @param {Requestable.callback} cb - will receive true if the repository is starred
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'star',
	      value: function star(cb) {
	         return this._request('PUT', '/user/starred/' + this.__fullname, null, cb);
	      }

	      /**
	       * Unstar a repository
	       * @see https://developer.github.com/v3/activity/starring/#unstar-a-repository
	       * @param {Requestable.callback} cb - will receive true if the repository is unstarred
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'unstar',
	      value: function unstar(cb) {
	         return this._request('DELETE', '/user/starred/' + this.__fullname, null, cb);
	      }

	      /**
	       * Create a new release
	       * @see https://developer.github.com/v3/repos/releases/#create-a-release
	       * @param {Object} options - the description of the release
	       * @param {Requestable.callback} cb - will receive the newly created release
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createRelease',
	      value: function createRelease(options, cb) {
	         return this._request('POST', '/repos/' + this.__fullname + '/releases', options, cb);
	      }

	      /**
	       * Edit a release
	       * @see https://developer.github.com/v3/repos/releases/#edit-a-release
	       * @param {string} id - the id of the release
	       * @param {Object} options - the description of the release
	       * @param {Requestable.callback} cb - will receive the modified release
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateRelease',
	      value: function updateRelease(id, options, cb) {
	         return this._request('PATCH', '/repos/' + this.__fullname + '/releases/' + id, options, cb);
	      }

	      /**
	       * Get information about all releases
	       * @see https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository
	       * @param {Requestable.callback} cb - will receive the release information
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listReleases',
	      value: function listReleases(cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/releases', null, cb);
	      }

	      /**
	       * Get information about a release
	       * @see https://developer.github.com/v3/repos/releases/#get-a-single-release
	       * @param {string} id - the id of the release
	       * @param {Requestable.callback} cb - will receive the release information
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getRelease',
	      value: function getRelease(id, cb) {
	         return this._request('GET', '/repos/' + this.__fullname + '/releases/' + id, null, cb);
	      }

	      /**
	       * Delete a release
	       * @see https://developer.github.com/v3/repos/releases/#delete-a-release
	       * @param {string} id - the release to be deleted
	       * @param {Requestable.callback} cb - will receive true if the operation is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteRelease',
	      value: function deleteRelease(id, cb) {
	         return this._request('DELETE', '/repos/' + this.__fullname + '/releases/' + id, null, cb);
	      }

	      /**
	       * Merge a pull request
	       * @see https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button
	       * @param {number|string} number - the number of the pull request to merge
	       * @param {Object} options - the merge options for the pull request
	       * @param {Requestable.callback} [cb] - will receive the merge information if the operation is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'mergePullRequest',
	      value: function mergePullRequest(number, options, cb) {
	         return this._request('PUT', '/repos/' + this.__fullname + '/pulls/' + number + '/merge', options, cb);
	      }

	      /**
	       * Get information about all projects
	       * @see https://developer.github.com/v3/projects/#list-repository-projects
	       * @param {Requestable.callback} [cb] - will receive the list of projects
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listProjects',
	      value: function listProjects(cb) {
	         return this._requestAllPages('/repos/' + this.__fullname + '/projects', { AcceptHeader: 'inertia-preview' }, cb);
	      }

	      /**
	       * Create a new project
	       * @see https://developer.github.com/v3/projects/#create-a-repository-project
	       * @param {Object} options - the description of the project
	       * @param {Requestable.callback} cb - will receive the newly created project
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createProject',
	      value: function createProject(options, cb) {
	         options = options || {};
	         options.AcceptHeader = 'inertia-preview';
	         return this._request('POST', '/repos/' + this.__fullname + '/projects', options, cb);
	      }
	   }]);

	   return Repository;
	}(_Requestable3.default);

	module.exports = Repository;
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Repository.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36).Buffer))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.1.2 by @mathias */
	;(function(root) {

		// Detect free variables `exports`
		var freeExports = typeof exports == 'object' && exports;

		// Detect free variable `module`
		var freeModule = typeof module == 'object' && module &&
			module.exports == freeExports && module;

		// Detect free variable `global`, from Node.js or Browserified code,
		// and use it as `root`
		var freeGlobal = typeof global == 'object' && global;
		if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
			root = freeGlobal;
		}

		/*--------------------------------------------------------------------------*/

		var stringFromCharCode = String.fromCharCode;

		// Taken from https://mths.be/punycode
		function ucs2decode(string) {
			var output = [];
			var counter = 0;
			var length = string.length;
			var value;
			var extra;
			while (counter < length) {
				value = string.charCodeAt(counter++);
				if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
					// high surrogate, and there is a next character
					extra = string.charCodeAt(counter++);
					if ((extra & 0xFC00) == 0xDC00) { // low surrogate
						output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
					} else {
						// unmatched surrogate; only append this code unit, in case the next
						// code unit is the high surrogate of a surrogate pair
						output.push(value);
						counter--;
					}
				} else {
					output.push(value);
				}
			}
			return output;
		}

		// Taken from https://mths.be/punycode
		function ucs2encode(array) {
			var length = array.length;
			var index = -1;
			var value;
			var output = '';
			while (++index < length) {
				value = array[index];
				if (value > 0xFFFF) {
					value -= 0x10000;
					output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
					value = 0xDC00 | value & 0x3FF;
				}
				output += stringFromCharCode(value);
			}
			return output;
		}

		function checkScalarValue(codePoint) {
			if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
				throw Error(
					'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
					' is not a scalar value'
				);
			}
		}
		/*--------------------------------------------------------------------------*/

		function createByte(codePoint, shift) {
			return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
		}

		function encodeCodePoint(codePoint) {
			if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
				return stringFromCharCode(codePoint);
			}
			var symbol = '';
			if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
				symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
			}
			else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
				checkScalarValue(codePoint);
				symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
				symbol += createByte(codePoint, 6);
			}
			else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
				symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
				symbol += createByte(codePoint, 12);
				symbol += createByte(codePoint, 6);
			}
			symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
			return symbol;
		}

		function utf8encode(string) {
			var codePoints = ucs2decode(string);
			var length = codePoints.length;
			var index = -1;
			var codePoint;
			var byteString = '';
			while (++index < length) {
				codePoint = codePoints[index];
				byteString += encodeCodePoint(codePoint);
			}
			return byteString;
		}

		/*--------------------------------------------------------------------------*/

		function readContinuationByte() {
			if (byteIndex >= byteCount) {
				throw Error('Invalid byte index');
			}

			var continuationByte = byteArray[byteIndex] & 0xFF;
			byteIndex++;

			if ((continuationByte & 0xC0) == 0x80) {
				return continuationByte & 0x3F;
			}

			// If we end up here, it’s not a continuation byte
			throw Error('Invalid continuation byte');
		}

		function decodeSymbol() {
			var byte1;
			var byte2;
			var byte3;
			var byte4;
			var codePoint;

			if (byteIndex > byteCount) {
				throw Error('Invalid byte index');
			}

			if (byteIndex == byteCount) {
				return false;
			}

			// Read first byte
			byte1 = byteArray[byteIndex] & 0xFF;
			byteIndex++;

			// 1-byte sequence (no continuation bytes)
			if ((byte1 & 0x80) == 0) {
				return byte1;
			}

			// 2-byte sequence
			if ((byte1 & 0xE0) == 0xC0) {
				byte2 = readContinuationByte();
				codePoint = ((byte1 & 0x1F) << 6) | byte2;
				if (codePoint >= 0x80) {
					return codePoint;
				} else {
					throw Error('Invalid continuation byte');
				}
			}

			// 3-byte sequence (may include unpaired surrogates)
			if ((byte1 & 0xF0) == 0xE0) {
				byte2 = readContinuationByte();
				byte3 = readContinuationByte();
				codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
				if (codePoint >= 0x0800) {
					checkScalarValue(codePoint);
					return codePoint;
				} else {
					throw Error('Invalid continuation byte');
				}
			}

			// 4-byte sequence
			if ((byte1 & 0xF8) == 0xF0) {
				byte2 = readContinuationByte();
				byte3 = readContinuationByte();
				byte4 = readContinuationByte();
				codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
					(byte3 << 0x06) | byte4;
				if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
					return codePoint;
				}
			}

			throw Error('Invalid UTF-8 detected');
		}

		var byteArray;
		var byteCount;
		var byteIndex;
		function utf8decode(byteString) {
			byteArray = ucs2decode(byteString);
			byteCount = byteArray.length;
			byteIndex = 0;
			var codePoints = [];
			var tmp;
			while ((tmp = decodeSymbol()) !== false) {
				codePoints.push(tmp);
			}
			return ucs2encode(codePoints);
		}

		/*--------------------------------------------------------------------------*/

		var utf8 = {
			'version': '2.1.2',
			'encode': utf8encode,
			'decode': utf8decode
		};

		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if (
			true
		) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
				return utf8;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		}	else if (freeExports && !freeExports.nodeType) {
			if (freeModule) { // in Node.js or RingoJS v0.8.0+
				freeModule.exports = utf8;
			} else { // in Narwhal or RingoJS v0.7.0-
				var object = {};
				var hasOwnProperty = object.hasOwnProperty;
				for (var key in utf8) {
					hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);
				}
			}
		} else { // in Rhino or a web browser
			root.utf8 = utf8;
		}

	}(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(46)(module), (function() { return this; }())))

/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * Organization encapsulates the functionality to create repositories in organizations
	 */
	var Organization = function (_Requestable) {
	  _inherits(Organization, _Requestable);

	  /**
	   * Create a new Organization
	   * @param {string} organization - the name of the organization
	   * @param {Requestable.auth} [auth] - information required to authenticate to Github
	   * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	   */
	  function Organization(organization, auth, apiBase) {
	    _classCallCheck(this, Organization);

	    var _this = _possibleConstructorReturn(this, (Organization.__proto__ || Object.getPrototypeOf(Organization)).call(this, auth, apiBase));

	    _this.__name = organization;
	    return _this;
	  }

	  /**
	   * Create a repository in an organization
	   * @see https://developer.github.com/v3/repos/#create
	   * @param {Object} options - the repository definition
	   * @param {Requestable.callback} [cb] - will receive the created repository
	   * @return {Promise} - the promise for the http request
	   */


	  _createClass(Organization, [{
	    key: 'createRepo',
	    value: function createRepo(options, cb) {
	      return this._request('POST', '/orgs/' + this.__name + '/repos', options, cb);
	    }

	    /**
	     * List the repositories in an organization
	     * @see https://developer.github.com/v3/repos/#list-organization-repositories
	     * @param {Requestable.callback} [cb] - will receive the list of repositories
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getRepos',
	    value: function getRepos(cb) {
	      var requestOptions = this._getOptionsWithDefaults({ direction: 'desc' });

	      return this._requestAllPages('/orgs/' + this.__name + '/repos', requestOptions, cb);
	    }

	    /**
	     * Query if the user is a member or not
	     * @param {string} username - the user in question
	     * @param {Requestable.callback} [cb] - will receive true if the user is a member
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'isMember',
	    value: function isMember(username, cb) {
	      return this._request204or404('/orgs/' + this.__name + '/members/' + username, null, cb);
	    }

	    /**
	     * List the users who are members of the company
	     * @see https://developer.github.com/v3/orgs/members/#members-list
	     * @param {object} options - filtering options
	     * @param {string} [options.filter=all] - can be either `2fa_disabled` or `all`
	     * @param {string} [options.role=all] - can be one of: `all`, `admin`, or `member`
	     * @param {Requestable.callback} [cb] - will receive the list of users
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listMembers',
	    value: function listMembers(options, cb) {
	      return this._request('GET', '/orgs/' + this.__name + '/members', options, cb);
	    }

	    /**
	     * List the Teams in the Organization
	     * @see https://developer.github.com/v3/orgs/teams/#list-teams
	     * @param {Requestable.callback} [cb] - will receive the list of teams
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getTeams',
	    value: function getTeams(cb) {
	      return this._requestAllPages('/orgs/' + this.__name + '/teams', undefined, cb);
	    }

	    /**
	     * Create a team
	     * @see https://developer.github.com/v3/orgs/teams/#create-team
	     * @param {object} options - Team creation parameters
	     * @param {string} options.name - The name of the team
	     * @param {string} [options.description] - Team description
	     * @param {string} [options.repo_names] - Repos to add the team to
	     * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one
	     * of: `secret`, or `closed`
	     * @param {Requestable.callback} [cb] - will receive the created team
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'createTeam',
	    value: function createTeam(options, cb) {
	      return this._request('POST', '/orgs/' + this.__name + '/teams', options, cb);
	    }

	    /**
	     * Get information about all projects
	     * @see https://developer.github.com/v3/projects/#list-organization-projects
	     * @param {Requestable.callback} [cb] - will receive the list of projects
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listProjects',
	    value: function listProjects(cb) {
	      return this._requestAllPages('/orgs/' + this.__name + '/projects', { AcceptHeader: 'inertia-preview' }, cb);
	    }

	    /**
	     * Create a new project
	     * @see https://developer.github.com/v3/repos/projects/#create-a-project
	     * @param {Object} options - the description of the project
	     * @param {Requestable.callback} cb - will receive the newly created project
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'createProject',
	    value: function createProject(options, cb) {
	      options = options || {};
	      options.AcceptHeader = 'inertia-preview';
	      return this._request('POST', '/orgs/' + this.__name + '/projects', options, cb);
	    }
	  }]);

	  return Organization;
	}(_Requestable3.default);

	module.exports = Organization;
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Organization.js.map


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	var _debug = __webpack_require__(32);

	var _debug2 = _interopRequireDefault(_debug);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2016 Matt Smith (Development Seed)
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var log = (0, _debug2.default)('github:team');

	/**
	 * A Team allows scoping of API requests to a particular Github Organization Team.
	 */

	var Team = function (_Requestable) {
	  _inherits(Team, _Requestable);

	  /**
	   * Create a Team.
	   * @param {string} [teamId] - the id for the team
	   * @param {Requestable.auth} [auth] - information required to authenticate to Github
	   * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	   */
	  function Team(teamId, auth, apiBase) {
	    _classCallCheck(this, Team);

	    var _this = _possibleConstructorReturn(this, (Team.__proto__ || Object.getPrototypeOf(Team)).call(this, auth, apiBase));

	    _this.__teamId = teamId;
	    return _this;
	  }

	  /**
	   * Get Team information
	   * @see https://developer.github.com/v3/orgs/teams/#get-team
	   * @param {Requestable.callback} [cb] - will receive the team
	   * @return {Promise} - the promise for the http request
	   */


	  _createClass(Team, [{
	    key: 'getTeam',
	    value: function getTeam(cb) {
	      log('Fetching Team ' + this.__teamId);
	      return this._request('Get', '/teams/' + this.__teamId, undefined, cb);
	    }

	    /**
	     * List the Team's repositories
	     * @see https://developer.github.com/v3/orgs/teams/#list-team-repos
	     * @param {Requestable.callback} [cb] - will receive the list of repositories
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listRepos',
	    value: function listRepos(cb) {
	      log('Fetching repositories for Team ' + this.__teamId);
	      return this._requestAllPages('/teams/' + this.__teamId + '/repos', undefined, cb);
	    }

	    /**
	     * Edit Team information
	     * @see https://developer.github.com/v3/orgs/teams/#edit-team
	     * @param {object} options - Parameters for team edit
	     * @param {string} options.name - The name of the team
	     * @param {string} [options.description] - Team description
	     * @param {string} [options.repo_names] - Repos to add the team to
	     * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one
	     * of: `secret`, or `closed`
	     * @param {Requestable.callback} [cb] - will receive the updated team
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'editTeam',
	    value: function editTeam(options, cb) {
	      log('Editing Team ' + this.__teamId);
	      return this._request('PATCH', '/teams/' + this.__teamId, options, cb);
	    }

	    /**
	     * List the users who are members of the Team
	     * @see https://developer.github.com/v3/orgs/teams/#list-team-members
	     * @param {object} options - Parameters for listing team users
	     * @param {string} [options.role=all] - can be one of: `all`, `maintainer`, or `member`
	     * @param {Requestable.callback} [cb] - will receive the list of users
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'listMembers',
	    value: function listMembers(options, cb) {
	      log('Getting members of Team ' + this.__teamId);
	      return this._requestAllPages('/teams/' + this.__teamId + '/members', options, cb);
	    }

	    /**
	     * Get Team membership status for a user
	     * @see https://developer.github.com/v3/orgs/teams/#get-team-membership
	     * @param {string} username - can be one of: `all`, `maintainer`, or `member`
	     * @param {Requestable.callback} [cb] - will receive the membership status of a user
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'getMembership',
	    value: function getMembership(username, cb) {
	      log('Getting membership of user ' + username + ' in Team ' + this.__teamId);
	      return this._request('GET', '/teams/' + this.__teamId + '/memberships/' + username, undefined, cb);
	    }

	    /**
	     * Add a member to the Team
	     * @see https://developer.github.com/v3/orgs/teams/#add-team-membership
	     * @param {string} username - can be one of: `all`, `maintainer`, or `member`
	     * @param {object} options - Parameters for adding a team member
	     * @param {string} [options.role=member] - The role that this user should have in the team. Can be one
	     * of: `member`, or `maintainer`
	     * @param {Requestable.callback} [cb] - will receive the membership status of added user
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'addMembership',
	    value: function addMembership(username, options, cb) {
	      log('Adding user ' + username + ' to Team ' + this.__teamId);
	      return this._request('PUT', '/teams/' + this.__teamId + '/memberships/' + username, options, cb);
	    }

	    /**
	     * Get repo management status for team
	     * @see https://developer.github.com/v3/orgs/teams/#remove-team-membership
	     * @param {string} owner - Organization name
	     * @param {string} repo - Repo name
	     * @param {Requestable.callback} [cb] - will receive the membership status of added user
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'isManagedRepo',
	    value: function isManagedRepo(owner, repo, cb) {
	      log('Getting repo management by Team ' + this.__teamId + ' for repo ' + owner + '/' + repo);
	      return this._request204or404('/teams/' + this.__teamId + '/repos/' + owner + '/' + repo, undefined, cb);
	    }

	    /**
	     * Add or Update repo management status for team
	     * @see https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository
	     * @param {string} owner - Organization name
	     * @param {string} repo - Repo name
	     * @param {object} options - Parameters for adding or updating repo management for the team
	     * @param {string} [options.permission] - The permission to grant the team on this repository. Can be one
	     * of: `pull`, `push`, or `admin`
	     * @param {Requestable.callback} [cb] - will receive the membership status of added user
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'manageRepo',
	    value: function manageRepo(owner, repo, options, cb) {
	      log('Adding or Updating repo management by Team ' + this.__teamId + ' for repo ' + owner + '/' + repo);
	      return this._request204or404('/teams/' + this.__teamId + '/repos/' + owner + '/' + repo, options, cb, 'PUT');
	    }

	    /**
	     * Remove repo management status for team
	     * @see https://developer.github.com/v3/orgs/teams/#remove-team-repository
	     * @param {string} owner - Organization name
	     * @param {string} repo - Repo name
	     * @param {Requestable.callback} [cb] - will receive the membership status of added user
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'unmanageRepo',
	    value: function unmanageRepo(owner, repo, cb) {
	      log('Remove repo management by Team ' + this.__teamId + ' for repo ' + owner + '/' + repo);
	      return this._request204or404('/teams/' + this.__teamId + '/repos/' + owner + '/' + repo, undefined, cb, 'DELETE');
	    }

	    /**
	     * Delete Team
	     * @see https://developer.github.com/v3/orgs/teams/#delete-team
	     * @param {Requestable.callback} [cb] - will receive the list of repositories
	     * @return {Promise} - the promise for the http request
	     */

	  }, {
	    key: 'deleteTeam',
	    value: function deleteTeam(cb) {
	      log('Deleting Team ' + this.__teamId);
	      return this._request204or404('/teams/' + this.__teamId, undefined, cb, 'DELETE');
	    }
	  }]);

	  return Team;
	}(_Requestable3.default);

	module.exports = Team;
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Team.js.map


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * Renders html from Markdown text
	 */
	var Markdown = function (_Requestable) {
	  _inherits(Markdown, _Requestable);

	  /**
	   * construct a Markdown
	   * @param {Requestable.auth} auth - the credentials to authenticate to GitHub
	   * @param {string} [apiBase] - the base Github API URL
	   * @return {Promise} - the promise for the http request
	   */
	  function Markdown(auth, apiBase) {
	    _classCallCheck(this, Markdown);

	    return _possibleConstructorReturn(this, (Markdown.__proto__ || Object.getPrototypeOf(Markdown)).call(this, auth, apiBase));
	  }

	  /**
	   * Render html from Markdown text.
	   * @see https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document
	   * @param {Object} options - conversion options
	   * @param {string} [options.text] - the markdown text to convert
	   * @param {string} [options.mode=markdown] - can be either `markdown` or `gfm`
	   * @param {string} [options.context] - repository name if mode is gfm
	   * @param {Requestable.callback} [cb] - will receive the converted html
	   * @return {Promise} - the promise for the http request
	   */


	  _createClass(Markdown, [{
	    key: 'render',
	    value: function render(options, cb) {
	      return this._request('POST', '/markdown', options, cb);
	    }
	  }]);

	  return Markdown;
	}(_Requestable3.default);

	module.exports = Markdown;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1hcmtkb3duLmpzIl0sIm5hbWVzIjpbIk1hcmtkb3duIiwiYXV0aCIsImFwaUJhc2UiLCJvcHRpb25zIiwiY2IiLCJfcmVxdWVzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFPQTs7Ozs7Ozs7OzsrZUFQQTs7Ozs7OztBQVNBOzs7SUFHTUEsUTs7O0FBQ0g7Ozs7OztBQU1BLG9CQUFZQyxJQUFaLEVBQWtCQyxPQUFsQixFQUEyQjtBQUFBOztBQUFBLCtHQUNsQkQsSUFEa0IsRUFDWkMsT0FEWTtBQUUxQjs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7MkJBVU9DLE8sRUFBU0MsRSxFQUFJO0FBQ2pCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLE1BQWQsRUFBc0IsV0FBdEIsRUFBbUNGLE9BQW5DLEVBQTRDQyxFQUE1QyxDQUFQO0FBQ0Y7Ozs7OztBQUdKRSxPQUFPQyxPQUFQLEdBQWlCUCxRQUFqQiIsImZpbGUiOiJNYXJrZG93bi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEBjb3B5cmlnaHQgIDIwMTMgTWljaGFlbCBBdWZyZWl0ZXIgKERldmVsb3BtZW50IFNlZWQpIGFuZCAyMDE2IFlhaG9vIEluYy5cbiAqIEBsaWNlbnNlICAgIExpY2Vuc2VkIHVuZGVyIHtAbGluayBodHRwczovL3NwZHgub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZS1DbGVhci5odG1sIEJTRC0zLUNsYXVzZS1DbGVhcn0uXG4gKiAgICAgICAgICAgICBHaXRodWIuanMgaXMgZnJlZWx5IGRpc3RyaWJ1dGFibGUuXG4gKi9cblxuaW1wb3J0IFJlcXVlc3RhYmxlIGZyb20gJy4vUmVxdWVzdGFibGUnO1xuXG4vKipcbiAqIFJlbmRlcnMgaHRtbCBmcm9tIE1hcmtkb3duIHRleHRcbiAqL1xuY2xhc3MgTWFya2Rvd24gZXh0ZW5kcyBSZXF1ZXN0YWJsZSB7XG4gICAvKipcbiAgICAqIGNvbnN0cnVjdCBhIE1hcmtkb3duXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmF1dGh9IGF1dGggLSB0aGUgY3JlZGVudGlhbHMgdG8gYXV0aGVudGljYXRlIHRvIEdpdEh1YlxuICAgICogQHBhcmFtIHtzdHJpbmd9IFthcGlCYXNlXSAtIHRoZSBiYXNlIEdpdGh1YiBBUEkgVVJMXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNvbnN0cnVjdG9yKGF1dGgsIGFwaUJhc2UpIHtcbiAgICAgIHN1cGVyKGF1dGgsIGFwaUJhc2UpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFJlbmRlciBodG1sIGZyb20gTWFya2Rvd24gdGV4dC5cbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9tYXJrZG93bi8jcmVuZGVyLWFuLWFyYml0cmFyeS1tYXJrZG93bi1kb2N1bWVudFxuICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBjb252ZXJzaW9uIG9wdGlvbnNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy50ZXh0XSAtIHRoZSBtYXJrZG93biB0ZXh0IHRvIGNvbnZlcnRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5tb2RlPW1hcmtkb3duXSAtIGNhbiBiZSBlaXRoZXIgYG1hcmtkb3duYCBvciBgZ2ZtYFxuICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmNvbnRleHRdIC0gcmVwb3NpdG9yeSBuYW1lIGlmIG1vZGUgaXMgZ2ZtXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBjb252ZXJ0ZWQgaHRtbFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICByZW5kZXIob3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgJy9tYXJrZG93bicsIG9wdGlvbnMsIGNiKTtcbiAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNYXJrZG93bjtcbiJdfQ==
	//# sourceMappingURL=Markdown.js.map


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Requestable2 = __webpack_require__(5);

	var _Requestable3 = _interopRequireDefault(_Requestable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.
	ithub.js is freely distributable.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * Project encapsulates the functionality to create, query, and modify cards and columns.
	 */
	var Project = function (_Requestable) {
	   _inherits(Project, _Requestable);

	   /**
	    * Create a Project.
	    * @param {string} id - the id of the project
	    * @param {Requestable.auth} [auth] - information required to authenticate to Github
	    * @param {string} [apiBase=https://api.github.com] - the base Github API URL
	    */
	   function Project(id, auth, apiBase) {
	      _classCallCheck(this, Project);

	      var _this = _possibleConstructorReturn(this, (Project.__proto__ || Object.getPrototypeOf(Project)).call(this, auth, apiBase, 'inertia-preview'));

	      _this.__id = id;
	      return _this;
	   }

	   /**
	    * Get information about a project
	    * @see https://developer.github.com/v3/projects/#get-a-project
	    * @param {Requestable.callback} cb - will receive the project information
	    * @return {Promise} - the promise for the http request
	    */


	   _createClass(Project, [{
	      key: 'getProject',
	      value: function getProject(cb) {
	         return this._request('GET', '/projects/' + this.__id, null, cb);
	      }

	      /**
	       * Edit a project
	       * @see https://developer.github.com/v3/projects/#update-a-project
	       * @param {Object} options - the description of the project
	       * @param {Requestable.callback} cb - will receive the modified project
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateProject',
	      value: function updateProject(options, cb) {
	         return this._request('PATCH', '/projects/' + this.__id, options, cb);
	      }

	      /**
	       * Delete a project
	       * @see https://developer.github.com/v3/projects/#delete-a-project
	       * @param {Requestable.callback} cb - will receive true if the operation is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteProject',
	      value: function deleteProject(cb) {
	         return this._request('DELETE', '/projects/' + this.__id, null, cb);
	      }

	      /**
	       * Get information about all columns of a project
	       * @see https://developer.github.com/v3/projects/columns/#list-project-columns
	       * @param {Requestable.callback} [cb] - will receive the list of columns
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listProjectColumns',
	      value: function listProjectColumns(cb) {
	         return this._requestAllPages('/projects/' + this.__id + '/columns', null, cb);
	      }

	      /**
	       * Get information about a column
	       * @see https://developer.github.com/v3/projects/columns/#get-a-project-column
	       * @param {string} colId - the id of the column
	       * @param {Requestable.callback} cb - will receive the column information
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'getProjectColumn',
	      value: function getProjectColumn(colId, cb) {
	         return this._request('GET', '/projects/columns/' + colId, null, cb);
	      }

	      /**
	       * Create a new column
	       * @see https://developer.github.com/v3/projects/columns/#create-a-project-column
	       * @param {Object} options - the description of the column
	       * @param {Requestable.callback} cb - will receive the newly created column
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'createProjectColumn',
	      value: function createProjectColumn(options, cb) {
	         return this._request('POST', '/projects/' + this.__id + '/columns', options, cb);
	      }

	      /**
	       * Edit a column
	       * @see https://developer.github.com/v3/projects/columns/#update-a-project-column
	       * @param {string} colId - the column id
	       * @param {Object} options - the description of the column
	       * @param {Requestable.callback} cb - will receive the modified column
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'updateProjectColumn',
	      value: function updateProjectColumn(colId, options, cb) {
	         return this._request('PATCH', '/projects/columns/' + colId, options, cb);
	      }

	      /**
	       * Delete a column
	       * @see https://developer.github.com/v3/projects/columns/#delete-a-project-column
	       * @param {string} colId - the column to be deleted
	       * @param {Requestable.callback} cb - will receive true if the operation is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'deleteProjectColumn',
	      value: function deleteProjectColumn(colId, cb) {
	         return this._request('DELETE', '/projects/columns/' + colId, null, cb);
	      }

	      /**
	       * Move a column
	       * @see https://developer.github.com/v3/projects/columns/#move-a-project-column
	       * @param {string} colId - the column to be moved
	       * @param {string} position - can be one of first, last, or after:<column-id>,
	       * where <column-id> is the id value of a column in the same project.
	       * @param {Requestable.callback} cb - will receive true if the operation is successful
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'moveProjectColumn',
	      value: function moveProjectColumn(colId, position, cb) {
	         return this._request('POST', '/projects/columns/' + colId + '/moves', { position: position }, cb);
	      }

	      /**
	       * Get information about all cards of a project
	       * @see https://developer.github.com/v3/projects/cards/#list-project-cards
	       * @param {Requestable.callback} [cb] - will receive the list of cards
	       * @return {Promise} - the promise for the http request
	       */

	   }, {
	      key: 'listProjectCards',
	      value: function listProjectCards(cb) {
	         var _this2 = this;

	         return this.listProjectColumns().then(function (_ref) {
	            var data = _ref.data;

	            return Promise.all(data.map(function (column) {
	               return _this2._requestAllPages('/projects/columns/' + column.id + '/cards', null);
	            }));
	         }).then(function (cardsInColumns) {
	            var cards = cardsInColumns.reduce(function (prev, _ref2) {
	               var data = _ref2.data;

	               prev.push.apply(prev, _toConsumableArray(data));
	               return prev;
	            }, []);
	            if (cb) {
	               cb(null, cards);
	            }
	            return cards;
	         }).catch(function (err) {
	            if (cb) {
	               cb(err);
	               return;
	            }
	            throw err;
	         });
	      }

	      /**
	      * Get information about all cards of a column
	      * @see https://developer.github.com/v3/projects/cards/#list-project-cards
	      * @param {string} colId - the id of the column
	      * @param {Requestable.callback} [cb] - will receive the list of cards
	      * @return {Promise} - the promise for the http request
	      */

	   }, {
	      key: 'listColumnCards',
	      value: function listColumnCards(colId, cb) {
	         return this._requestAllPages('/projects/columns/' + colId + '/cards', null, cb);
	      }

	      /**
	      * Get information about a card
	      * @see https://developer.github.com/v3/projects/cards/#get-a-project-card
	      * @param {string} cardId - the id of the card
	      * @param {Requestable.callback} cb - will receive the card information
	      * @return {Promise} - the promise for the http request
	      */

	   }, {
	      key: 'getProjectCard',
	      value: function getProjectCard(cardId, cb) {
	         return this._request('GET', '/projects/columns/cards/' + cardId, null, cb);
	      }

	      /**
	      * Create a new card
	      * @see https://developer.github.com/v3/projects/cards/#create-a-project-card
	      * @param {string} colId - the column id
	      * @param {Object} options - the description of the card
	      * @param {Requestable.callback} cb - will receive the newly created card
	      * @return {Promise} - the promise for the http request
	      */

	   }, {
	      key: 'createProjectCard',
	      value: function createProjectCard(colId, options, cb) {
	         return this._request('POST', '/projects/columns/' + colId + '/cards', options, cb);
	      }

	      /**
	      * Edit a card
	      * @see https://developer.github.com/v3/projects/cards/#update-a-project-card
	      * @param {string} cardId - the card id
	      * @param {Object} options - the description of the card
	      * @param {Requestable.callback} cb - will receive the modified card
	      * @return {Promise} - the promise for the http request
	      */

	   }, {
	      key: 'updateProjectCard',
	      value: function updateProjectCard(cardId, options, cb) {
	         return this._request('PATCH', '/projects/columns/cards/' + cardId, options, cb);
	      }

	      /**
	      * Delete a card
	      * @see https://developer.github.com/v3/projects/cards/#delete-a-project-card
	      * @param {string} cardId - the card to be deleted
	      * @param {Requestable.callback} cb - will receive true if the operation is successful
	      * @return {Promise} - the promise for the http request
	      */

	   }, {
	      key: 'deleteProjectCard',
	      value: function deleteProjectCard(cardId, cb) {
	         return this._request('DELETE', '/projects/columns/cards/' + cardId, null, cb);
	      }

	      /**
	      * Move a card
	      * @see https://developer.github.com/v3/projects/cards/#move-a-project-card
	      * @param {string} cardId - the card to be moved
	      * @param {string} position - can be one of top, bottom, or after:<card-id>,
	      * where <card-id> is the id value of a card in the same project.
	      * @param {string} colId - the id value of a column in the same project.
	      * @param {Requestable.callback} cb - will receive true if the operation is successful
	      * @return {Promise} - the promise for the http request
	      */

	   }, {
	      key: 'moveProjectCard',
	      value: function moveProjectCard(cardId, position, colId, cb) {
	         return this._request('POST', '/projects/columns/cards/' + cardId + '/moves', { position: position, column_id: colId }, // eslint-disable-line camelcase
	         cb);
	      }
	   }]);

	   return Project;
	}(_Requestable3.default);

	module.exports = Project;
	//# sourceMappingURL=data:application/json;base64,
	//# sourceMappingURL=Project.js.map


/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * @license
	 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
	 */
	// @version 0.7.24
	(function() {
	  window.WebComponents = window.WebComponents || {
	    flags: {}
	  };
	  var file = "webcomponents-lite.js";
	  var script = document.querySelector('script[src*="' + file + '"]');
	  var flags = {};
	  if (!flags.noOpts) {
	    location.search.slice(1).split("&").forEach(function(option) {
	      var parts = option.split("=");
	      var match;
	      if (parts[0] && (match = parts[0].match(/wc-(.+)/))) {
	        flags[match[1]] = parts[1] || true;
	      }
	    });
	    if (script) {
	      for (var i = 0, a; a = script.attributes[i]; i++) {
	        if (a.name !== "src") {
	          flags[a.name] = a.value || true;
	        }
	      }
	    }
	    if (flags.log && flags.log.split) {
	      var parts = flags.log.split(",");
	      flags.log = {};
	      parts.forEach(function(f) {
	        flags.log[f] = true;
	      });
	    } else {
	      flags.log = {};
	    }
	  }
	  if (flags.register) {
	    window.CustomElements = window.CustomElements || {
	      flags: {}
	    };
	    window.CustomElements.flags.register = flags.register;
	  }
	  WebComponents.flags = flags;
	})();

	(function(scope) {
	  "use strict";
	  var hasWorkingUrl = false;
	  if (!scope.forceJURL) {
	    try {
	      var u = new URL("b", "http://a");
	      u.pathname = "c%20d";
	      hasWorkingUrl = u.href === "http://a/c%20d";
	    } catch (e) {}
	  }
	  if (hasWorkingUrl) return;
	  var relative = Object.create(null);
	  relative["ftp"] = 21;
	  relative["file"] = 0;
	  relative["gopher"] = 70;
	  relative["http"] = 80;
	  relative["https"] = 443;
	  relative["ws"] = 80;
	  relative["wss"] = 443;
	  var relativePathDotMapping = Object.create(null);
	  relativePathDotMapping["%2e"] = ".";
	  relativePathDotMapping[".%2e"] = "..";
	  relativePathDotMapping["%2e."] = "..";
	  relativePathDotMapping["%2e%2e"] = "..";
	  function isRelativeScheme(scheme) {
	    return relative[scheme] !== undefined;
	  }
	  function invalid() {
	    clear.call(this);
	    this._isInvalid = true;
	  }
	  function IDNAToASCII(h) {
	    if ("" == h) {
	      invalid.call(this);
	    }
	    return h.toLowerCase();
	  }
	  function percentEscape(c) {
	    var unicode = c.charCodeAt(0);
	    if (unicode > 32 && unicode < 127 && [ 34, 35, 60, 62, 63, 96 ].indexOf(unicode) == -1) {
	      return c;
	    }
	    return encodeURIComponent(c);
	  }
	  function percentEscapeQuery(c) {
	    var unicode = c.charCodeAt(0);
	    if (unicode > 32 && unicode < 127 && [ 34, 35, 60, 62, 96 ].indexOf(unicode) == -1) {
	      return c;
	    }
	    return encodeURIComponent(c);
	  }
	  var EOF = undefined, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\+\-\.]/;
	  function parse(input, stateOverride, base) {
	    function err(message) {
	      errors.push(message);
	    }
	    var state = stateOverride || "scheme start", cursor = 0, buffer = "", seenAt = false, seenBracket = false, errors = [];
	    loop: while ((input[cursor - 1] != EOF || cursor == 0) && !this._isInvalid) {
	      var c = input[cursor];
	      switch (state) {
	       case "scheme start":
	        if (c && ALPHA.test(c)) {
	          buffer += c.toLowerCase();
	          state = "scheme";
	        } else if (!stateOverride) {
	          buffer = "";
	          state = "no scheme";
	          continue;
	        } else {
	          err("Invalid scheme.");
	          break loop;
	        }
	        break;

	       case "scheme":
	        if (c && ALPHANUMERIC.test(c)) {
	          buffer += c.toLowerCase();
	        } else if (":" == c) {
	          this._scheme = buffer;
	          buffer = "";
	          if (stateOverride) {
	            break loop;
	          }
	          if (isRelativeScheme(this._scheme)) {
	            this._isRelative = true;
	          }
	          if ("file" == this._scheme) {
	            state = "relative";
	          } else if (this._isRelative && base && base._scheme == this._scheme) {
	            state = "relative or authority";
	          } else if (this._isRelative) {
	            state = "authority first slash";
	          } else {
	            state = "scheme data";
	          }
	        } else if (!stateOverride) {
	          buffer = "";
	          cursor = 0;
	          state = "no scheme";
	          continue;
	        } else if (EOF == c) {
	          break loop;
	        } else {
	          err("Code point not allowed in scheme: " + c);
	          break loop;
	        }
	        break;

	       case "scheme data":
	        if ("?" == c) {
	          this._query = "?";
	          state = "query";
	        } else if ("#" == c) {
	          this._fragment = "#";
	          state = "fragment";
	        } else {
	          if (EOF != c && "\t" != c && "\n" != c && "\r" != c) {
	            this._schemeData += percentEscape(c);
	          }
	        }
	        break;

	       case "no scheme":
	        if (!base || !isRelativeScheme(base._scheme)) {
	          err("Missing scheme.");
	          invalid.call(this);
	        } else {
	          state = "relative";
	          continue;
	        }
	        break;

	       case "relative or authority":
	        if ("/" == c && "/" == input[cursor + 1]) {
	          state = "authority ignore slashes";
	        } else {
	          err("Expected /, got: " + c);
	          state = "relative";
	          continue;
	        }
	        break;

	       case "relative":
	        this._isRelative = true;
	        if ("file" != this._scheme) this._scheme = base._scheme;
	        if (EOF == c) {
	          this._host = base._host;
	          this._port = base._port;
	          this._path = base._path.slice();
	          this._query = base._query;
	          this._username = base._username;
	          this._password = base._password;
	          break loop;
	        } else if ("/" == c || "\\" == c) {
	          if ("\\" == c) err("\\ is an invalid code point.");
	          state = "relative slash";
	        } else if ("?" == c) {
	          this._host = base._host;
	          this._port = base._port;
	          this._path = base._path.slice();
	          this._query = "?";
	          this._username = base._username;
	          this._password = base._password;
	          state = "query";
	        } else if ("#" == c) {
	          this._host = base._host;
	          this._port = base._port;
	          this._path = base._path.slice();
	          this._query = base._query;
	          this._fragment = "#";
	          this._username = base._username;
	          this._password = base._password;
	          state = "fragment";
	        } else {
	          var nextC = input[cursor + 1];
	          var nextNextC = input[cursor + 2];
	          if ("file" != this._scheme || !ALPHA.test(c) || nextC != ":" && nextC != "|" || EOF != nextNextC && "/" != nextNextC && "\\" != nextNextC && "?" != nextNextC && "#" != nextNextC) {
	            this._host = base._host;
	            this._port = base._port;
	            this._username = base._username;
	            this._password = base._password;
	            this._path = base._path.slice();
	            this._path.pop();
	          }
	          state = "relative path";
	          continue;
	        }
	        break;

	       case "relative slash":
	        if ("/" == c || "\\" == c) {
	          if ("\\" == c) {
	            err("\\ is an invalid code point.");
	          }
	          if ("file" == this._scheme) {
	            state = "file host";
	          } else {
	            state = "authority ignore slashes";
	          }
	        } else {
	          if ("file" != this._scheme) {
	            this._host = base._host;
	            this._port = base._port;
	            this._username = base._username;
	            this._password = base._password;
	          }
	          state = "relative path";
	          continue;
	        }
	        break;

	       case "authority first slash":
	        if ("/" == c) {
	          state = "authority second slash";
	        } else {
	          err("Expected '/', got: " + c);
	          state = "authority ignore slashes";
	          continue;
	        }
	        break;

	       case "authority second slash":
	        state = "authority ignore slashes";
	        if ("/" != c) {
	          err("Expected '/', got: " + c);
	          continue;
	        }
	        break;

	       case "authority ignore slashes":
	        if ("/" != c && "\\" != c) {
	          state = "authority";
	          continue;
	        } else {
	          err("Expected authority, got: " + c);
	        }
	        break;

	       case "authority":
	        if ("@" == c) {
	          if (seenAt) {
	            err("@ already seen.");
	            buffer += "%40";
	          }
	          seenAt = true;
	          for (var i = 0; i < buffer.length; i++) {
	            var cp = buffer[i];
	            if ("\t" == cp || "\n" == cp || "\r" == cp) {
	              err("Invalid whitespace in authority.");
	              continue;
	            }
	            if (":" == cp && null === this._password) {
	              this._password = "";
	              continue;
	            }
	            var tempC = percentEscape(cp);
	            null !== this._password ? this._password += tempC : this._username += tempC;
	          }
	          buffer = "";
	        } else if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c) {
	          cursor -= buffer.length;
	          buffer = "";
	          state = "host";
	          continue;
	        } else {
	          buffer += c;
	        }
	        break;

	       case "file host":
	        if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c) {
	          if (buffer.length == 2 && ALPHA.test(buffer[0]) && (buffer[1] == ":" || buffer[1] == "|")) {
	            state = "relative path";
	          } else if (buffer.length == 0) {
	            state = "relative path start";
	          } else {
	            this._host = IDNAToASCII.call(this, buffer);
	            buffer = "";
	            state = "relative path start";
	          }
	          continue;
	        } else if ("\t" == c || "\n" == c || "\r" == c) {
	          err("Invalid whitespace in file host.");
	        } else {
	          buffer += c;
	        }
	        break;

	       case "host":
	       case "hostname":
	        if (":" == c && !seenBracket) {
	          this._host = IDNAToASCII.call(this, buffer);
	          buffer = "";
	          state = "port";
	          if ("hostname" == stateOverride) {
	            break loop;
	          }
	        } else if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c) {
	          this._host = IDNAToASCII.call(this, buffer);
	          buffer = "";
	          state = "relative path start";
	          if (stateOverride) {
	            break loop;
	          }
	          continue;
	        } else if ("\t" != c && "\n" != c && "\r" != c) {
	          if ("[" == c) {
	            seenBracket = true;
	          } else if ("]" == c) {
	            seenBracket = false;
	          }
	          buffer += c;
	        } else {
	          err("Invalid code point in host/hostname: " + c);
	        }
	        break;

	       case "port":
	        if (/[0-9]/.test(c)) {
	          buffer += c;
	        } else if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c || stateOverride) {
	          if ("" != buffer) {
	            var temp = parseInt(buffer, 10);
	            if (temp != relative[this._scheme]) {
	              this._port = temp + "";
	            }
	            buffer = "";
	          }
	          if (stateOverride) {
	            break loop;
	          }
	          state = "relative path start";
	          continue;
	        } else if ("\t" == c || "\n" == c || "\r" == c) {
	          err("Invalid code point in port: " + c);
	        } else {
	          invalid.call(this);
	        }
	        break;

	       case "relative path start":
	        if ("\\" == c) err("'\\' not allowed in path.");
	        state = "relative path";
	        if ("/" != c && "\\" != c) {
	          continue;
	        }
	        break;

	       case "relative path":
	        if (EOF == c || "/" == c || "\\" == c || !stateOverride && ("?" == c || "#" == c)) {
	          if ("\\" == c) {
	            err("\\ not allowed in relative path.");
	          }
	          var tmp;
	          if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {
	            buffer = tmp;
	          }
	          if (".." == buffer) {
	            this._path.pop();
	            if ("/" != c && "\\" != c) {
	              this._path.push("");
	            }
	          } else if ("." == buffer && "/" != c && "\\" != c) {
	            this._path.push("");
	          } else if ("." != buffer) {
	            if ("file" == this._scheme && this._path.length == 0 && buffer.length == 2 && ALPHA.test(buffer[0]) && buffer[1] == "|") {
	              buffer = buffer[0] + ":";
	            }
	            this._path.push(buffer);
	          }
	          buffer = "";
	          if ("?" == c) {
	            this._query = "?";
	            state = "query";
	          } else if ("#" == c) {
	            this._fragment = "#";
	            state = "fragment";
	          }
	        } else if ("\t" != c && "\n" != c && "\r" != c) {
	          buffer += percentEscape(c);
	        }
	        break;

	       case "query":
	        if (!stateOverride && "#" == c) {
	          this._fragment = "#";
	          state = "fragment";
	        } else if (EOF != c && "\t" != c && "\n" != c && "\r" != c) {
	          this._query += percentEscapeQuery(c);
	        }
	        break;

	       case "fragment":
	        if (EOF != c && "\t" != c && "\n" != c && "\r" != c) {
	          this._fragment += c;
	        }
	        break;
	      }
	      cursor++;
	    }
	  }
	  function clear() {
	    this._scheme = "";
	    this._schemeData = "";
	    this._username = "";
	    this._password = null;
	    this._host = "";
	    this._port = "";
	    this._path = [];
	    this._query = "";
	    this._fragment = "";
	    this._isInvalid = false;
	    this._isRelative = false;
	  }
	  function jURL(url, base) {
	    if (base !== undefined && !(base instanceof jURL)) base = new jURL(String(base));
	    this._url = url;
	    clear.call(this);
	    var input = url.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, "");
	    parse.call(this, input, null, base);
	  }
	  jURL.prototype = {
	    toString: function() {
	      return this.href;
	    },
	    get href() {
	      if (this._isInvalid) return this._url;
	      var authority = "";
	      if ("" != this._username || null != this._password) {
	        authority = this._username + (null != this._password ? ":" + this._password : "") + "@";
	      }
	      return this.protocol + (this._isRelative ? "//" + authority + this.host : "") + this.pathname + this._query + this._fragment;
	    },
	    set href(href) {
	      clear.call(this);
	      parse.call(this, href);
	    },
	    get protocol() {
	      return this._scheme + ":";
	    },
	    set protocol(protocol) {
	      if (this._isInvalid) return;
	      parse.call(this, protocol + ":", "scheme start");
	    },
	    get host() {
	      return this._isInvalid ? "" : this._port ? this._host + ":" + this._port : this._host;
	    },
	    set host(host) {
	      if (this._isInvalid || !this._isRelative) return;
	      parse.call(this, host, "host");
	    },
	    get hostname() {
	      return this._host;
	    },
	    set hostname(hostname) {
	      if (this._isInvalid || !this._isRelative) return;
	      parse.call(this, hostname, "hostname");
	    },
	    get port() {
	      return this._port;
	    },
	    set port(port) {
	      if (this._isInvalid || !this._isRelative) return;
	      parse.call(this, port, "port");
	    },
	    get pathname() {
	      return this._isInvalid ? "" : this._isRelative ? "/" + this._path.join("/") : this._schemeData;
	    },
	    set pathname(pathname) {
	      if (this._isInvalid || !this._isRelative) return;
	      this._path = [];
	      parse.call(this, pathname, "relative path start");
	    },
	    get search() {
	      return this._isInvalid || !this._query || "?" == this._query ? "" : this._query;
	    },
	    set search(search) {
	      if (this._isInvalid || !this._isRelative) return;
	      this._query = "?";
	      if ("?" == search[0]) search = search.slice(1);
	      parse.call(this, search, "query");
	    },
	    get hash() {
	      return this._isInvalid || !this._fragment || "#" == this._fragment ? "" : this._fragment;
	    },
	    set hash(hash) {
	      if (this._isInvalid) return;
	      this._fragment = "#";
	      if ("#" == hash[0]) hash = hash.slice(1);
	      parse.call(this, hash, "fragment");
	    },
	    get origin() {
	      var host;
	      if (this._isInvalid || !this._scheme) {
	        return "";
	      }
	      switch (this._scheme) {
	       case "data":
	       case "file":
	       case "javascript":
	       case "mailto":
	        return "null";
	      }
	      host = this.host;
	      if (!host) {
	        return "";
	      }
	      return this._scheme + "://" + host;
	    }
	  };
	  var OriginalURL = scope.URL;
	  if (OriginalURL) {
	    jURL.createObjectURL = function(blob) {
	      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);
	    };
	    jURL.revokeObjectURL = function(url) {
	      OriginalURL.revokeObjectURL(url);
	    };
	  }
	  scope.URL = jURL;
	})(self);

	if (typeof WeakMap === "undefined") {
	  (function() {
	    var defineProperty = Object.defineProperty;
	    var counter = Date.now() % 1e9;
	    var WeakMap = function() {
	      this.name = "__st" + (Math.random() * 1e9 >>> 0) + (counter++ + "__");
	    };
	    WeakMap.prototype = {
	      set: function(key, value) {
	        var entry = key[this.name];
	        if (entry && entry[0] === key) entry[1] = value; else defineProperty(key, this.name, {
	          value: [ key, value ],
	          writable: true
	        });
	        return this;
	      },
	      get: function(key) {
	        var entry;
	        return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;
	      },
	      "delete": function(key) {
	        var entry = key[this.name];
	        if (!entry || entry[0] !== key) return false;
	        entry[0] = entry[1] = undefined;
	        return true;
	      },
	      has: function(key) {
	        var entry = key[this.name];
	        if (!entry) return false;
	        return entry[0] === key;
	      }
	    };
	    window.WeakMap = WeakMap;
	  })();
	}

	(function(global) {
	  if (global.JsMutationObserver) {
	    return;
	  }
	  var registrationsTable = new WeakMap();
	  var setImmediate;
	  if (/Trident|Edge/.test(navigator.userAgent)) {
	    setImmediate = setTimeout;
	  } else if (window.setImmediate) {
	    setImmediate = window.setImmediate;
	  } else {
	    var setImmediateQueue = [];
	    var sentinel = String(Math.random());
	    window.addEventListener("message", function(e) {
	      if (e.data === sentinel) {
	        var queue = setImmediateQueue;
	        setImmediateQueue = [];
	        queue.forEach(function(func) {
	          func();
	        });
	      }
	    });
	    setImmediate = function(func) {
	      setImmediateQueue.push(func);
	      window.postMessage(sentinel, "*");
	    };
	  }
	  var isScheduled = false;
	  var scheduledObservers = [];
	  function scheduleCallback(observer) {
	    scheduledObservers.push(observer);
	    if (!isScheduled) {
	      isScheduled = true;
	      setImmediate(dispatchCallbacks);
	    }
	  }
	  function wrapIfNeeded(node) {
	    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;
	  }
	  function dispatchCallbacks() {
	    isScheduled = false;
	    var observers = scheduledObservers;
	    scheduledObservers = [];
	    observers.sort(function(o1, o2) {
	      return o1.uid_ - o2.uid_;
	    });
	    var anyNonEmpty = false;
	    observers.forEach(function(observer) {
	      var queue = observer.takeRecords();
	      removeTransientObserversFor(observer);
	      if (queue.length) {
	        observer.callback_(queue, observer);
	        anyNonEmpty = true;
	      }
	    });
	    if (anyNonEmpty) dispatchCallbacks();
	  }
	  function removeTransientObserversFor(observer) {
	    observer.nodes_.forEach(function(node) {
	      var registrations = registrationsTable.get(node);
	      if (!registrations) return;
	      registrations.forEach(function(registration) {
	        if (registration.observer === observer) registration.removeTransientObservers();
	      });
	    });
	  }
	  function forEachAncestorAndObserverEnqueueRecord(target, callback) {
	    for (var node = target; node; node = node.parentNode) {
	      var registrations = registrationsTable.get(node);
	      if (registrations) {
	        for (var j = 0; j < registrations.length; j++) {
	          var registration = registrations[j];
	          var options = registration.options;
	          if (node !== target && !options.subtree) continue;
	          var record = callback(options);
	          if (record) registration.enqueue(record);
	        }
	      }
	    }
	  }
	  var uidCounter = 0;
	  function JsMutationObserver(callback) {
	    this.callback_ = callback;
	    this.nodes_ = [];
	    this.records_ = [];
	    this.uid_ = ++uidCounter;
	  }
	  JsMutationObserver.prototype = {
	    observe: function(target, options) {
	      target = wrapIfNeeded(target);
	      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {
	        throw new SyntaxError();
	      }
	      var registrations = registrationsTable.get(target);
	      if (!registrations) registrationsTable.set(target, registrations = []);
	      var registration;
	      for (var i = 0; i < registrations.length; i++) {
	        if (registrations[i].observer === this) {
	          registration = registrations[i];
	          registration.removeListeners();
	          registration.options = options;
	          break;
	        }
	      }
	      if (!registration) {
	        registration = new Registration(this, target, options);
	        registrations.push(registration);
	        this.nodes_.push(target);
	      }
	      registration.addListeners();
	    },
	    disconnect: function() {
	      this.nodes_.forEach(function(node) {
	        var registrations = registrationsTable.get(node);
	        for (var i = 0; i < registrations.length; i++) {
	          var registration = registrations[i];
	          if (registration.observer === this) {
	            registration.removeListeners();
	            registrations.splice(i, 1);
	            break;
	          }
	        }
	      }, this);
	      this.records_ = [];
	    },
	    takeRecords: function() {
	      var copyOfRecords = this.records_;
	      this.records_ = [];
	      return copyOfRecords;
	    }
	  };
	  function MutationRecord(type, target) {
	    this.type = type;
	    this.target = target;
	    this.addedNodes = [];
	    this.removedNodes = [];
	    this.previousSibling = null;
	    this.nextSibling = null;
	    this.attributeName = null;
	    this.attributeNamespace = null;
	    this.oldValue = null;
	  }
	  function copyMutationRecord(original) {
	    var record = new MutationRecord(original.type, original.target);
	    record.addedNodes = original.addedNodes.slice();
	    record.removedNodes = original.removedNodes.slice();
	    record.previousSibling = original.previousSibling;
	    record.nextSibling = original.nextSibling;
	    record.attributeName = original.attributeName;
	    record.attributeNamespace = original.attributeNamespace;
	    record.oldValue = original.oldValue;
	    return record;
	  }
	  var currentRecord, recordWithOldValue;
	  function getRecord(type, target) {
	    return currentRecord = new MutationRecord(type, target);
	  }
	  function getRecordWithOldValue(oldValue) {
	    if (recordWithOldValue) return recordWithOldValue;
	    recordWithOldValue = copyMutationRecord(currentRecord);
	    recordWithOldValue.oldValue = oldValue;
	    return recordWithOldValue;
	  }
	  function clearRecords() {
	    currentRecord = recordWithOldValue = undefined;
	  }
	  function recordRepresentsCurrentMutation(record) {
	    return record === recordWithOldValue || record === currentRecord;
	  }
	  function selectRecord(lastRecord, newRecord) {
	    if (lastRecord === newRecord) return lastRecord;
	    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;
	    return null;
	  }
	  function Registration(observer, target, options) {
	    this.observer = observer;
	    this.target = target;
	    this.options = options;
	    this.transientObservedNodes = [];
	  }
	  Registration.prototype = {
	    enqueue: function(record) {
	      var records = this.observer.records_;
	      var length = records.length;
	      if (records.length > 0) {
	        var lastRecord = records[length - 1];
	        var recordToReplaceLast = selectRecord(lastRecord, record);
	        if (recordToReplaceLast) {
	          records[length - 1] = recordToReplaceLast;
	          return;
	        }
	      } else {
	        scheduleCallback(this.observer);
	      }
	      records[length] = record;
	    },
	    addListeners: function() {
	      this.addListeners_(this.target);
	    },
	    addListeners_: function(node) {
	      var options = this.options;
	      if (options.attributes) node.addEventListener("DOMAttrModified", this, true);
	      if (options.characterData) node.addEventListener("DOMCharacterDataModified", this, true);
	      if (options.childList) node.addEventListener("DOMNodeInserted", this, true);
	      if (options.childList || options.subtree) node.addEventListener("DOMNodeRemoved", this, true);
	    },
	    removeListeners: function() {
	      this.removeListeners_(this.target);
	    },
	    removeListeners_: function(node) {
	      var options = this.options;
	      if (options.attributes) node.removeEventListener("DOMAttrModified", this, true);
	      if (options.characterData) node.removeEventListener("DOMCharacterDataModified", this, true);
	      if (options.childList) node.removeEventListener("DOMNodeInserted", this, true);
	      if (options.childList || options.subtree) node.removeEventListener("DOMNodeRemoved", this, true);
	    },
	    addTransientObserver: function(node) {
	      if (node === this.target) return;
	      this.addListeners_(node);
	      this.transientObservedNodes.push(node);
	      var registrations = registrationsTable.get(node);
	      if (!registrations) registrationsTable.set(node, registrations = []);
	      registrations.push(this);
	    },
	    removeTransientObservers: function() {
	      var transientObservedNodes = this.transientObservedNodes;
	      this.transientObservedNodes = [];
	      transientObservedNodes.forEach(function(node) {
	        this.removeListeners_(node);
	        var registrations = registrationsTable.get(node);
	        for (var i = 0; i < registrations.length; i++) {
	          if (registrations[i] === this) {
	            registrations.splice(i, 1);
	            break;
	          }
	        }
	      }, this);
	    },
	    handleEvent: function(e) {
	      e.stopImmediatePropagation();
	      switch (e.type) {
	       case "DOMAttrModified":
	        var name = e.attrName;
	        var namespace = e.relatedNode.namespaceURI;
	        var target = e.target;
	        var record = new getRecord("attributes", target);
	        record.attributeName = name;
	        record.attributeNamespace = namespace;
	        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;
	        forEachAncestorAndObserverEnqueueRecord(target, function(options) {
	          if (!options.attributes) return;
	          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {
	            return;
	          }
	          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);
	          return record;
	        });
	        break;

	       case "DOMCharacterDataModified":
	        var target = e.target;
	        var record = getRecord("characterData", target);
	        var oldValue = e.prevValue;
	        forEachAncestorAndObserverEnqueueRecord(target, function(options) {
	          if (!options.characterData) return;
	          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);
	          return record;
	        });
	        break;

	       case "DOMNodeRemoved":
	        this.addTransientObserver(e.target);

	       case "DOMNodeInserted":
	        var changedNode = e.target;
	        var addedNodes, removedNodes;
	        if (e.type === "DOMNodeInserted") {
	          addedNodes = [ changedNode ];
	          removedNodes = [];
	        } else {
	          addedNodes = [];
	          removedNodes = [ changedNode ];
	        }
	        var previousSibling = changedNode.previousSibling;
	        var nextSibling = changedNode.nextSibling;
	        var record = getRecord("childList", e.target.parentNode);
	        record.addedNodes = addedNodes;
	        record.removedNodes = removedNodes;
	        record.previousSibling = previousSibling;
	        record.nextSibling = nextSibling;
	        forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {
	          if (!options.childList) return;
	          return record;
	        });
	      }
	      clearRecords();
	    }
	  };
	  global.JsMutationObserver = JsMutationObserver;
	  if (!global.MutationObserver) {
	    global.MutationObserver = JsMutationObserver;
	    JsMutationObserver._isPolyfilled = true;
	  }
	})(self);

	(function() {
	  var needsTemplate = typeof HTMLTemplateElement === "undefined";
	  if (/Trident/.test(navigator.userAgent)) {
	    (function() {
	      var importNode = document.importNode;
	      document.importNode = function() {
	        var n = importNode.apply(document, arguments);
	        if (n.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
	          var f = document.createDocumentFragment();
	          f.appendChild(n);
	          return f;
	        } else {
	          return n;
	        }
	      };
	    })();
	  }
	  var needsCloning = function() {
	    if (!needsTemplate) {
	      var t = document.createElement("template");
	      var t2 = document.createElement("template");
	      t2.content.appendChild(document.createElement("div"));
	      t.content.appendChild(t2);
	      var clone = t.cloneNode(true);
	      return clone.content.childNodes.length === 0 || clone.content.firstChild.content.childNodes.length === 0;
	    }
	  }();
	  var TEMPLATE_TAG = "template";
	  var TemplateImpl = function() {};
	  if (needsTemplate) {
	    var contentDoc = document.implementation.createHTMLDocument("template");
	    var canDecorate = true;
	    var templateStyle = document.createElement("style");
	    templateStyle.textContent = TEMPLATE_TAG + "{display:none;}";
	    var head = document.head;
	    head.insertBefore(templateStyle, head.firstElementChild);
	    TemplateImpl.prototype = Object.create(HTMLElement.prototype);
	    TemplateImpl.decorate = function(template) {
	      if (template.content) {
	        return;
	      }
	      template.content = contentDoc.createDocumentFragment();
	      var child;
	      while (child = template.firstChild) {
	        template.content.appendChild(child);
	      }
	      template.cloneNode = function(deep) {
	        return TemplateImpl.cloneNode(this, deep);
	      };
	      if (canDecorate) {
	        try {
	          Object.defineProperty(template, "innerHTML", {
	            get: function() {
	              var o = "";
	              for (var e = this.content.firstChild; e; e = e.nextSibling) {
	                o += e.outerHTML || escapeData(e.data);
	              }
	              return o;
	            },
	            set: function(text) {
	              contentDoc.body.innerHTML = text;
	              TemplateImpl.bootstrap(contentDoc);
	              while (this.content.firstChild) {
	                this.content.removeChild(this.content.firstChild);
	              }
	              while (contentDoc.body.firstChild) {
	                this.content.appendChild(contentDoc.body.firstChild);
	              }
	            },
	            configurable: true
	          });
	        } catch (err) {
	          canDecorate = false;
	        }
	      }
	      TemplateImpl.bootstrap(template.content);
	    };
	    TemplateImpl.bootstrap = function(doc) {
	      var templates = doc.querySelectorAll(TEMPLATE_TAG);
	      for (var i = 0, l = templates.length, t; i < l && (t = templates[i]); i++) {
	        TemplateImpl.decorate(t);
	      }
	    };
	    document.addEventListener("DOMContentLoaded", function() {
	      TemplateImpl.bootstrap(document);
	    });
	    var createElement = document.createElement;
	    document.createElement = function() {
	      "use strict";
	      var el = createElement.apply(document, arguments);
	      if (el.localName === "template") {
	        TemplateImpl.decorate(el);
	      }
	      return el;
	    };
	    var escapeDataRegExp = /[&\u00A0<>]/g;
	    function escapeReplace(c) {
	      switch (c) {
	       case "&":
	        return "&amp;";

	       case "<":
	        return "&lt;";

	       case ">":
	        return "&gt;";

	       case " ":
	        return "&nbsp;";
	      }
	    }
	    function escapeData(s) {
	      return s.replace(escapeDataRegExp, escapeReplace);
	    }
	  }
	  if (needsTemplate || needsCloning) {
	    var nativeCloneNode = Node.prototype.cloneNode;
	    TemplateImpl.cloneNode = function(template, deep) {
	      var clone = nativeCloneNode.call(template, false);
	      if (this.decorate) {
	        this.decorate(clone);
	      }
	      if (deep) {
	        clone.content.appendChild(nativeCloneNode.call(template.content, true));
	        this.fixClonedDom(clone.content, template.content);
	      }
	      return clone;
	    };
	    TemplateImpl.fixClonedDom = function(clone, source) {
	      if (!source.querySelectorAll) return;
	      var s$ = source.querySelectorAll(TEMPLATE_TAG);
	      var t$ = clone.querySelectorAll(TEMPLATE_TAG);
	      for (var i = 0, l = t$.length, t, s; i < l; i++) {
	        s = s$[i];
	        t = t$[i];
	        if (this.decorate) {
	          this.decorate(s);
	        }
	        t.parentNode.replaceChild(s.cloneNode(true), t);
	      }
	    };
	    var originalImportNode = document.importNode;
	    Node.prototype.cloneNode = function(deep) {
	      var dom = nativeCloneNode.call(this, deep);
	      if (deep) {
	        TemplateImpl.fixClonedDom(dom, this);
	      }
	      return dom;
	    };
	    document.importNode = function(element, deep) {
	      if (element.localName === TEMPLATE_TAG) {
	        return TemplateImpl.cloneNode(element, deep);
	      } else {
	        var dom = originalImportNode.call(document, element, deep);
	        if (deep) {
	          TemplateImpl.fixClonedDom(dom, element);
	        }
	        return dom;
	      }
	    };
	    if (needsCloning) {
	      HTMLTemplateElement.prototype.cloneNode = function(deep) {
	        return TemplateImpl.cloneNode(this, deep);
	      };
	    }
	  }
	  if (needsTemplate) {
	    window.HTMLTemplateElement = TemplateImpl;
	  }
	})();

	(function(scope) {
	  "use strict";
	  if (!(window.performance && window.performance.now)) {
	    var start = Date.now();
	    window.performance = {
	      now: function() {
	        return Date.now() - start;
	      }
	    };
	  }
	  if (!window.requestAnimationFrame) {
	    window.requestAnimationFrame = function() {
	      var nativeRaf = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
	      return nativeRaf ? function(callback) {
	        return nativeRaf(function() {
	          callback(performance.now());
	        });
	      } : function(callback) {
	        return window.setTimeout(callback, 1e3 / 60);
	      };
	    }();
	  }
	  if (!window.cancelAnimationFrame) {
	    window.cancelAnimationFrame = function() {
	      return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(id) {
	        clearTimeout(id);
	      };
	    }();
	  }
	  var workingDefaultPrevented = function() {
	    var e = document.createEvent("Event");
	    e.initEvent("foo", true, true);
	    e.preventDefault();
	    return e.defaultPrevented;
	  }();
	  if (!workingDefaultPrevented) {
	    var origPreventDefault = Event.prototype.preventDefault;
	    Event.prototype.preventDefault = function() {
	      if (!this.cancelable) {
	        return;
	      }
	      origPreventDefault.call(this);
	      Object.defineProperty(this, "defaultPrevented", {
	        get: function() {
	          return true;
	        },
	        configurable: true
	      });
	    };
	  }
	  var isIE = /Trident/.test(navigator.userAgent);
	  if (!window.CustomEvent || isIE && typeof window.CustomEvent !== "function") {
	    window.CustomEvent = function(inType, params) {
	      params = params || {};
	      var e = document.createEvent("CustomEvent");
	      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);
	      return e;
	    };
	    window.CustomEvent.prototype = window.Event.prototype;
	  }
	  if (!window.Event || isIE && typeof window.Event !== "function") {
	    var origEvent = window.Event;
	    window.Event = function(inType, params) {
	      params = params || {};
	      var e = document.createEvent("Event");
	      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));
	      return e;
	    };
	    window.Event.prototype = origEvent.prototype;
	  }
	})(window.WebComponents);

	window.HTMLImports = window.HTMLImports || {
	  flags: {}
	};

	(function(scope) {
	  var IMPORT_LINK_TYPE = "import";
	  var useNative = Boolean(IMPORT_LINK_TYPE in document.createElement("link"));
	  var hasShadowDOMPolyfill = Boolean(window.ShadowDOMPolyfill);
	  var wrap = function(node) {
	    return hasShadowDOMPolyfill ? window.ShadowDOMPolyfill.wrapIfNeeded(node) : node;
	  };
	  var rootDocument = wrap(document);
	  var currentScriptDescriptor = {
	    get: function() {
	      var script = window.HTMLImports.currentScript || document.currentScript || (document.readyState !== "complete" ? document.scripts[document.scripts.length - 1] : null);
	      return wrap(script);
	    },
	    configurable: true
	  };
	  Object.defineProperty(document, "_currentScript", currentScriptDescriptor);
	  Object.defineProperty(rootDocument, "_currentScript", currentScriptDescriptor);
	  var isIE = /Trident/.test(navigator.userAgent);
	  function whenReady(callback, doc) {
	    doc = doc || rootDocument;
	    whenDocumentReady(function() {
	      watchImportsLoad(callback, doc);
	    }, doc);
	  }
	  var requiredReadyState = isIE ? "complete" : "interactive";
	  var READY_EVENT = "readystatechange";
	  function isDocumentReady(doc) {
	    return doc.readyState === "complete" || doc.readyState === requiredReadyState;
	  }
	  function whenDocumentReady(callback, doc) {
	    if (!isDocumentReady(doc)) {
	      var checkReady = function() {
	        if (doc.readyState === "complete" || doc.readyState === requiredReadyState) {
	          doc.removeEventListener(READY_EVENT, checkReady);
	          whenDocumentReady(callback, doc);
	        }
	      };
	      doc.addEventListener(READY_EVENT, checkReady);
	    } else if (callback) {
	      callback();
	    }
	  }
	  function markTargetLoaded(event) {
	    event.target.__loaded = true;
	  }
	  function watchImportsLoad(callback, doc) {
	    var imports = doc.querySelectorAll("link[rel=import]");
	    var parsedCount = 0, importCount = imports.length, newImports = [], errorImports = [];
	    function checkDone() {
	      if (parsedCount == importCount && callback) {
	        callback({
	          allImports: imports,
	          loadedImports: newImports,
	          errorImports: errorImports
	        });
	      }
	    }
	    function loadedImport(e) {
	      markTargetLoaded(e);
	      newImports.push(this);
	      parsedCount++;
	      checkDone();
	    }
	    function errorLoadingImport(e) {
	      errorImports.push(this);
	      parsedCount++;
	      checkDone();
	    }
	    if (importCount) {
	      for (var i = 0, imp; i < importCount && (imp = imports[i]); i++) {
	        if (isImportLoaded(imp)) {
	          newImports.push(this);
	          parsedCount++;
	          checkDone();
	        } else {
	          imp.addEventListener("load", loadedImport);
	          imp.addEventListener("error", errorLoadingImport);
	        }
	      }
	    } else {
	      checkDone();
	    }
	  }
	  function isImportLoaded(link) {
	    return useNative ? link.__loaded || link.import && link.import.readyState !== "loading" : link.__importParsed;
	  }
	  if (useNative) {
	    new MutationObserver(function(mxns) {
	      for (var i = 0, l = mxns.length, m; i < l && (m = mxns[i]); i++) {
	        if (m.addedNodes) {
	          handleImports(m.addedNodes);
	        }
	      }
	    }).observe(document.head, {
	      childList: true
	    });
	    function handleImports(nodes) {
	      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
	        if (isImport(n)) {
	          handleImport(n);
	        }
	      }
	    }
	    function isImport(element) {
	      return element.localName === "link" && element.rel === "import";
	    }
	    function handleImport(element) {
	      var loaded = element.import;
	      if (loaded) {
	        markTargetLoaded({
	          target: element
	        });
	      } else {
	        element.addEventListener("load", markTargetLoaded);
	        element.addEventListener("error", markTargetLoaded);
	      }
	    }
	    (function() {
	      if (document.readyState === "loading") {
	        var imports = document.querySelectorAll("link[rel=import]");
	        for (var i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {
	          handleImport(imp);
	        }
	      }
	    })();
	  }
	  whenReady(function(detail) {
	    window.HTMLImports.ready = true;
	    window.HTMLImports.readyTime = new Date().getTime();
	    var evt = rootDocument.createEvent("CustomEvent");
	    evt.initCustomEvent("HTMLImportsLoaded", true, true, detail);
	    rootDocument.dispatchEvent(evt);
	  });
	  scope.IMPORT_LINK_TYPE = IMPORT_LINK_TYPE;
	  scope.useNative = useNative;
	  scope.rootDocument = rootDocument;
	  scope.whenReady = whenReady;
	  scope.isIE = isIE;
	})(window.HTMLImports);

	(function(scope) {
	  var modules = [];
	  var addModule = function(module) {
	    modules.push(module);
	  };
	  var initializeModules = function() {
	    modules.forEach(function(module) {
	      module(scope);
	    });
	  };
	  scope.addModule = addModule;
	  scope.initializeModules = initializeModules;
	})(window.HTMLImports);

	window.HTMLImports.addModule(function(scope) {
	  var CSS_URL_REGEXP = /(url\()([^)]*)(\))/g;
	  var CSS_IMPORT_REGEXP = /(@import[\s]+(?!url\())([^;]*)(;)/g;
	  var path = {
	    resolveUrlsInStyle: function(style, linkUrl) {
	      var doc = style.ownerDocument;
	      var resolver = doc.createElement("a");
	      style.textContent = this.resolveUrlsInCssText(style.textContent, linkUrl, resolver);
	      return style;
	    },
	    resolveUrlsInCssText: function(cssText, linkUrl, urlObj) {
	      var r = this.replaceUrls(cssText, urlObj, linkUrl, CSS_URL_REGEXP);
	      r = this.replaceUrls(r, urlObj, linkUrl, CSS_IMPORT_REGEXP);
	      return r;
	    },
	    replaceUrls: function(text, urlObj, linkUrl, regexp) {
	      return text.replace(regexp, function(m, pre, url, post) {
	        var urlPath = url.replace(/["']/g, "");
	        if (linkUrl) {
	          urlPath = new URL(urlPath, linkUrl).href;
	        }
	        urlObj.href = urlPath;
	        urlPath = urlObj.href;
	        return pre + "'" + urlPath + "'" + post;
	      });
	    }
	  };
	  scope.path = path;
	});

	window.HTMLImports.addModule(function(scope) {
	  var xhr = {
	    async: true,
	    ok: function(request) {
	      return request.status >= 200 && request.status < 300 || request.status === 304 || request.status === 0;
	    },
	    load: function(url, next, nextContext) {
	      var request = new XMLHttpRequest();
	      if (scope.flags.debug || scope.flags.bust) {
	        url += "?" + Math.random();
	      }
	      request.open("GET", url, xhr.async);
	      request.addEventListener("readystatechange", function(e) {
	        if (request.readyState === 4) {
	          var redirectedUrl = null;
	          try {
	            var locationHeader = request.getResponseHeader("Location");
	            if (locationHeader) {
	              redirectedUrl = locationHeader.substr(0, 1) === "/" ? location.origin + locationHeader : locationHeader;
	            }
	          } catch (e) {
	            console.error(e.message);
	          }
	          next.call(nextContext, !xhr.ok(request) && request, request.response || request.responseText, redirectedUrl);
	        }
	      });
	      request.send();
	      return request;
	    },
	    loadDocument: function(url, next, nextContext) {
	      this.load(url, next, nextContext).responseType = "document";
	    }
	  };
	  scope.xhr = xhr;
	});

	window.HTMLImports.addModule(function(scope) {
	  var xhr = scope.xhr;
	  var flags = scope.flags;
	  var Loader = function(onLoad, onComplete) {
	    this.cache = {};
	    this.onload = onLoad;
	    this.oncomplete = onComplete;
	    this.inflight = 0;
	    this.pending = {};
	  };
	  Loader.prototype = {
	    addNodes: function(nodes) {
	      this.inflight += nodes.length;
	      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
	        this.require(n);
	      }
	      this.checkDone();
	    },
	    addNode: function(node) {
	      this.inflight++;
	      this.require(node);
	      this.checkDone();
	    },
	    require: function(elt) {
	      var url = elt.src || elt.href;
	      elt.__nodeUrl = url;
	      if (!this.dedupe(url, elt)) {
	        this.fetch(url, elt);
	      }
	    },
	    dedupe: function(url, elt) {
	      if (this.pending[url]) {
	        this.pending[url].push(elt);
	        return true;
	      }
	      var resource;
	      if (this.cache[url]) {
	        this.onload(url, elt, this.cache[url]);
	        this.tail();
	        return true;
	      }
	      this.pending[url] = [ elt ];
	      return false;
	    },
	    fetch: function(url, elt) {
	      flags.load && console.log("fetch", url, elt);
	      if (!url) {
	        setTimeout(function() {
	          this.receive(url, elt, {
	            error: "href must be specified"
	          }, null);
	        }.bind(this), 0);
	      } else if (url.match(/^data:/)) {
	        var pieces = url.split(",");
	        var header = pieces[0];
	        var body = pieces[1];
	        if (header.indexOf(";base64") > -1) {
	          body = atob(body);
	        } else {
	          body = decodeURIComponent(body);
	        }
	        setTimeout(function() {
	          this.receive(url, elt, null, body);
	        }.bind(this), 0);
	      } else {
	        var receiveXhr = function(err, resource, redirectedUrl) {
	          this.receive(url, elt, err, resource, redirectedUrl);
	        }.bind(this);
	        xhr.load(url, receiveXhr);
	      }
	    },
	    receive: function(url, elt, err, resource, redirectedUrl) {
	      this.cache[url] = resource;
	      var $p = this.pending[url];
	      for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {
	        this.onload(url, p, resource, err, redirectedUrl);
	        this.tail();
	      }
	      this.pending[url] = null;
	    },
	    tail: function() {
	      --this.inflight;
	      this.checkDone();
	    },
	    checkDone: function() {
	      if (!this.inflight) {
	        this.oncomplete();
	      }
	    }
	  };
	  scope.Loader = Loader;
	});

	window.HTMLImports.addModule(function(scope) {
	  var Observer = function(addCallback) {
	    this.addCallback = addCallback;
	    this.mo = new MutationObserver(this.handler.bind(this));
	  };
	  Observer.prototype = {
	    handler: function(mutations) {
	      for (var i = 0, l = mutations.length, m; i < l && (m = mutations[i]); i++) {
	        if (m.type === "childList" && m.addedNodes.length) {
	          this.addedNodes(m.addedNodes);
	        }
	      }
	    },
	    addedNodes: function(nodes) {
	      if (this.addCallback) {
	        this.addCallback(nodes);
	      }
	      for (var i = 0, l = nodes.length, n, loading; i < l && (n = nodes[i]); i++) {
	        if (n.children && n.children.length) {
	          this.addedNodes(n.children);
	        }
	      }
	    },
	    observe: function(root) {
	      this.mo.observe(root, {
	        childList: true,
	        subtree: true
	      });
	    }
	  };
	  scope.Observer = Observer;
	});

	window.HTMLImports.addModule(function(scope) {
	  var path = scope.path;
	  var rootDocument = scope.rootDocument;
	  var flags = scope.flags;
	  var isIE = scope.isIE;
	  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;
	  var IMPORT_SELECTOR = "link[rel=" + IMPORT_LINK_TYPE + "]";
	  var importParser = {
	    documentSelectors: IMPORT_SELECTOR,
	    importsSelectors: [ IMPORT_SELECTOR, "link[rel=stylesheet]:not([type])", "style:not([type])", "script:not([type])", 'script[type="application/javascript"]', 'script[type="text/javascript"]' ].join(","),
	    map: {
	      link: "parseLink",
	      script: "parseScript",
	      style: "parseStyle"
	    },
	    dynamicElements: [],
	    parseNext: function() {
	      var next = this.nextToParse();
	      if (next) {
	        this.parse(next);
	      }
	    },
	    parse: function(elt) {
	      if (this.isParsed(elt)) {
	        flags.parse && console.log("[%s] is already parsed", elt.localName);
	        return;
	      }
	      var fn = this[this.map[elt.localName]];
	      if (fn) {
	        this.markParsing(elt);
	        fn.call(this, elt);
	      }
	    },
	    parseDynamic: function(elt, quiet) {
	      this.dynamicElements.push(elt);
	      if (!quiet) {
	        this.parseNext();
	      }
	    },
	    markParsing: function(elt) {
	      flags.parse && console.log("parsing", elt);
	      this.parsingElement = elt;
	    },
	    markParsingComplete: function(elt) {
	      elt.__importParsed = true;
	      this.markDynamicParsingComplete(elt);
	      if (elt.__importElement) {
	        elt.__importElement.__importParsed = true;
	        this.markDynamicParsingComplete(elt.__importElement);
	      }
	      this.parsingElement = null;
	      flags.parse && console.log("completed", elt);
	    },
	    markDynamicParsingComplete: function(elt) {
	      var i = this.dynamicElements.indexOf(elt);
	      if (i >= 0) {
	        this.dynamicElements.splice(i, 1);
	      }
	    },
	    parseImport: function(elt) {
	      elt.import = elt.__doc;
	      if (window.HTMLImports.__importsParsingHook) {
	        window.HTMLImports.__importsParsingHook(elt);
	      }
	      if (elt.import) {
	        elt.import.__importParsed = true;
	      }
	      this.markParsingComplete(elt);
	      if (elt.__resource && !elt.__error) {
	        elt.dispatchEvent(new CustomEvent("load", {
	          bubbles: false
	        }));
	      } else {
	        elt.dispatchEvent(new CustomEvent("error", {
	          bubbles: false
	        }));
	      }
	      if (elt.__pending) {
	        var fn;
	        while (elt.__pending.length) {
	          fn = elt.__pending.shift();
	          if (fn) {
	            fn({
	              target: elt
	            });
	          }
	        }
	      }
	      this.parseNext();
	    },
	    parseLink: function(linkElt) {
	      if (nodeIsImport(linkElt)) {
	        this.parseImport(linkElt);
	      } else {
	        linkElt.href = linkElt.href;
	        this.parseGeneric(linkElt);
	      }
	    },
	    parseStyle: function(elt) {
	      var src = elt;
	      elt = cloneStyle(elt);
	      src.__appliedElement = elt;
	      elt.__importElement = src;
	      this.parseGeneric(elt);
	    },
	    parseGeneric: function(elt) {
	      this.trackElement(elt);
	      this.addElementToDocument(elt);
	    },
	    rootImportForElement: function(elt) {
	      var n = elt;
	      while (n.ownerDocument.__importLink) {
	        n = n.ownerDocument.__importLink;
	      }
	      return n;
	    },
	    addElementToDocument: function(elt) {
	      var port = this.rootImportForElement(elt.__importElement || elt);
	      port.parentNode.insertBefore(elt, port);
	    },
	    trackElement: function(elt, callback) {
	      var self = this;
	      var done = function(e) {
	        elt.removeEventListener("load", done);
	        elt.removeEventListener("error", done);
	        if (callback) {
	          callback(e);
	        }
	        self.markParsingComplete(elt);
	        self.parseNext();
	      };
	      elt.addEventListener("load", done);
	      elt.addEventListener("error", done);
	      if (isIE && elt.localName === "style") {
	        var fakeLoad = false;
	        if (elt.textContent.indexOf("@import") == -1) {
	          fakeLoad = true;
	        } else if (elt.sheet) {
	          fakeLoad = true;
	          var csr = elt.sheet.cssRules;
	          var len = csr ? csr.length : 0;
	          for (var i = 0, r; i < len && (r = csr[i]); i++) {
	            if (r.type === CSSRule.IMPORT_RULE) {
	              fakeLoad = fakeLoad && Boolean(r.styleSheet);
	            }
	          }
	        }
	        if (fakeLoad) {
	          setTimeout(function() {
	            elt.dispatchEvent(new CustomEvent("load", {
	              bubbles: false
	            }));
	          });
	        }
	      }
	    },
	    parseScript: function(scriptElt) {
	      var script = document.createElement("script");
	      script.__importElement = scriptElt;
	      script.src = scriptElt.src ? scriptElt.src : generateScriptDataUrl(scriptElt);
	      scope.currentScript = scriptElt;
	      this.trackElement(script, function(e) {
	        if (script.parentNode) {
	          script.parentNode.removeChild(script);
	        }
	        scope.currentScript = null;
	      });
	      this.addElementToDocument(script);
	    },
	    nextToParse: function() {
	      this._mayParse = [];
	      return !this.parsingElement && (this.nextToParseInDoc(rootDocument) || this.nextToParseDynamic());
	    },
	    nextToParseInDoc: function(doc, link) {
	      if (doc && this._mayParse.indexOf(doc) < 0) {
	        this._mayParse.push(doc);
	        var nodes = doc.querySelectorAll(this.parseSelectorsForNode(doc));
	        for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
	          if (!this.isParsed(n)) {
	            if (this.hasResource(n)) {
	              return nodeIsImport(n) ? this.nextToParseInDoc(n.__doc, n) : n;
	            } else {
	              return;
	            }
	          }
	        }
	      }
	      return link;
	    },
	    nextToParseDynamic: function() {
	      return this.dynamicElements[0];
	    },
	    parseSelectorsForNode: function(node) {
	      var doc = node.ownerDocument || node;
	      return doc === rootDocument ? this.documentSelectors : this.importsSelectors;
	    },
	    isParsed: function(node) {
	      return node.__importParsed;
	    },
	    needsDynamicParsing: function(elt) {
	      return this.dynamicElements.indexOf(elt) >= 0;
	    },
	    hasResource: function(node) {
	      if (nodeIsImport(node) && node.__doc === undefined) {
	        return false;
	      }
	      return true;
	    }
	  };
	  function nodeIsImport(elt) {
	    return elt.localName === "link" && elt.rel === IMPORT_LINK_TYPE;
	  }
	  function generateScriptDataUrl(script) {
	    var scriptContent = generateScriptContent(script);
	    return "data:text/javascript;charset=utf-8," + encodeURIComponent(scriptContent);
	  }
	  function generateScriptContent(script) {
	    return script.textContent + generateSourceMapHint(script);
	  }
	  function generateSourceMapHint(script) {
	    var owner = script.ownerDocument;
	    owner.__importedScripts = owner.__importedScripts || 0;
	    var moniker = script.ownerDocument.baseURI;
	    var num = owner.__importedScripts ? "-" + owner.__importedScripts : "";
	    owner.__importedScripts++;
	    return "\n//# sourceURL=" + moniker + num + ".js\n";
	  }
	  function cloneStyle(style) {
	    var clone = style.ownerDocument.createElement("style");
	    clone.textContent = style.textContent;
	    path.resolveUrlsInStyle(clone);
	    return clone;
	  }
	  scope.parser = importParser;
	  scope.IMPORT_SELECTOR = IMPORT_SELECTOR;
	});

	window.HTMLImports.addModule(function(scope) {
	  var flags = scope.flags;
	  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;
	  var IMPORT_SELECTOR = scope.IMPORT_SELECTOR;
	  var rootDocument = scope.rootDocument;
	  var Loader = scope.Loader;
	  var Observer = scope.Observer;
	  var parser = scope.parser;
	  var importer = {
	    documents: {},
	    documentPreloadSelectors: IMPORT_SELECTOR,
	    importsPreloadSelectors: [ IMPORT_SELECTOR ].join(","),
	    loadNode: function(node) {
	      importLoader.addNode(node);
	    },
	    loadSubtree: function(parent) {
	      var nodes = this.marshalNodes(parent);
	      importLoader.addNodes(nodes);
	    },
	    marshalNodes: function(parent) {
	      return parent.querySelectorAll(this.loadSelectorsForNode(parent));
	    },
	    loadSelectorsForNode: function(node) {
	      var doc = node.ownerDocument || node;
	      return doc === rootDocument ? this.documentPreloadSelectors : this.importsPreloadSelectors;
	    },
	    loaded: function(url, elt, resource, err, redirectedUrl) {
	      flags.load && console.log("loaded", url, elt);
	      elt.__resource = resource;
	      elt.__error = err;
	      if (isImportLink(elt)) {
	        var doc = this.documents[url];
	        if (doc === undefined) {
	          doc = err ? null : makeDocument(resource, redirectedUrl || url);
	          if (doc) {
	            doc.__importLink = elt;
	            this.bootDocument(doc);
	          }
	          this.documents[url] = doc;
	        }
	        elt.__doc = doc;
	      }
	      parser.parseNext();
	    },
	    bootDocument: function(doc) {
	      this.loadSubtree(doc);
	      this.observer.observe(doc);
	      parser.parseNext();
	    },
	    loadedAll: function() {
	      parser.parseNext();
	    }
	  };
	  var importLoader = new Loader(importer.loaded.bind(importer), importer.loadedAll.bind(importer));
	  importer.observer = new Observer();
	  function isImportLink(elt) {
	    return isLinkRel(elt, IMPORT_LINK_TYPE);
	  }
	  function isLinkRel(elt, rel) {
	    return elt.localName === "link" && elt.getAttribute("rel") === rel;
	  }
	  function hasBaseURIAccessor(doc) {
	    return !!Object.getOwnPropertyDescriptor(doc, "baseURI");
	  }
	  function makeDocument(resource, url) {
	    var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);
	    doc._URL = url;
	    var base = doc.createElement("base");
	    base.setAttribute("href", url);
	    if (!doc.baseURI && !hasBaseURIAccessor(doc)) {
	      Object.defineProperty(doc, "baseURI", {
	        value: url
	      });
	    }
	    var meta = doc.createElement("meta");
	    meta.setAttribute("charset", "utf-8");
	    doc.head.appendChild(meta);
	    doc.head.appendChild(base);
	    doc.body.innerHTML = resource;
	    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {
	      HTMLTemplateElement.bootstrap(doc);
	    }
	    return doc;
	  }
	  if (!document.baseURI) {
	    var baseURIDescriptor = {
	      get: function() {
	        var base = document.querySelector("base");
	        return base ? base.href : window.location.href;
	      },
	      configurable: true
	    };
	    Object.defineProperty(document, "baseURI", baseURIDescriptor);
	    Object.defineProperty(rootDocument, "baseURI", baseURIDescriptor);
	  }
	  scope.importer = importer;
	  scope.importLoader = importLoader;
	});

	window.HTMLImports.addModule(function(scope) {
	  var parser = scope.parser;
	  var importer = scope.importer;
	  var dynamic = {
	    added: function(nodes) {
	      var owner, parsed, loading;
	      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
	        if (!owner) {
	          owner = n.ownerDocument;
	          parsed = parser.isParsed(owner);
	        }
	        loading = this.shouldLoadNode(n);
	        if (loading) {
	          importer.loadNode(n);
	        }
	        if (this.shouldParseNode(n) && parsed) {
	          parser.parseDynamic(n, loading);
	        }
	      }
	    },
	    shouldLoadNode: function(node) {
	      return node.nodeType === 1 && matches.call(node, importer.loadSelectorsForNode(node));
	    },
	    shouldParseNode: function(node) {
	      return node.nodeType === 1 && matches.call(node, parser.parseSelectorsForNode(node));
	    }
	  };
	  importer.observer.addCallback = dynamic.added.bind(dynamic);
	  var matches = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;
	});

	(function(scope) {
	  var initializeModules = scope.initializeModules;
	  var isIE = scope.isIE;
	  if (scope.useNative) {
	    return;
	  }
	  initializeModules();
	  var rootDocument = scope.rootDocument;
	  function bootstrap() {
	    window.HTMLImports.importer.bootDocument(rootDocument);
	  }
	  if (document.readyState === "complete" || document.readyState === "interactive" && !window.attachEvent) {
	    bootstrap();
	  } else {
	    document.addEventListener("DOMContentLoaded", bootstrap);
	  }
	})(window.HTMLImports);

	window.CustomElements = window.CustomElements || {
	  flags: {}
	};

	(function(scope) {
	  var flags = scope.flags;
	  var modules = [];
	  var addModule = function(module) {
	    modules.push(module);
	  };
	  var initializeModules = function() {
	    modules.forEach(function(module) {
	      module(scope);
	    });
	  };
	  scope.addModule = addModule;
	  scope.initializeModules = initializeModules;
	  scope.hasNative = Boolean(document.registerElement);
	  scope.isIE = /Trident/.test(navigator.userAgent);
	  scope.useNative = !flags.register && scope.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative);
	})(window.CustomElements);

	window.CustomElements.addModule(function(scope) {
	  var IMPORT_LINK_TYPE = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
	  function forSubtree(node, cb) {
	    findAllElements(node, function(e) {
	      if (cb(e)) {
	        return true;
	      }
	      forRoots(e, cb);
	    });
	    forRoots(node, cb);
	  }
	  function findAllElements(node, find, data) {
	    var e = node.firstElementChild;
	    if (!e) {
	      e = node.firstChild;
	      while (e && e.nodeType !== Node.ELEMENT_NODE) {
	        e = e.nextSibling;
	      }
	    }
	    while (e) {
	      if (find(e, data) !== true) {
	        findAllElements(e, find, data);
	      }
	      e = e.nextElementSibling;
	    }
	    return null;
	  }
	  function forRoots(node, cb) {
	    var root = node.shadowRoot;
	    while (root) {
	      forSubtree(root, cb);
	      root = root.olderShadowRoot;
	    }
	  }
	  function forDocumentTree(doc, cb) {
	    _forDocumentTree(doc, cb, []);
	  }
	  function _forDocumentTree(doc, cb, processingDocuments) {
	    doc = window.wrap(doc);
	    if (processingDocuments.indexOf(doc) >= 0) {
	      return;
	    }
	    processingDocuments.push(doc);
	    var imports = doc.querySelectorAll("link[rel=" + IMPORT_LINK_TYPE + "]");
	    for (var i = 0, l = imports.length, n; i < l && (n = imports[i]); i++) {
	      if (n.import) {
	        _forDocumentTree(n.import, cb, processingDocuments);
	      }
	    }
	    cb(doc);
	  }
	  scope.forDocumentTree = forDocumentTree;
	  scope.forSubtree = forSubtree;
	});

	window.CustomElements.addModule(function(scope) {
	  var flags = scope.flags;
	  var forSubtree = scope.forSubtree;
	  var forDocumentTree = scope.forDocumentTree;
	  function addedNode(node, isAttached) {
	    return added(node, isAttached) || addedSubtree(node, isAttached);
	  }
	  function added(node, isAttached) {
	    if (scope.upgrade(node, isAttached)) {
	      return true;
	    }
	    if (isAttached) {
	      attached(node);
	    }
	  }
	  function addedSubtree(node, isAttached) {
	    forSubtree(node, function(e) {
	      if (added(e, isAttached)) {
	        return true;
	      }
	    });
	  }
	  var hasThrottledAttached = window.MutationObserver._isPolyfilled && flags["throttle-attached"];
	  scope.hasPolyfillMutations = hasThrottledAttached;
	  scope.hasThrottledAttached = hasThrottledAttached;
	  var isPendingMutations = false;
	  var pendingMutations = [];
	  function deferMutation(fn) {
	    pendingMutations.push(fn);
	    if (!isPendingMutations) {
	      isPendingMutations = true;
	      setTimeout(takeMutations);
	    }
	  }
	  function takeMutations() {
	    isPendingMutations = false;
	    var $p = pendingMutations;
	    for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {
	      p();
	    }
	    pendingMutations = [];
	  }
	  function attached(element) {
	    if (hasThrottledAttached) {
	      deferMutation(function() {
	        _attached(element);
	      });
	    } else {
	      _attached(element);
	    }
	  }
	  function _attached(element) {
	    if (element.__upgraded__ && !element.__attached) {
	      element.__attached = true;
	      if (element.attachedCallback) {
	        element.attachedCallback();
	      }
	    }
	  }
	  function detachedNode(node) {
	    detached(node);
	    forSubtree(node, function(e) {
	      detached(e);
	    });
	  }
	  function detached(element) {
	    if (hasThrottledAttached) {
	      deferMutation(function() {
	        _detached(element);
	      });
	    } else {
	      _detached(element);
	    }
	  }
	  function _detached(element) {
	    if (element.__upgraded__ && element.__attached) {
	      element.__attached = false;
	      if (element.detachedCallback) {
	        element.detachedCallback();
	      }
	    }
	  }
	  function inDocument(element) {
	    var p = element;
	    var doc = window.wrap(document);
	    while (p) {
	      if (p == doc) {
	        return true;
	      }
	      p = p.parentNode || p.nodeType === Node.DOCUMENT_FRAGMENT_NODE && p.host;
	    }
	  }
	  function watchShadow(node) {
	    if (node.shadowRoot && !node.shadowRoot.__watched) {
	      flags.dom && console.log("watching shadow-root for: ", node.localName);
	      var root = node.shadowRoot;
	      while (root) {
	        observe(root);
	        root = root.olderShadowRoot;
	      }
	    }
	  }
	  function handler(root, mutations) {
	    if (flags.dom) {
	      var mx = mutations[0];
	      if (mx && mx.type === "childList" && mx.addedNodes) {
	        if (mx.addedNodes) {
	          var d = mx.addedNodes[0];
	          while (d && d !== document && !d.host) {
	            d = d.parentNode;
	          }
	          var u = d && (d.URL || d._URL || d.host && d.host.localName) || "";
	          u = u.split("/?").shift().split("/").pop();
	        }
	      }
	      console.group("mutations (%d) [%s]", mutations.length, u || "");
	    }
	    var isAttached = inDocument(root);
	    mutations.forEach(function(mx) {
	      if (mx.type === "childList") {
	        forEach(mx.addedNodes, function(n) {
	          if (!n.localName) {
	            return;
	          }
	          addedNode(n, isAttached);
	        });
	        forEach(mx.removedNodes, function(n) {
	          if (!n.localName) {
	            return;
	          }
	          detachedNode(n);
	        });
	      }
	    });
	    flags.dom && console.groupEnd();
	  }
	  function takeRecords(node) {
	    node = window.wrap(node);
	    if (!node) {
	      node = window.wrap(document);
	    }
	    while (node.parentNode) {
	      node = node.parentNode;
	    }
	    var observer = node.__observer;
	    if (observer) {
	      handler(node, observer.takeRecords());
	      takeMutations();
	    }
	  }
	  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);
	  function observe(inRoot) {
	    if (inRoot.__observer) {
	      return;
	    }
	    var observer = new MutationObserver(handler.bind(this, inRoot));
	    observer.observe(inRoot, {
	      childList: true,
	      subtree: true
	    });
	    inRoot.__observer = observer;
	  }
	  function upgradeDocument(doc) {
	    doc = window.wrap(doc);
	    flags.dom && console.group("upgradeDocument: ", doc.baseURI.split("/").pop());
	    var isMainDocument = doc === window.wrap(document);
	    addedNode(doc, isMainDocument);
	    observe(doc);
	    flags.dom && console.groupEnd();
	  }
	  function upgradeDocumentTree(doc) {
	    forDocumentTree(doc, upgradeDocument);
	  }
	  var originalCreateShadowRoot = Element.prototype.createShadowRoot;
	  if (originalCreateShadowRoot) {
	    Element.prototype.createShadowRoot = function() {
	      var root = originalCreateShadowRoot.call(this);
	      window.CustomElements.watchShadow(this);
	      return root;
	    };
	  }
	  scope.watchShadow = watchShadow;
	  scope.upgradeDocumentTree = upgradeDocumentTree;
	  scope.upgradeDocument = upgradeDocument;
	  scope.upgradeSubtree = addedSubtree;
	  scope.upgradeAll = addedNode;
	  scope.attached = attached;
	  scope.takeRecords = takeRecords;
	});

	window.CustomElements.addModule(function(scope) {
	  var flags = scope.flags;
	  function upgrade(node, isAttached) {
	    if (node.localName === "template") {
	      if (window.HTMLTemplateElement && HTMLTemplateElement.decorate) {
	        HTMLTemplateElement.decorate(node);
	      }
	    }
	    if (!node.__upgraded__ && node.nodeType === Node.ELEMENT_NODE) {
	      var is = node.getAttribute("is");
	      var definition = scope.getRegisteredDefinition(node.localName) || scope.getRegisteredDefinition(is);
	      if (definition) {
	        if (is && definition.tag == node.localName || !is && !definition.extends) {
	          return upgradeWithDefinition(node, definition, isAttached);
	        }
	      }
	    }
	  }
	  function upgradeWithDefinition(element, definition, isAttached) {
	    flags.upgrade && console.group("upgrade:", element.localName);
	    if (definition.is) {
	      element.setAttribute("is", definition.is);
	    }
	    implementPrototype(element, definition);
	    element.__upgraded__ = true;
	    created(element);
	    if (isAttached) {
	      scope.attached(element);
	    }
	    scope.upgradeSubtree(element, isAttached);
	    flags.upgrade && console.groupEnd();
	    return element;
	  }
	  function implementPrototype(element, definition) {
	    if (Object.__proto__) {
	      element.__proto__ = definition.prototype;
	    } else {
	      customMixin(element, definition.prototype, definition.native);
	      element.__proto__ = definition.prototype;
	    }
	  }
	  function customMixin(inTarget, inSrc, inNative) {
	    var used = {};
	    var p = inSrc;
	    while (p !== inNative && p !== HTMLElement.prototype) {
	      var keys = Object.getOwnPropertyNames(p);
	      for (var i = 0, k; k = keys[i]; i++) {
	        if (!used[k]) {
	          Object.defineProperty(inTarget, k, Object.getOwnPropertyDescriptor(p, k));
	          used[k] = 1;
	        }
	      }
	      p = Object.getPrototypeOf(p);
	    }
	  }
	  function created(element) {
	    if (element.createdCallback) {
	      element.createdCallback();
	    }
	  }
	  scope.upgrade = upgrade;
	  scope.upgradeWithDefinition = upgradeWithDefinition;
	  scope.implementPrototype = implementPrototype;
	});

	window.CustomElements.addModule(function(scope) {
	  var isIE = scope.isIE;
	  var upgradeDocumentTree = scope.upgradeDocumentTree;
	  var upgradeAll = scope.upgradeAll;
	  var upgradeWithDefinition = scope.upgradeWithDefinition;
	  var implementPrototype = scope.implementPrototype;
	  var useNative = scope.useNative;
	  function register(name, options) {
	    var definition = options || {};
	    if (!name) {
	      throw new Error("document.registerElement: first argument `name` must not be empty");
	    }
	    if (name.indexOf("-") < 0) {
	      throw new Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(name) + "'.");
	    }
	    if (isReservedTag(name)) {
	      throw new Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(name) + "'. The type name is invalid.");
	    }
	    if (getRegisteredDefinition(name)) {
	      throw new Error("DuplicateDefinitionError: a type with name '" + String(name) + "' is already registered");
	    }
	    if (!definition.prototype) {
	      definition.prototype = Object.create(HTMLElement.prototype);
	    }
	    definition.__name = name.toLowerCase();
	    if (definition.extends) {
	      definition.extends = definition.extends.toLowerCase();
	    }
	    definition.lifecycle = definition.lifecycle || {};
	    definition.ancestry = ancestry(definition.extends);
	    resolveTagName(definition);
	    resolvePrototypeChain(definition);
	    overrideAttributeApi(definition.prototype);
	    registerDefinition(definition.__name, definition);
	    definition.ctor = generateConstructor(definition);
	    definition.ctor.prototype = definition.prototype;
	    definition.prototype.constructor = definition.ctor;
	    if (scope.ready) {
	      upgradeDocumentTree(document);
	    }
	    return definition.ctor;
	  }
	  function overrideAttributeApi(prototype) {
	    if (prototype.setAttribute._polyfilled) {
	      return;
	    }
	    var setAttribute = prototype.setAttribute;
	    prototype.setAttribute = function(name, value) {
	      changeAttribute.call(this, name, value, setAttribute);
	    };
	    var removeAttribute = prototype.removeAttribute;
	    prototype.removeAttribute = function(name) {
	      changeAttribute.call(this, name, null, removeAttribute);
	    };
	    prototype.setAttribute._polyfilled = true;
	  }
	  function changeAttribute(name, value, operation) {
	    name = name.toLowerCase();
	    var oldValue = this.getAttribute(name);
	    operation.apply(this, arguments);
	    var newValue = this.getAttribute(name);
	    if (this.attributeChangedCallback && newValue !== oldValue) {
	      this.attributeChangedCallback(name, oldValue, newValue);
	    }
	  }
	  function isReservedTag(name) {
	    for (var i = 0; i < reservedTagList.length; i++) {
	      if (name === reservedTagList[i]) {
	        return true;
	      }
	    }
	  }
	  var reservedTagList = [ "annotation-xml", "color-profile", "font-face", "font-face-src", "font-face-uri", "font-face-format", "font-face-name", "missing-glyph" ];
	  function ancestry(extnds) {
	    var extendee = getRegisteredDefinition(extnds);
	    if (extendee) {
	      return ancestry(extendee.extends).concat([ extendee ]);
	    }
	    return [];
	  }
	  function resolveTagName(definition) {
	    var baseTag = definition.extends;
	    for (var i = 0, a; a = definition.ancestry[i]; i++) {
	      baseTag = a.is && a.tag;
	    }
	    definition.tag = baseTag || definition.__name;
	    if (baseTag) {
	      definition.is = definition.__name;
	    }
	  }
	  function resolvePrototypeChain(definition) {
	    if (!Object.__proto__) {
	      var nativePrototype = HTMLElement.prototype;
	      if (definition.is) {
	        var inst = document.createElement(definition.tag);
	        nativePrototype = Object.getPrototypeOf(inst);
	      }
	      var proto = definition.prototype, ancestor;
	      var foundPrototype = false;
	      while (proto) {
	        if (proto == nativePrototype) {
	          foundPrototype = true;
	        }
	        ancestor = Object.getPrototypeOf(proto);
	        if (ancestor) {
	          proto.__proto__ = ancestor;
	        }
	        proto = ancestor;
	      }
	      if (!foundPrototype) {
	        console.warn(definition.tag + " prototype not found in prototype chain for " + definition.is);
	      }
	      definition.native = nativePrototype;
	    }
	  }
	  function instantiate(definition) {
	    return upgradeWithDefinition(domCreateElement(definition.tag), definition);
	  }
	  var registry = {};
	  function getRegisteredDefinition(name) {
	    if (name) {
	      return registry[name.toLowerCase()];
	    }
	  }
	  function registerDefinition(name, definition) {
	    registry[name] = definition;
	  }
	  function generateConstructor(definition) {
	    return function() {
	      return instantiate(definition);
	    };
	  }
	  var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
	  function createElementNS(namespace, tag, typeExtension) {
	    if (namespace === HTML_NAMESPACE) {
	      return createElement(tag, typeExtension);
	    } else {
	      return domCreateElementNS(namespace, tag);
	    }
	  }
	  function createElement(tag, typeExtension) {
	    if (tag) {
	      tag = tag.toLowerCase();
	    }
	    if (typeExtension) {
	      typeExtension = typeExtension.toLowerCase();
	    }
	    var definition = getRegisteredDefinition(typeExtension || tag);
	    if (definition) {
	      if (tag == definition.tag && typeExtension == definition.is) {
	        return new definition.ctor();
	      }
	      if (!typeExtension && !definition.is) {
	        return new definition.ctor();
	      }
	    }
	    var element;
	    if (typeExtension) {
	      element = createElement(tag);
	      element.setAttribute("is", typeExtension);
	      return element;
	    }
	    element = domCreateElement(tag);
	    if (tag.indexOf("-") >= 0) {
	      implementPrototype(element, HTMLElement);
	    }
	    return element;
	  }
	  var domCreateElement = document.createElement.bind(document);
	  var domCreateElementNS = document.createElementNS.bind(document);
	  var isInstance;
	  if (!Object.__proto__ && !useNative) {
	    isInstance = function(obj, ctor) {
	      if (obj instanceof ctor) {
	        return true;
	      }
	      var p = obj;
	      while (p) {
	        if (p === ctor.prototype) {
	          return true;
	        }
	        p = p.__proto__;
	      }
	      return false;
	    };
	  } else {
	    isInstance = function(obj, base) {
	      return obj instanceof base;
	    };
	  }
	  function wrapDomMethodToForceUpgrade(obj, methodName) {
	    var orig = obj[methodName];
	    obj[methodName] = function() {
	      var n = orig.apply(this, arguments);
	      upgradeAll(n);
	      return n;
	    };
	  }
	  wrapDomMethodToForceUpgrade(Node.prototype, "cloneNode");
	  wrapDomMethodToForceUpgrade(document, "importNode");
	  document.registerElement = register;
	  document.createElement = createElement;
	  document.createElementNS = createElementNS;
	  scope.registry = registry;
	  scope.instanceof = isInstance;
	  scope.reservedTagList = reservedTagList;
	  scope.getRegisteredDefinition = getRegisteredDefinition;
	  document.register = document.registerElement;
	});

	(function(scope) {
	  var useNative = scope.useNative;
	  var initializeModules = scope.initializeModules;
	  var isIE = scope.isIE;
	  if (useNative) {
	    var nop = function() {};
	    scope.watchShadow = nop;
	    scope.upgrade = nop;
	    scope.upgradeAll = nop;
	    scope.upgradeDocumentTree = nop;
	    scope.upgradeSubtree = nop;
	    scope.takeRecords = nop;
	    scope.instanceof = function(obj, base) {
	      return obj instanceof base;
	    };
	  } else {
	    initializeModules();
	  }
	  var upgradeDocumentTree = scope.upgradeDocumentTree;
	  var upgradeDocument = scope.upgradeDocument;
	  if (!window.wrap) {
	    if (window.ShadowDOMPolyfill) {
	      window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded;
	      window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded;
	    } else {
	      window.wrap = window.unwrap = function(node) {
	        return node;
	      };
	    }
	  }
	  if (window.HTMLImports) {
	    window.HTMLImports.__importsParsingHook = function(elt) {
	      if (elt.import) {
	        upgradeDocument(wrap(elt.import));
	      }
	    };
	  }
	  function bootstrap() {
	    upgradeDocumentTree(window.wrap(document));
	    window.CustomElements.ready = true;
	    var requestAnimationFrame = window.requestAnimationFrame || function(f) {
	      setTimeout(f, 16);
	    };
	    requestAnimationFrame(function() {
	      setTimeout(function() {
	        window.CustomElements.readyTime = Date.now();
	        if (window.HTMLImports) {
	          window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime;
	        }
	        document.dispatchEvent(new CustomEvent("WebComponentsReady", {
	          bubbles: true
	        }));
	      });
	    });
	  }
	  if (document.readyState === "complete" || scope.flags.eager) {
	    bootstrap();
	  } else if (document.readyState === "interactive" && !window.attachEvent && (!window.HTMLImports || window.HTMLImports.ready)) {
	    bootstrap();
	  } else {
	    var loadEvent = window.HTMLImports && !window.HTMLImports.ready ? "HTMLImportsLoaded" : "DOMContentLoaded";
	    window.addEventListener(loadEvent, bootstrap);
	  }
	})(window.CustomElements);

	(function(scope) {
	  var style = document.createElement("style");
	  style.textContent = "" + "body {" + "transition: opacity ease-in 0.2s;" + " } \n" + "body[unresolved] {" + "opacity: 0; display: block; overflow: hidden; position: relative;" + " } \n";
	  var head = document.querySelector("head");
	  head.insertBefore(style, head.firstChild);
	})(window.WebComponents);

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var _SWebComponent = __webpack_require__(53);

	var _SWebComponent2 = _interopRequireDefault(_SWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_SWebComponent2.default.setDefaultProps({
		apiKey: 'AIzaSyDCD2MPJFbXBkc5hNB5p8v21XcpeIo_5Mw'
	}, ['s-google-map', 's-google-map-marker']);

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(54);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(55);

	var _SWebComponentMixin = __webpack_require__(56);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(55);

	var _autoCast = __webpack_require__(57);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(108);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(109);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(111);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(114);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(115);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(122);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(123);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(162);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(163);
	__webpack_require__(164);
	__webpack_require__(165);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 57 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(59);


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(60),
	    createAssigner = __webpack_require__(79),
	    keysIn = __webpack_require__(92);

	/**
	 * This method is like `_.assign` except that it iterates over own and
	 * inherited source properties.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @alias extend
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assign
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	 */
	var assignIn = createAssigner(function(object, source) {
	  copyObject(source, keysIn(source), object);
	});

	module.exports = assignIn;


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(61),
	    baseAssignValue = __webpack_require__(62);

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];

	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;

	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}

	module.exports = copyObject;


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(62),
	    eq = __webpack_require__(78);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}

	module.exports = assignValue;


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(63);

	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}

	module.exports = baseAssignValue;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(64);

	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());

	module.exports = defineProperty;


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(65),
	    getValue = __webpack_require__(77);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(66),
	    isMasked = __webpack_require__(74),
	    isObject = __webpack_require__(73),
	    toSource = __webpack_require__(76);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(67),
	    isObject = __webpack_require__(73);

	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}

	module.exports = isFunction;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68),
	    getRawTag = __webpack_require__(71),
	    objectToString = __webpack_require__(72);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(69);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(70);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 70 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ },
/* 72 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ },
/* 73 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(75);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(69);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ },
/* 76 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ },
/* 78 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(80),
	    isIterateeCall = __webpack_require__(88);

	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;

	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;

	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}

	module.exports = createAssigner;


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(81),
	    overRest = __webpack_require__(82),
	    setToString = __webpack_require__(84);

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}

	module.exports = baseRest;


/***/ },
/* 81 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(83);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}

	module.exports = overRest;


/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(85),
	    shortOut = __webpack_require__(87);

	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);

	module.exports = setToString;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(86),
	    defineProperty = __webpack_require__(63),
	    identity = __webpack_require__(81);

	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};

	module.exports = baseSetToString;


/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}

	module.exports = constant;


/***/ },
/* 87 */
/***/ function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;

	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;

	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);

	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}

	module.exports = shortOut;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(78),
	    isArrayLike = __webpack_require__(89),
	    isIndex = __webpack_require__(91),
	    isObject = __webpack_require__(73);

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(66),
	    isLength = __webpack_require__(90);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 90 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 91 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(93),
	    baseKeysIn = __webpack_require__(105),
	    isArrayLike = __webpack_require__(89);

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}

	module.exports = keysIn;


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(94),
	    isArguments = __webpack_require__(95),
	    isArray = __webpack_require__(98),
	    isBuffer = __webpack_require__(99),
	    isIndex = __webpack_require__(91),
	    isTypedArray = __webpack_require__(101);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = arrayLikeKeys;


/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(96),
	    isObjectLike = __webpack_require__(97);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};

	module.exports = isArguments;


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(67),
	    isObjectLike = __webpack_require__(97);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}

	module.exports = baseIsArguments;


/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 98 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(69),
	    stubFalse = __webpack_require__(100);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;

	module.exports = isBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(46)(module)))

/***/ },
/* 100 */
/***/ function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}

	module.exports = stubFalse;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(102),
	    baseUnary = __webpack_require__(103),
	    nodeUtil = __webpack_require__(104);

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	module.exports = isTypedArray;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(67),
	    isLength = __webpack_require__(90),
	    isObjectLike = __webpack_require__(97);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}

	module.exports = baseIsTypedArray;


/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(70);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());

	module.exports = nodeUtil;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(46)(module)))

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(73),
	    isPrototype = __webpack_require__(106),
	    nativeKeysIn = __webpack_require__(107);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];

	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeysIn;


/***/ },
/* 106 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ },
/* 107 */
/***/ function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = nativeKeysIn;


/***/ },
/* 108 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 109 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(function(win) {

	/**
	 * FastDom
	 *
	 * Eliminates layout thrashing
	 * by batching DOM read/write
	 * interactions.
	 *
	 * @author Wilson Page <wilsonpage@me.com>
	 * @author Kornel Lesinski <kornel.lesinski@ft.com>
	 */

	'use strict';

	/**
	 * Mini logger
	 *
	 * @return {Function}
	 */
	var debug = 0 ? console.log.bind(console, '[fastdom]') : function() {};

	/**
	 * Normalized rAF
	 *
	 * @type {Function}
	 */
	var raf = win.requestAnimationFrame
	  || win.webkitRequestAnimationFrame
	  || win.mozRequestAnimationFrame
	  || win.msRequestAnimationFrame
	  || function(cb) { return setTimeout(cb, 16); };

	/**
	 * Initialize a `FastDom`.
	 *
	 * @constructor
	 */
	function FastDom() {
	  var self = this;
	  self.reads = [];
	  self.writes = [];
	  self.raf = raf.bind(win); // test hook
	  debug('initialized', self);
	}

	FastDom.prototype = {
	  constructor: FastDom,

	  /**
	   * Adds a job to the read batch and
	   * schedules a new frame if need be.
	   *
	   * @param  {Function} fn
	   * @public
	   */
	  measure: function(fn, ctx) {
	    debug('measure');
	    var task = !ctx ? fn : fn.bind(ctx);
	    this.reads.push(task);
	    scheduleFlush(this);
	    return task;
	  },

	  /**
	   * Adds a job to the
	   * write batch and schedules
	   * a new frame if need be.
	   *
	   * @param  {Function} fn
	   * @public
	   */
	  mutate: function(fn, ctx) {
	    debug('mutate');
	    var task = !ctx ? fn : fn.bind(ctx);
	    this.writes.push(task);
	    scheduleFlush(this);
	    return task;
	  },

	  /**
	   * Clears a scheduled 'read' or 'write' task.
	   *
	   * @param {Object} task
	   * @return {Boolean} success
	   * @public
	   */
	  clear: function(task) {
	    debug('clear', task);
	    return remove(this.reads, task) || remove(this.writes, task);
	  },

	  /**
	   * Extend this FastDom with some
	   * custom functionality.
	   *
	   * Because fastdom must *always* be a
	   * singleton, we're actually extending
	   * the fastdom instance. This means tasks
	   * scheduled by an extension still enter
	   * fastdom's global task queue.
	   *
	   * The 'super' instance can be accessed
	   * from `this.fastdom`.
	   *
	   * @example
	   *
	   * var myFastdom = fastdom.extend({
	   *   initialize: function() {
	   *     // runs on creation
	   *   },
	   *
	   *   // override a method
	   *   measure: function(fn) {
	   *     // do extra stuff ...
	   *
	   *     // then call the original
	   *     return this.fastdom.measure(fn);
	   *   },
	   *
	   *   ...
	   * });
	   *
	   * @param  {Object} props  properties to mixin
	   * @return {FastDom}
	   */
	  extend: function(props) {
	    debug('extend', props);
	    if (typeof props != 'object') throw new Error('expected object');

	    var child = Object.create(this);
	    mixin(child, props);
	    child.fastdom = this;

	    // run optional creation hook
	    if (child.initialize) child.initialize();

	    return child;
	  },

	  // override this with a function
	  // to prevent Errors in console
	  // when tasks throw
	  catch: null
	};

	/**
	 * Schedules a new read/write
	 * batch if one isn't pending.
	 *
	 * @private
	 */
	function scheduleFlush(fastdom) {
	  if (!fastdom.scheduled) {
	    fastdom.scheduled = true;
	    fastdom.raf(flush.bind(null, fastdom));
	    debug('flush scheduled');
	  }
	}

	/**
	 * Runs queued `read` and `write` tasks.
	 *
	 * Errors are caught and thrown by default.
	 * If a `.catch` function has been defined
	 * it is called instead.
	 *
	 * @private
	 */
	function flush(fastdom) {
	  debug('flush');

	  var writes = fastdom.writes;
	  var reads = fastdom.reads;
	  var error;

	  try {
	    debug('flushing reads', reads.length);
	    runTasks(reads);
	    debug('flushing writes', writes.length);
	    runTasks(writes);
	  } catch (e) { error = e; }

	  fastdom.scheduled = false;

	  // If the batch errored we may still have tasks queued
	  if (reads.length || writes.length) scheduleFlush(fastdom);

	  if (error) {
	    debug('task errored', error.message);
	    if (fastdom.catch) fastdom.catch(error);
	    else throw error;
	  }
	}

	/**
	 * We run this inside a try catch
	 * so that if any jobs error, we
	 * are able to recover and continue
	 * to flush the batch until it's empty.
	 *
	 * @private
	 */
	function runTasks(tasks) {
	  debug('run tasks');
	  var task; while (task = tasks.shift()) task();
	}

	/**
	 * Remove an item from an Array.
	 *
	 * @param  {Array} array
	 * @param  {*} item
	 * @return {Boolean}
	 */
	function remove(array, item) {
	  var index = array.indexOf(item);
	  return !!~index && !!array.splice(index, 1);
	}

	/**
	 * Mixin own properties of source
	 * object into the target.
	 *
	 * @param  {Object} target
	 * @param  {Object} source
	 */
	function mixin(target, source) {
	  for (var key in source) {
	    if (source.hasOwnProperty(key)) target[key] = source[key];
	  }
	}

	// There should never be more than
	// one instance of `FastDom` in an app
	var exports = win.fastdom = (win.fastdom || new FastDom()); // jshint ignore:line

	// Expose to CJS & AMD
	if (("function")[0] == 'f') !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return exports; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	else if ((typeof module)[0] == 'o') module.exports = exports;

	})( typeof window !== 'undefined' ? window : this);


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(112);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 113 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	var NativeCustomEvent = global.CustomEvent;

	function useNative () {
	  try {
	    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });
	    return  'cat' === p.type && 'bar' === p.detail.foo;
	  } catch (e) {
	  }
	  return false;
	}

	/**
	 * Cross-browser `CustomEvent` constructor.
	 *
	 * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent
	 *
	 * @public
	 */

	module.exports = useNative() ? NativeCustomEvent :

	// IE >= 9
	'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {
	  var e = document.createEvent('CustomEvent');
	  if (params) {
	    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);
	  } else {
	    e.initCustomEvent(type, false, false, void 0);
	  }
	  return e;
	} :

	// IE <= 8
	function CustomEvent (type, params) {
	  var e = document.createEventObject();
	  e.type = type;
	  if (params) {
	    e.bubbles = Boolean(params.bubbles);
	    e.cancelable = Boolean(params.cancelable);
	    e.detail = params.detail;
	  } else {
	    e.bubbles = false;
	    e.cancelable = false;
	    e.detail = void 0;
	  }
	  return e;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(115);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(118);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(119);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(120);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(116);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(117);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 116 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(116);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 118 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 119 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(121);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 121 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 122 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(124);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 124 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(126);

	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}

	module.exports = get;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(127),
	    toKey = __webpack_require__(159);

	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);

	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(98),
	    isKey = __webpack_require__(128),
	    stringToPath = __webpack_require__(130),
	    toString = __webpack_require__(156);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}

	module.exports = castPath;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(98),
	    isSymbol = __webpack_require__(129);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}

	module.exports = isKey;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(67),
	    isObjectLike = __webpack_require__(97);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(131);

	/** Used to match property names within property paths. */
	var reLeadingDot = /^\./,
	    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (reLeadingDot.test(string)) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});

	module.exports = stringToPath;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(132);

	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;

	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });

	  var cache = result.cache;
	  return result;
	}

	module.exports = memoizeCapped;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(133);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Expose `MapCache`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(134),
	    mapCacheDelete = __webpack_require__(150),
	    mapCacheGet = __webpack_require__(153),
	    mapCacheHas = __webpack_require__(154),
	    mapCacheSet = __webpack_require__(155);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(135),
	    ListCache = __webpack_require__(142),
	    Map = __webpack_require__(149);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(136),
	    hashDelete = __webpack_require__(138),
	    hashGet = __webpack_require__(139),
	    hashHas = __webpack_require__(140),
	    hashSet = __webpack_require__(141);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(137);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}

	module.exports = hashClear;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(64);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ },
/* 138 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = hashDelete;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(137);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(137);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(137);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(143),
	    listCacheDelete = __webpack_require__(144),
	    listCacheGet = __webpack_require__(146),
	    listCacheHas = __webpack_require__(147),
	    listCacheSet = __webpack_require__(148);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ },
/* 143 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}

	module.exports = listCacheClear;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(145);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}

	module.exports = listCacheDelete;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(78);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(145);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(145);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(145);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(64),
	    root = __webpack_require__(69);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(151);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = mapCacheDelete;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(152);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ },
/* 152 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(151);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(151);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(151);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;

	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}

	module.exports = mapCacheSet;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(157);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68),
	    arrayMap = __webpack_require__(158),
	    isArray = __webpack_require__(98),
	    isSymbol = __webpack_require__(129);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;

	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = baseToString;


/***/ },
/* 158 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(129);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var baseSet = __webpack_require__(161);

	/**
	 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	 * it's created. Arrays are created for missing index properties while objects
	 * are created for all other missing properties. Use `_.setWith` to customize
	 * `path` creation.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.set(object, 'a[0].b.c', 4);
	 * console.log(object.a[0].b.c);
	 * // => 4
	 *
	 * _.set(object, ['x', '0', 'y', 'z'], 5);
	 * console.log(object.x[0].y.z);
	 * // => 5
	 */
	function set(object, path, value) {
	  return object == null ? object : baseSet(object, path, value);
	}

	module.exports = set;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(61),
	    castPath = __webpack_require__(127),
	    isIndex = __webpack_require__(91),
	    isObject = __webpack_require__(73),
	    toKey = __webpack_require__(159);

	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);

	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;

	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;

	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}

	module.exports = baseSet;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(111);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(166);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 166 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var _coffeekrakenSDatepickerComponent = __webpack_require__(168);

	var _coffeekrakenSDatepickerComponent2 = _interopRequireDefault(_coffeekrakenSDatepickerComponent);

	var _coffeekrakenSGoogleMapComponent = __webpack_require__(197);

	var _coffeekrakenSGoogleMapComponent2 = _interopRequireDefault(_coffeekrakenSGoogleMapComponent);

	var _coffeekrakenSGoogleMapMarkerComponent = __webpack_require__(227);

	var _coffeekrakenSGoogleMapMarkerComponent2 = _interopRequireDefault(_coffeekrakenSGoogleMapMarkerComponent);

	var _coffeekrakenSCustomScrollbarComponent = __webpack_require__(246);

	var _coffeekrakenSCustomScrollbarComponent2 = _interopRequireDefault(_coffeekrakenSCustomScrollbarComponent);

	var _coffeekrakenSRippleComponent = __webpack_require__(274);

	var _coffeekrakenSRippleComponent2 = _interopRequireDefault(_coffeekrakenSRippleComponent);

	var _coffeekrakenSEqualizeComponent = __webpack_require__(366);

	var _coffeekrakenSEqualizeComponent2 = _interopRequireDefault(_coffeekrakenSEqualizeComponent);

	var _coffeekrakenSShareComponent = __webpack_require__(394);

	var _coffeekrakenSShareComponent2 = _interopRequireDefault(_coffeekrakenSShareComponent);

	var _coffeekrakenSITypedComponent = __webpack_require__(422);

	var _coffeekrakenSITypedComponent2 = _interopRequireDefault(_coffeekrakenSITypedComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SDatepickerComponent = __webpack_require__(169);

	var _SDatepickerComponent2 = _interopRequireDefault(_SDatepickerComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SDatepickerComponent2.default.define('s-datepicker', _SDatepickerComponent2.default);

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(170);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _flatpickr = __webpack_require__(195);

	var _flatpickr2 = _interopRequireDefault(_flatpickr);

	var _integer = __webpack_require__(196);

	var _integer2 = _interopRequireDefault(_integer);

	var _autoCast = __webpack_require__(174);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 		SDatepickerComponent
	 * @extends 	SWebComponent
	 * Provide a nice and powerful datepicker component around the nice flatpickr plugin.
	 * Features:
	 * - Fully featured datepicker (thanks to flatpick)
	 * - Ability to display inline as well as on field focus
	 * - Timepicker support
	 * - And more...
	 * @styleguide  	Form / Datepicker
	 * @example 	html
	 * <input name="my-cool-date" class="form-input" />
	 * <s-datepicker for="my-cool-date"></s-datepicker>
	 * @see 	http://github.coffeekraken.io/chmln/flatpickr/^v2.0.0 		Flatpickr documentation
	 * @author 	Olivier Bossel <olivier.bossel@gmail.com>
	 */

	/**
	 * @name 			Datepicker inline
	 * Provide a way to display a nice datepicker
	 * @styleguide  	Form / Datepicker
	 * @example 		html
	 * <div style="height:28em">
	 * 	<input name="my-cool-date" class="visually-hidden" />
	 *  <s-datepicker for="my-cool-date" inline></s-datepicker>
	 * </div>
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */

	/**
	 * @name 			Datepicker with time
	 * Provide a way to display a nice datepicker
	 * @styleguide  	Form / Datepicker
	 * @example 		html
	 * <div style="height:32em">
	 * 	<input name="my-cool-date" class="form-input" />
	 *  <s-datepicker for="my-cool-date" date-format="Y-m-d H:i" enable-time></s-datepicker>
	 * </div>
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SDatepickerComponent = function (_SWebComponent) {
		_inherits(SDatepickerComponent, _SWebComponent);

		function SDatepickerComponent() {
			_classCallCheck(this, SDatepickerComponent);

			return _possibleConstructorReturn(this, (SDatepickerComponent.__proto__ || Object.getPrototypeOf(SDatepickerComponent)).apply(this, arguments));
		}

		_createClass(SDatepickerComponent, [{
			key: 'componentMount',


			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */
			value: function componentMount() {
				_get(SDatepickerComponent.prototype.__proto__ || Object.getPrototypeOf(SDatepickerComponent.prototype), 'componentMount', this).call(this);

				// get the datepicker input target
				this._targetInput = this;
				if (this.props.for) {
					// try to get the input
					var input = document.querySelector('[name="' + this.props.for + '"],input#' + this.props.for);
					if (input) {
						this._targetInput = input;
					}
				}

				// instanciate the datepicker
				this._instanciateDatepicker();
			}

			/**
	   * Component will receive prop
	   * @definition 		SWebComponent.componentWillReceiveProp
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProp',
			value: function componentWillReceiveProp(name, newVal, oldVal) {
				switch (name) {
					case 'color':
						break;
					default:
						// destroy and recreate the datepicker
						this._flatpickr.destroy();
						this._instanciateDatepicker();
						break;
				}
			}

			/**
	   * Render the component
	   * Here goes the code that reflect the this.props state on the actual html element
	   * @definition 		SWebComponent.render
	   * @protected
	   */

		}, {
			key: 'render',
			value: function render() {
				_get(SDatepickerComponent.prototype.__proto__ || Object.getPrototypeOf(SDatepickerComponent.prototype), 'render', this).call(this);
				// copy props
				if (this.props.color) {
					this._flatpickr.calendarContainer.setAttribute('color', this.props.color);
				}
			}

			/**
	   * Create datepicker instance
	   */

		}, {
			key: '_instanciateDatepicker',
			value: function _instanciateDatepicker() {
				var _this2 = this;

				this._flatpickr = new _flatpickr2.default(this._targetInput, {
					clickOpens: this.props.openOnClick,
					dateFormat: this.props.dateFormat,
					defaultDate: this._targetInput.value || this.props.defaultDate,
					disable: this.props.disabledDates,
					enable: this.props.enabledDates,
					enableTime: this.props.enableTime,
					enableSeconds: this.props.enableSeconds,
					hourIncrement: this.props.hourIncrement,
					inline: this.props.inline,
					maxDate: this.props.maxDate,
					minDate: this.props.minDate,
					minuteIncrement: this.props.minuteIncrement,
					noCalendar: this.props.noCalendar,
					onChange: function onChange(dateObj, dateStr, instance) {
						_this2.props.onChange && _this2.props.onChange(dateObj, dateStr, instance);
						_this2.dispatchComponentEvent('change', {
							dateObj: dateObj,
							dateStr: dateStr,
							instance: instance
						});
					},
					onClose: this.props.onClose,
					onOpen: function onOpen(dateObj, dateStr, instance) {
						_this2.props.onOpen && _this2.props.onOpen(dateObj, dateStr, instance);
					},
					onReady: function onReady(dateObj, dateStr, instance) {
						_this2.props.onReady && _this2.props.onReady(dateObj, dateStr, instance);
						if (_this2._targetInput.tagName.toLowerCase() === 'input') {
							if (!_this2._targetInput.value) {
								instance.setDate(_this2.props.minDate || new Date());
							}
							instance.triggerChange();
						}
					},
					parseDate: this.props.parseDate ? this.props.parseDate.bind(this) : function (date) {
						// if the date is a time only
						if (this.props.noCalendar && this.props.enableTime) {
							return new Date(Date.parse('2000.01.01 ' + date));
						} else if ((0, _integer2.default)((0, _autoCast2.default)(date))) {
							// it's a timestamp
							return new Date(parseInt(date) * 1000);
						}
						return new Date(Date.parse(date));
					}.bind(this),
					shorthandCurrentMonth: this.props.shorthandCurrentMonth,
					time_24hr: this.props.time24hr,
					utc: this.props.utc,
					weekNumbers: this.props.weekNumbers,
					wrap: this.props.wrap,
					appendTo: this
				});
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   * @protected
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tdisplay:inline-block;\n\t\t\t}\n\t\t\t.flatpickr-input {\n\t\t\t\tcursor: pointer;\n\t\t\t\tz-index: 1\n\t\t\t}\n\t\t\t.flatpickr-mobileInput {\n\t\t\t\topacity: 0;\n\t\t\t\tvisibility: hidden;\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t\t.flatpickr-calendar {\n\t\t\t\tbackground: #fff;\n\t\t\t\topacity:0;\n\t\t\t\tpointer-events: none;\n\t\t\t\tmargin-top:-20px;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding:1em;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop:0; left: -200vw;\n\t\t\t\tuser-select:none;\n\t\t\t}\n\t\t\t.flatpickr-calendar.open {\n\t\t\t\topacity: 1;\n\t\t\t\tz-index: 99999;\n\t\t\t\tmargin-top:0;\n\t\t\t\tpointer-events: all;\n\t\t\t\ttop:0; left:0;\n\t\t\t}\n\t\t\t.flatpickr-calendar.inline {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tposition: relative;\n\t\t\t\topacity:1;\n\t\t\t\tmargin-top:0;\n\t\t\t\tpadding:0;\n\t\t\t\tpointer-events: all;\n\t\t\t\tleft:0;\n\t\t\t}\n\t\t\t.flatpickr-calendar.static {\n\t\t\t\tposition: relative\n\t\t\t}\n\t\t\t.flatpickr-calendar.static.open {\n\t\t\t\tdisplay: block\n\t\t\t}\n\t\t\t.flatpickr-calendar.hasWeeks {\n\t\t\t}\n\n\t\t\t.flatpickr-month,\n\t\t\t.flatpickr-next-month i,\n\t\t\t.flatpickr-prev-month i {\n\t\t\t\tposition: relative\n\t\t\t}\n\n\t\t\t.flatpickr-month {\n\t\t\t\tuser-select:none;\n\t\t\t\twidth:100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tpadding: 1em 0;\n\t\t\t}\n\t\t\t.flatpickr-month > span {\n\t\t\t\tvertical-align: middle;\n\t\t\t}\n\n\t\t\t.flatpickr-next-month,\n\t\t\t.flatpickr-prev-month {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 3em;\n\t\t\t\tdisplay : inline-block !important;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.flatpickr-next-month[style*="none"],\n\t\t\t.flatpickr-prev-month[style*="none"] {\n\t\t\t\tpointer-events:none;\n\t\t\t\topacity: .4;\n\t\t\t}\n\t\t\t.flatpickr-next-month svg,\n\t\t\t.flatpickr-prev-month svg {\n\t\t\t\theight: 1em;\n\t\t\t}\n\t\t\t.flatpickr-next-month svg path,\n\t\t\t.flatpickr-prev-month svg path {\n\t\t\t\tfill: inherit\n\t\t\t}\n\t\t\t.flatpickr-current-month {\n\t\t\t\tflex: 1 auto;\n\t\t\t}\n\t\t\t.flatpickr-current-month .cur-month {\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t.flatpickr-current-month .numInputWrapper {\n\t\t\t\tdisplay:inline;\n\t\t\t}\n\t\t\t.flatpickr-current-month .cur-year {\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\twidth: 3.2em;\n\t\t\t\tdisplay: inline;\n\t\t\t\tfont-size: inherit;\n\t\t\t\tline-height: 0;\n\t\t\t\theight: initial;\n\t\t\t\tborder: 0;\n\t\t\t\tborder-radius: 0;\n\t\t\t\tvertical-align: initial;\n\t\t\t\toutline:none;\n\t\t\t}\n\t\t\t.flatpickr-current-month .cur-year:hover {\n\t\t\t\tbackground: rgba(0, 0, 0, .05)\n\t\t\t}\n\t\t\t.flatpickr-weekdays {\n\t\t\t\tpadding:.5em 0;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\tspan.flatpickr-weekday {\n\t\t\t\tcursor: default;\n\t\t\t\tmargin: 0;\n\t\t\t\ttext-align: center;\n\t\t\t\tdisplay:inline-block;\n\t\t\t\twidth: 5em;\n\t\t\t\tfont-size:.6em;\n\t\t\t\tpadding:.5em 0;\n\t\t\t}\n\n\t\t\t.flatpickr-rContainer {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 21em;\n\t\t\t}\n\t\t\t.flatpickr-days {\n\t\t\t\toutline: 0;\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t\t.flatpickr-day {\n\t\t\t\twidth: 3em;\n\t\t\t\theight: 3em;\n\t\t\t\tline-height: 3em;\n\t\t\t\tcursor: pointer;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin: 0;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.flatpickr-day.disabled,\n\t\t\t.flatpickr-day.disabled:hover,\n\t\t\t.flatpickr-day.nextMonthDay,\n\t\t\t.flatpickr-day.notAllowed,\n\t\t\t.flatpickr-day.notAllowed.nextMonthDay,\n\t\t\t.flatpickr-day.notAllowed.prevMonthDay,\n\t\t\t.flatpickr-day.prevMonthDay {\n\t\t\t\tcolor: rgba(57, 57, 57, .3);\n\t\t\t\tbackground: 0 0;\n\t\t\t\tborder-color: transparent;\n\t\t\t\tcursor: default\n\t\t\t}\n\t\t\t.flatpickr-weekwrapper {\n\t\t\t\tpadding-top:.5em;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tfloat: left\n\t\t\t}\n\t\t\t.flatpickr-weekwrapper .flatpickr-weeks {\n\t\t\t\tpadding: .5em .25rem 0 .25em;\n\t\t\t}\n\t\t\t.flatpickr-weekwrapper .flatpickr-weekday {\n\t\t\t\tfloat: none;\n\t\t\t\twidth: 100%\n\t\t\t}\n\t\t\t.flatpickr-weekwrapper span.flatpickr-day {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 100%\n\t\t\t}\n\t\t\t.flatpickr-time {\n\t\t\t\toverflow: auto;\n\t\t\t\ttext-align: center;\n\t\t\t\tborder-top: 0;\n\t\t\t\toutline: 0;\n\t\t\t\tdisplay: block;\n\t\t\t\tdisplay: flex;\n\t\t\t\tmin-width:10em;\n\t\t\t}\n\t\t\t.flatpickr-am-pm {\n\t\t\t\tuser-select:none;\n\t\t\t}\n\t\t\t.flatpickr-am-pm,\n\t\t\t.flatpickr-time input,\n\t\t\t.flatpickr-time-separator {\n\t\t\t\theight: 3em;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tline-height: 3em;\n\t\t\t\tcolor: #393939\n\t\t\t}\n\t\t\t.flatpickr-time input {\n\t\t\t\tfont-size: 1em;\n\t\t\t\tbackground: 0 0;\n\t\t\t\tbox-shadow: none;\n\t\t\t\tborder: 0;\n\t\t\t\tborder-radius: 0;\n\t\t\t\tflex: 1;\n\t\t\t\twidth: 33%;\n\t\t\t\tmin-width: 33%;\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.flatpickr-time input.flatpickr-minute {\n\t\t\t\twidth: 26%;\n\t\t\t}\n\t\t\t.flatpickr-time input.flatpickr-second {\n\t\t\t}\n\t\t\t.flatpickr-time input:focus {\n\t\t\t\toutline: 0;\n\t\t\t\tborder: 0\n\t\t\t}\n\n\t\t\t.flatpickr-time.has-seconds input[type=number] {\n\t\t\t\twidth: 25%;\n\t\t\t\tmin-width: 25%\n\t\t\t}\n\t\t\t.hasTime .flatpickr-days,\n\t\t\t.hasWeeks .flatpickr-days {\n\t\t\t\tborder-bottom: 0;\n\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\t\tborder-bottom-left-radius: 0\n\t\t\t}\n\t\t\t.hasWeeks .flatpickr-days {\n\t\t\t\tborder-left: 0\n\t\t\t}\n\n\t\t\t.flatpickr-am-pm {\n\t\t\t\toutline: 0;\n\t\t\t\twidth: 21%;\n\t\t\t\tpadding: 0 2%;\n\t\t\t\tcursor: pointer;\n\t\t\t\ttext-align: left;\n\t\t\t}\n\n\t\t\t@media all and (-ms-high-contrast: none) {\n\t\t\t\t.flatpickr-month {\n\t\t\t\t\tpadding: 0\n\t\t\t\t}\n\t\t\t\t.flatpickr-month svg {\n\t\t\t\t\ttop: 0 !important\n\t\t\t\t}\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {
					/**
	    * Specify the name or id of the field to link the datepicker to
	    * @prop
	    * @type  		{String}
	    */
					for: null,

					/**
	     * Displays the calendar inline
	     * @prop
	     * @type 		{Boolean}
	     */
					inline: false,

					/**
	     * Specify the color to use to skin the datepicker.
	     * @physicalProp
	     * @observed
	     * @prop
	     * @type		{String}
	     */
					color: null,

					/**
	     * Allows the user to enter a date directly input the input field. By default, direct entry is disabled.
	     * @prop
	     * @type 		{Boolean}
	     */
					allowInput: false,

					/**
	     * Clicking on the input opens the date (time) picker. Disable this if you wish to open the calendar manually with `.open()`
	     * @prop
	     * @type 		{Boolean}
	     */
					openOnClick: true,

					/**
	     * A string of characters which are used to define how the date will be displayed in the input box. The supported characters are defined in the table below.
	     * @prop
	     * @type 		{String}
	     */
					dateFormat: 'Y-m-d',

					/**
	     * Set the initial selected date. Same as preloading a date string into an input's value attribute, but can also handle a Date object.
	     * @prop
	     * @type 		{Date|String}
	     */
					defaultDate: null,

					/**
	     * Disable some dates
	     * @see 		https://chmln.github.io/flatpickr/#disable
	     * @prop
	     * @type 		{Array}
	     */
					disabledDates: [],

					/**
	     * Specify if the datepicker is disabled or not
	     * @physicalProp
	     * @prop
	     * @type 		{Boolean}
	     */
					disabled: false,

					/**
	     * Disable all dates except the ones you specify.
	     * @see 		https://chmln.github.io/flatpickr/#enable
	     * @prop
	     * @type 		{Array}
	     */
					enabledDates: [],

					/**
	     * Enables time picker
	     * @prop
	     * @type 		{Boolean}
	     */
					enableTime: false,

					/**
	     * Enables seconds in the time picker.
	     * @prop
	     * @type 		{Boolean}
	     */
					enableSeconds: false,

					/**
	     * Adjusts the step for the hour input (incl. scrolling)
	     * @prop
	     * @type 		{Integer}
	     */
					hourIncrement: 1,

					/**
	     * Adjusts the step for the minute input (incl. scrolling)
	     * @prop
	     * @type 		{Integer}
	     */
					minuteIncrement: 5,

					/**
	     * The maximum date that a user can pick to.
	     * @prop
	     * @type 		{Date|String}
	     */
					maxDate: null,

					/**
	     * The minimum date that a user can start picking from
	     * @prop
	     * @type 		{Date|String}
	     */
					minDate: null,

					/**
	     * Hides the calendar. For use along with enableTime.
	     * @prop
	     * @type 		{Boolean}
	     */
					noCalendar: false,

					/**
	     * Function(s) to trigger on every date selection
	     * @see 		https://chmln.github.io/flatpickr/#eventsAPI
	     * @prop
	     * @type 		{Function}
	     */
					onChange: null,

					/**
	     * Function(s) to trigger on every time the calendar is closed
	     * @see 		https://chmln.github.io/flatpickr/#eventsAPI
	     * @prop
	     * @type 		{Function}
	     */
					onClose: null,

					/**
	     * Function(s) to trigger on every time the calendar is opened
	     * @see 		https://chmln.github.io/flatpickr/#eventsAPI
	     * @prop
	     * @type 		{Function}
	     */
					onOpen: null,

					/**
	     * Function to trigger when the calendar is ready
	     * @see 		https://chmln.github.io/flatpickr/#eventsAPI
	     * @prop
	     * @type 		{Function}
	     */
					onReady: null,

					/**
	     * Function that expects a date string and must return a Date object
	     * @prop
	     * @type 		{Function}
	     */
					parseDate: false,

					/**
	     * Show the month using the shorthand version (ie, Sep instead of September).
	     * @prop
	     * @type 		{Boolean}
	     */
					shorthandCurrentMonth: false,

					/**
	     * Displays time picker in 24 hour mode without AM/PM selection when enabled.
	     * @prop
	     * @type 		{Boolean}
	     */
					time24hr: true,

					/**
	     * When true, dates will parsed, formatted, and displayed in UTC. It's recommended that date strings contain the timezone, but not necessary
	     * @prop
	     * @type 		{Boolean}
	     */
					utc: false,

					/**
	     * Enables display of week numbers in calendar
	     * @prop
	     * @type 		{Boolean}
	     */
					weekNumbers: false,

					/**
	     * flatpickr can parse an input group of textboxes and buttons, common in Bootstrap and other frameworks.
	     * @see 		https://chmln.github.io/flatpickr/#strap
	     * @prop
	     * @type 		{Boolean}
	     */
					wrap: false
				};
			}

			/**
	   * Physical props
	   * @definition 		SWebComponent.physicalProps
	   * @protected
	   */

		}, {
			key: 'physicalProps',
			get: function get() {
				return ['color'];
			}
		}]);

		return SDatepickerComponent;
	}(_SWebComponent3.default);

	exports.default = SDatepickerComponent;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(171);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(172);

	var _SWebComponentMixin = __webpack_require__(173);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(172);

	var _autoCast = __webpack_require__(174);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(175);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(176);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(177);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(179);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(180);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(187);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(188);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(190);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(191);
	__webpack_require__(192);
	__webpack_require__(193);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 174 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 175 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 176 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(178);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(180);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(183);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(184);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(185);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(181);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(182);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 181 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(181);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 183 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 184 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(186);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 186 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 187 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(189);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 189 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(177);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(194);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 194 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*! flatpickr v2.3.3, @license MIT */
	function Flatpickr(element, config) {
		var self = this;

		function init() {
			if (element._flatpickr) destroy(element._flatpickr);

			element._flatpickr = self;

			self.element = element;
			self.instanceConfig = config || {};

			setupFormats();

			parseConfig();
			setupLocale();
			setupInputs();
			setupDates();
			setupHelperFunctions();

			self.isOpen = self.config.inline;
			self.changeMonth = changeMonth;
			self.clear = clear;
			self.close = close;
			self.destroy = destroy;
			self.formatDate = formatDate;
			self.jumpToDate = jumpToDate;
			self.open = open;
			self.redraw = redraw;
			self.set = set;
			self.setDate = setDate;
			self.toggle = toggle;

			self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === "single" && !self.config.disable.length && !self.config.enable.length && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

			if (!self.isMobile) build();

			bind();

			if (!self.isMobile) {
				Object.defineProperty(self, "dateIsPicked", {
					set: function set(bool) {
						if (bool) return self.calendarContainer.classList.add("dateIsPicked");
						self.calendarContainer.classList.remove("dateIsPicked");
					}
				});
			}

			self.dateIsPicked = self.selectedDates.length > 0 || self.config.noCalendar;

			if (self.selectedDates.length) {
				if (self.config.enableTime) setHoursFromDate();
				updateValue();
			}

			if (self.config.weekNumbers) {
				self.calendarContainer.style.width = self.days.clientWidth + self.weekWrapper.clientWidth + "px";
			}

			triggerEvent("Ready");
		}

		function updateTime(e) {
			if (self.config.noCalendar && !self.selectedDates.length)
				// picking time only
				self.selectedDates = [self.now];

			timeWrapper(e);

			if (!self.selectedDates.length) return;

			if (!self.minDateHasTime || e.type !== "input" || e.target.value.length >= 2) {
				setHoursFromInputs();
				updateValue();
			} else {
				setTimeout(function () {
					setHoursFromInputs();
					updateValue();
				}, 1000);
			}
		}

		function setHoursFromInputs() {
			if (!self.config.enableTime) return;

			var hours = parseInt(self.hourElement.value, 10) || 0,
			    minutes = parseInt(self.minuteElement.value, 10) || 0,
			    seconds = self.config.enableSeconds ? parseInt(self.secondElement.value, 10) || 0 : 0;

			if (self.amPM) hours = hours % 12 + 12 * (self.amPM.textContent === "PM");

			if (self.minDateHasTime && compareDates(self.latestSelectedDateObj, self.config.minDate) === 0) {

				hours = Math.max(hours, self.config.minDate.getHours());
				if (hours === self.config.minDate.getHours()) minutes = Math.max(minutes, self.config.minDate.getMinutes());
			} else if (self.maxDateHasTime && compareDates(self.latestSelectedDateObj, self.config.maxDate) === 0) {
				hours = Math.min(hours, self.config.maxDate.getHours());
				if (hours === self.config.maxDate.getHours()) minutes = Math.min(minutes, self.config.maxDate.getMinutes());
			}

			setHours(hours, minutes, seconds);
		}

		function setHoursFromDate(dateObj) {
			var date = dateObj || self.latestSelectedDateObj;

			if (date) setHours(date.getHours(), date.getMinutes(), date.getSeconds());
		}

		function setHours(hours, minutes, seconds) {
			if (self.selectedDates.length) {
				self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);
			}

			if (!self.config.enableTime || self.isMobile) return;

			self.hourElement.value = self.pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * (hours % 12 === 0) : hours);

			self.minuteElement.value = self.pad(minutes);

			if (!self.config.time_24hr && self.selectedDates.length) self.amPM.textContent = self.latestSelectedDateObj.getHours() >= 12 ? "PM" : "AM";

			if (self.config.enableSeconds) self.secondElement.value = self.pad(seconds);
		}

		function onYearInput(event) {
			if (event.target.value.length === 4) {
				self.currentYearElement.blur();
				handleYearChange(event.target.value);
				event.target.value = self.currentYear;
			}
		}

		function bind() {
			if (self.config.wrap) {
				["open", "close", "toggle", "clear"].forEach(function (el) {
					try {
						self.element.querySelector("[data-" + el + "]").addEventListener("click", self[el]);
					} catch (e) {
						//
					}
				});
			}

			if (window.document.createEvent !== undefined) {
				self.changeEvent = window.document.createEvent("HTMLEvents");
				self.changeEvent.initEvent("change", false, true);
			}

			if (self.isMobile) return setupMobile();

			self.debouncedResize = debounce(onResize, 50);
			self.triggerChange = function () {
				return triggerEvent("Change");
			};
			self.debouncedChange = debounce(self.triggerChange, 1000);

			if (self.config.mode === "range" && self.days) self.days.addEventListener("mouseover", onMouseOver);

			window.document.addEventListener("keydown", onKeyDown);

			if (!self.config.inline && !self.config.static) window.addEventListener("resize", self.debouncedResize);

			if (window.ontouchstart) window.document.addEventListener("touchstart", documentClick);

			window.document.addEventListener("click", documentClick);
			window.document.addEventListener("blur", documentClick);

			if (self.config.clickOpens) (self.altInput || self.input).addEventListener("focus", open);

			if (!self.config.noCalendar) {
				self.prevMonthNav.addEventListener("click", function () {
					return changeMonth(-1);
				});
				self.nextMonthNav.addEventListener("click", function () {
					return changeMonth(1);
				});

				self.currentYearElement.addEventListener("wheel", function (e) {
					return debounce(yearScroll(e), 50);
				});
				self.currentYearElement.addEventListener("focus", function () {
					self.currentYearElement.select();
				});

				self.currentYearElement.addEventListener("input", onYearInput);
				self.currentYearElement.addEventListener("increment", onYearInput);

				self.days.addEventListener("click", selectDate);
			}

			if (self.config.enableTime) {
				self.timeContainer.addEventListener("transitionend", positionCalendar);
				self.timeContainer.addEventListener("wheel", function (e) {
					return debounce(updateTime(e), 5);
				});
				self.timeContainer.addEventListener("input", updateTime);
				self.timeContainer.addEventListener("increment", updateTime);

				self.timeContainer.addEventListener("wheel", self.debouncedChange);
				self.timeContainer.addEventListener("input", self.triggerChange);

				self.hourElement.addEventListener("focus", function () {
					self.hourElement.select();
				});
				self.minuteElement.addEventListener("focus", function () {
					self.minuteElement.select();
				});

				if (self.secondElement) {
					self.secondElement.addEventListener("focus", function () {
						self.secondElement.select();
					});
				}

				if (self.amPM) {
					self.amPM.addEventListener("click", function (e) {
						updateTime(e);
						self.triggerChange(e);
					});
				}
			}
		}

		function jumpToDate(jumpDate) {
			jumpDate = jumpDate ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);

			try {
				self.currentYear = jumpDate.getFullYear();
				self.currentMonth = jumpDate.getMonth();
			} catch (e) {
				console.error(e.stack);
				console.warn("Invalid date supplied: " + jumpDate);
			}

			self.redraw();
		}

		function incrementNumInput(e, delta) {
			var input = e.target.parentNode.childNodes[0];
			input.value = parseInt(input.value, 10) + delta * (input.step || 1);

			try {
				input.dispatchEvent(new Event("increment", { "bubbles": true }));
			} catch (e) {
				var ev = window.document.createEvent("CustomEvent");
				ev.initCustomEvent("increment", true, true, {});
				input.dispatchEvent(ev);
			}
		}

		function createNumberInput(inputClassName) {
			var wrapper = createElement("div", "numInputWrapper"),
			    numInput = createElement("input", "numInput " + inputClassName),
			    arrowUp = createElement("span", "arrowUp"),
			    arrowDown = createElement("span", "arrowDown");

			numInput.type = "text";
			wrapper.appendChild(numInput);
			wrapper.appendChild(arrowUp);
			wrapper.appendChild(arrowDown);

			arrowUp.addEventListener("click", function (e) {
				return incrementNumInput(e, 1);
			});
			arrowDown.addEventListener("click", function (e) {
				return incrementNumInput(e, -1);
			});
			return wrapper;
		}

		function build() {
			var fragment = window.document.createDocumentFragment();
			self.calendarContainer = createElement("div", "flatpickr-calendar");
			self.numInputType = navigator.userAgent.indexOf("MSIE 9.0") > 0 ? "text" : "number";

			if (!self.config.noCalendar) {
				fragment.appendChild(buildMonthNav());
				self.innerContainer = createElement("div", "flatpickr-innerContainer");

				if (self.config.weekNumbers) self.innerContainer.appendChild(buildWeeks());

				self.rContainer = createElement("div", "flatpickr-rContainer");
				self.rContainer.appendChild(buildWeekdays());
				self.rContainer.appendChild(buildDays());
				self.innerContainer.appendChild(self.rContainer);
				fragment.appendChild(self.innerContainer);
			}

			if (self.config.enableTime) fragment.appendChild(buildTime());

			if (self.config.mode === "range") self.calendarContainer.classList.add("rangeMode");

			self.calendarContainer.appendChild(fragment);

			if (self.config.inline || self.config.static) {
				self.calendarContainer.classList.add(self.config.inline ? "inline" : "static");
				positionCalendar();

				if (self.config.appendTo && self.config.appendTo.nodeType) self.config.appendTo.appendChild(self.calendarContainer);else {
					self.element.parentNode.insertBefore(self.calendarContainer, (self.altInput || self.input).nextSibling);
				}
			} else window.document.body.appendChild(self.calendarContainer);
		}

		function createDay(className, date, dayNumber) {
			var dateIsEnabled = isEnabled(date, true),
			    dayElement = createElement("span", "flatpickr-day " + className, date.getDate());

			dayElement.dateObj = date;

			if (compareDates(date, self.now) === 0) dayElement.classList.add("today");

			if (dateIsEnabled) {
				dayElement.tabIndex = 0;

				if (isDateSelected(date)) {
					dayElement.classList.add("selected");

					if (self.config.mode === "range") {
						dayElement.classList.add(compareDates(date, self.selectedDates[0]) === 0 ? "startRange" : "endRange");
					} else self.selectedDateElem = dayElement;
				}
			} else {
				dayElement.classList.add("disabled");
				if (self.selectedDates[0] && date > self.minRangeDate && date < self.selectedDates[0]) self.minRangeDate = date;else if (self.selectedDates[0] && date < self.maxRangeDate && date > self.selectedDates[0]) self.maxRangeDate = date;
			}

			if (self.config.mode === "range") {
				if (isDateInRange(date) && !isDateSelected(date)) dayElement.classList.add("inRange");

				if (self.selectedDates.length === 1 && (date < self.minRangeDate || date > self.maxRangeDate)) dayElement.classList.add("notAllowed");
			}

			if (self.config.weekNumbers && className !== "prevMonthDay" && dayNumber % 7 === 1) {
				self.weekNumbers.insertAdjacentHTML("beforeend", "<span class='disabled flatpickr-day'>" + self.config.getWeek(date) + "</span>");
			}

			triggerEvent("DayCreate", dayElement);

			return dayElement;
		}

		function buildDays() {
			if (!self.days) {
				self.days = createElement("div", "flatpickr-days");
				self.days.tabIndex = -1;
			}

			self.firstOfMonth = (new Date(self.currentYear, self.currentMonth, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;

			self.prevMonthDays = self.utils.getDaysinMonth((self.currentMonth - 1 + 12) % 12);

			var daysInMonth = self.utils.getDaysinMonth(),
			    days = window.document.createDocumentFragment();

			var dayNumber = self.prevMonthDays + 1 - self.firstOfMonth;

			if (self.config.weekNumbers && self.weekNumbers.firstChild) self.weekNumbers.textContent = "";

			if (self.config.mode === "range") {
				// const dateLimits = self.config.enable.length || self.config.disable.length || self.config.mixDate || self.config.maxDate;
				self.minRangeDate = new Date(self.currentYear, self.currentMonth - 1, dayNumber);
				self.maxRangeDate = new Date(self.currentYear, self.currentMonth + 1, (42 - self.firstOfMonth) % daysInMonth);
			}

			if (self.days.firstChild) self.days.textContent = "";

			// prepend days from the ending of previous month
			for (var i = 0; dayNumber <= self.prevMonthDays; i++, dayNumber++) {
				days.appendChild(createDay("prevMonthDay", new Date(self.currentYear, self.currentMonth - 1, dayNumber), dayNumber));
			}

			// Start at 1 since there is no 0th day
			for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++) {
				days.appendChild(createDay("", new Date(self.currentYear, self.currentMonth, dayNumber), dayNumber));
			}

			// append days from the next month
			for (var dayNum = daysInMonth + 1; dayNum <= 42 - self.firstOfMonth; dayNum++) {
				days.appendChild(createDay("nextMonthDay", new Date(self.currentYear, self.currentMonth + 1, dayNum % daysInMonth), dayNum));
			}

			self.days.appendChild(days);
			return self.days;
		}

		function buildMonthNav() {
			var monthNavFragment = window.document.createDocumentFragment();
			self.monthNav = createElement("div", "flatpickr-month");

			self.prevMonthNav = createElement("span", "flatpickr-prev-month");
			self.prevMonthNav.innerHTML = self.config.prevArrow;

			self.currentMonthElement = createElement("span", "cur-month");

			var yearInput = createNumberInput("cur-year");
			self.currentYearElement = yearInput.childNodes[0];
			self.currentYearElement.title = self.l10n.scrollTitle;

			if (self.config.minDate) self.currentYearElement.min = self.config.minDate.getFullYear();

			if (self.config.maxDate) {
				self.currentYearElement.max = self.config.maxDate.getFullYear();

				self.currentYearElement.disabled = self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();
			}

			self.nextMonthNav = createElement("span", "flatpickr-next-month");
			self.nextMonthNav.innerHTML = self.config.nextArrow;

			self.navigationCurrentMonth = createElement("span", "flatpickr-current-month");
			self.navigationCurrentMonth.appendChild(self.currentMonthElement);
			self.navigationCurrentMonth.appendChild(yearInput);

			monthNavFragment.appendChild(self.prevMonthNav);
			monthNavFragment.appendChild(self.navigationCurrentMonth);
			monthNavFragment.appendChild(self.nextMonthNav);
			self.monthNav.appendChild(monthNavFragment);

			updateNavigationCurrentMonth();

			return self.monthNav;
		}

		function buildTime() {
			self.calendarContainer.classList.add("hasTime");
			if (self.config.noCalendar) self.calendarContainer.classList.add("noCalendar");
			self.timeContainer = createElement("div", "flatpickr-time");
			self.timeContainer.tabIndex = -1;
			var separator = createElement("span", "flatpickr-time-separator", ":");

			var hourInput = createNumberInput("flatpickr-hour");
			self.hourElement = hourInput.childNodes[0];

			var minuteInput = createNumberInput("flatpickr-minute");
			self.minuteElement = minuteInput.childNodes[0];

			self.hourElement.tabIndex = self.minuteElement.tabIndex = 0;
			self.hourElement.pattern = self.minuteElement.pattern = "\\d*";

			self.hourElement.value = self.pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.defaultHour);

			self.minuteElement.value = self.pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : self.config.defaultMinute);

			self.hourElement.step = self.config.hourIncrement;
			self.minuteElement.step = self.config.minuteIncrement;

			self.hourElement.min = self.config.time_24hr ? 0 : 1;
			self.hourElement.max = self.config.time_24hr ? 23 : 12;

			self.minuteElement.min = 0;
			self.minuteElement.max = 59;

			self.hourElement.title = self.minuteElement.title = self.l10n.scrollTitle;

			self.timeContainer.appendChild(hourInput);
			self.timeContainer.appendChild(separator);
			self.timeContainer.appendChild(minuteInput);

			if (self.config.time_24hr) self.timeContainer.classList.add("time24hr");

			if (self.config.enableSeconds) {
				self.timeContainer.classList.add("hasSeconds");

				var secondInput = createNumberInput("flatpickr-second");
				self.secondElement = secondInput.childNodes[0];

				self.secondElement.pattern = self.hourElement.pattern;
				self.secondElement.value = self.latestSelectedDateObj ? self.pad(self.latestSelectedDateObj.getSeconds()) : "00";

				self.secondElement.step = self.minuteElement.step;
				self.secondElement.min = self.minuteElement.min;
				self.secondElement.max = self.minuteElement.max;

				self.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
				self.timeContainer.appendChild(secondInput);
			}

			if (!self.config.time_24hr) {
				// add self.amPM if appropriate
				self.amPM = createElement("span", "flatpickr-am-pm", ["AM", "PM"][self.hourElement.value > 11 | 0]);
				self.amPM.title = self.l10n.toggleTitle;
				self.amPM.tabIndex = 0;
				self.timeContainer.appendChild(self.amPM);
			}

			return self.timeContainer;
		}

		function buildWeekdays() {
			if (!self.weekdayContainer) self.weekdayContainer = createElement("div", "flatpickr-weekdays");

			var firstDayOfWeek = self.l10n.firstDayOfWeek;
			var weekdays = self.l10n.weekdays.shorthand.slice();

			if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
				weekdays = [].concat(weekdays.splice(firstDayOfWeek, weekdays.length), weekdays.splice(0, firstDayOfWeek));
			}

			self.weekdayContainer.innerHTML = "\n\t\t<span class=flatpickr-weekday>\n\t\t\t" + weekdays.join("</span><span class=flatpickr-weekday>") + "\n\t\t</span>\n\t\t";

			return self.weekdayContainer;
		}

		/* istanbul ignore next */
		function buildWeeks() {
			self.calendarContainer.classList.add("hasWeeks");
			self.weekWrapper = createElement("div", "flatpickr-weekwrapper");
			self.weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self.l10n.weekAbbreviation));
			self.weekNumbers = createElement("div", "flatpickr-weeks");
			self.weekWrapper.appendChild(self.weekNumbers);

			return self.weekWrapper;
		}

		function changeMonth(value, is_offset) {
			self.currentMonth = typeof is_offset === "undefined" || is_offset ? self.currentMonth + value : value;

			handleYearChange();
			updateNavigationCurrentMonth();
			buildDays();

			if (!self.config.noCalendar) self.days.focus();

			triggerEvent("MonthChange");
		}

		function clear(triggerChangeEvent) {
			self.input.value = "";

			if (self.altInput) self.altInput.value = "";

			if (self.mobileInput) self.mobileInput.value = "";

			self.selectedDates = [];
			self.latestSelectedDateObj = null;
			self.dateIsPicked = false;

			self.redraw();

			if (triggerChangeEvent !== false)
				// triggerChangeEvent is true (default) or an Event
				triggerEvent("Change");
		}

		function close() {
			self.isOpen = false;

			if (!self.isMobile) {
				self.calendarContainer.classList.remove("open");
				(self.altInput || self.input).classList.remove("active");
			}

			triggerEvent("Close");
		}

		function destroy(instance) {
			instance = instance || self;
			instance.clear(false);

			window.document.removeEventListener("keydown", onKeyDown);
			window.removeEventListener("resize", instance.debouncedResize);

			window.document.removeEventListener("click", documentClick);
			window.document.removeEventListener("touchstart", documentClick);
			window.document.removeEventListener("blur", documentClick);

			if (instance.timeContainer) instance.timeContainer.removeEventListener("transitionend", positionCalendar);

			if (instance.mobileInput && instance.mobileInput.parentNode) instance.mobileInput.parentNode.removeChild(instance.mobileInput);else if (instance.calendarContainer && instance.calendarContainer.parentNode) instance.calendarContainer.parentNode.removeChild(instance.calendarContainer);

			if (instance.altInput) {
				instance.input.type = "text";
				if (instance.altInput.parentNode) instance.altInput.parentNode.removeChild(instance.altInput);
			}

			instance.input.type = instance.input._type;
			instance.input.classList.remove("flatpickr-input");
			instance.input.removeEventListener("focus", open);
			instance.input.removeAttribute("readonly");

			delete instance.input._flatpickr;
		}

		function isCalendarElem(elem) {
			var e = elem;
			while (e) {
				if (/flatpickr-day|flatpickr-calendar/.test(e.className)) return true;
				e = e.parentNode;
			}

			return false;
		}

		function documentClick(e) {
			var isInput = self.element.contains(e.target) || e.target === self.input || e.target === self.altInput || e.path && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));

			if (self.isOpen && !self.config.inline && !isCalendarElem(e.target) && !isInput) {
				e.preventDefault();
				self.close();

				if (self.config.mode === "range" && self.selectedDates.length === 1) {
					self.clear();
					self.redraw();
				}
			}
		}

		function formatDate(frmt, dateObj) {
			if (self.config.formatDate) return self.config.formatDate(frmt, dateObj);

			var chars = frmt.split("");
			return chars.map(function (c, i) {
				return self.formats[c] && chars[i - 1] !== "\\" ? self.formats[c](dateObj) : c !== "\\" ? c : "";
			}).join("");
		}

		function handleYearChange(newYear) {
			if (self.currentMonth < 0 || self.currentMonth > 11) {
				self.currentYear += self.currentMonth % 11;
				self.currentMonth = (self.currentMonth + 12) % 12;

				triggerEvent("YearChange");
			} else if (newYear && (!self.currentYearElement.min || newYear >= self.currentYearElement.min) && (!self.currentYearElement.max || newYear <= self.currentYearElement.max)) {
				self.currentYear = parseInt(newYear, 10) || self.currentYear;

				if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) {
					self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);
				} else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) {
					self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);
				}

				self.redraw();
				triggerEvent("YearChange");
			}
		}

		function isEnabled(date, timeless) {
			var ltmin = compareDates(date, self.config.minDate, typeof timeless !== "undefined" ? timeless : !self.minDateHasTime) < 0;
			var gtmax = compareDates(date, self.config.maxDate, typeof timeless !== "undefined" ? timeless : !self.maxDateHasTime) > 0;

			if (ltmin || gtmax) return false;

			if (!self.config.enable.length && !self.config.disable.length) return true;

			var dateToCheck = self.parseDate(date, true); // timeless

			var bool = self.config.enable.length > 0,
			    array = bool ? self.config.enable : self.config.disable;

			for (var i = 0, d; i < array.length; i++) {
				d = array[i];

				if (d instanceof Function && d(dateToCheck)) // disabled by function
					return bool;else if (d instanceof Date && d.getTime() === dateToCheck.getTime())
					// disabled by date string
					return bool;else if ( // disabled by range
				(typeof d === "undefined" ? "undefined" : _typeof(d)) === "object" && d.from && d.to && dateToCheck >= d.from && dateToCheck <= d.to) return bool;
			}

			return !bool;
		}

		function onKeyDown(e) {
			if (self.isOpen) {
				switch (e.which) {
					case 13:
						if (self.timeContainer && self.timeContainer.contains(e.target)) updateValue();else selectDate(e);

						break;

					case 27:
						// escape
						self.clear();
						self.redraw();
						self.close();
						break;

					case 37:
						if (e.target !== self.input & e.target !== self.altInput) changeMonth(-1);
						break;

					case 38:
						e.preventDefault();

						if (self.timeContainer && self.timeContainer.contains(e.target)) updateTime(e);else {
							self.currentYear++;
							self.redraw();
						}

						break;

					case 39:
						if (e.target !== self.input & e.target !== self.altInput) changeMonth(1);
						break;

					case 40:
						e.preventDefault();
						if (self.timeContainer && self.timeContainer.contains(e.target)) updateTime(e);else {
							self.currentYear--;
							self.redraw();
						}

						break;

					default:
						break;
				}
			}
		}

		function onMouseOver(e) {
			if (self.selectedDates.length !== 1 || !e.target.classList.contains("flatpickr-day")) return;

			var hoverDate = e.target.dateObj,
			    initialDate = self.parseDate(self.selectedDates[0], true),
			    rangeStartDate = Math.min(hoverDate.getTime(), self.selectedDates[0].getTime()),
			    rangeEndDate = Math.max(hoverDate.getTime(), self.selectedDates[0].getTime()),
			    containsDisabled = false;

			for (var t = rangeStartDate; t < rangeEndDate; t += self.utils.duration.DAY) {
				if (!isEnabled(new Date(t))) {
					containsDisabled = true;
					break;
				}
			}

			for (var timestamp = self.days.childNodes[0].dateObj.getTime(), i = 0; i < 42; i++, timestamp += self.utils.duration.DAY) {
				var outOfRange = timestamp < self.minRangeDate.getTime() || timestamp > self.maxRangeDate.getTime();

				if (outOfRange) {
					self.days.childNodes[i].classList.add("notAllowed");
					self.days.childNodes[i].classList.remove("inRange", "startRange", "endRange");
					continue;
				} else if (containsDisabled && !outOfRange) continue;

				self.days.childNodes[i].classList.remove("startRange", "inRange", "endRange", "notAllowed");

				var minRangeDate = Math.max(self.minRangeDate.getTime(), rangeStartDate),
				    maxRangeDate = Math.min(self.maxRangeDate.getTime(), rangeEndDate);

				e.target.classList.add(hoverDate < self.selectedDates[0] ? "startRange" : "endRange");

				if (initialDate > hoverDate && timestamp === initialDate.getTime()) self.days.childNodes[i].classList.add("endRange");else if (initialDate < hoverDate && timestamp === initialDate.getTime()) self.days.childNodes[i].classList.add("startRange");else if (timestamp > minRangeDate && timestamp < maxRangeDate) self.days.childNodes[i].classList.add("inRange");
			}
		}

		function onResize() {
			if (self.isOpen && !self.config.static && !self.config.inline) positionCalendar();
		}

		function open(e) {
			if (self.isMobile) {
				if (e) {
					e.preventDefault();
					e.target.blur();
				}

				setTimeout(function () {
					self.mobileInput.click();
				}, 0);

				triggerEvent("Open");
				return;
			} else if (self.isOpen || (self.altInput || self.input).disabled || self.config.inline) return;

			self.calendarContainer.classList.add("open");

			if (!self.config.static && !self.config.inline) positionCalendar();

			self.isOpen = true;

			if (!self.config.allowInput) {
				(self.altInput || self.input).blur();
				(self.config.noCalendar ? self.timeContainer : self.selectedDateElem ? self.selectedDateElem : self.days).focus();
			}

			(self.altInput || self.input).classList.add("active");
			triggerEvent("Open");
		}

		function minMaxDateSetter(type) {
			return function (date) {
				var dateObj = self.config["_" + type + "Date"] = self.parseDate(date);
				var inverseDateObj = self.config["_" + (type === "min" ? "max" : "min") + "Date"];

				if (self.selectedDates) {
					self.selectedDates = self.selectedDates.filter(isEnabled);
					updateValue();
				}

				if (self.days) redraw();

				if (!self.currentYearElement) return;

				if (date && dateObj instanceof Date) {
					self[type + "DateHasTime"] = dateObj.getHours() || dateObj.getMinutes() || dateObj.getSeconds();

					self.currentYearElement[type] = dateObj.getFullYear();
				} else self.currentYearElement.removeAttribute(type);

				self.currentYearElement.disabled = inverseDateObj && dateObj && inverseDateObj.getFullYear() === dateObj.getFullYear();
			};
		}

		function parseConfig() {
			var boolOpts = ["utc", "wrap", "weekNumbers", "allowInput", "clickOpens", "time_24hr", "enableTime", "noCalendar", "altInput", "shorthandCurrentMonth", "inline", "static", "enableSeconds", "disableMobile"];
			self.config = Object.create(Flatpickr.defaultConfig);

			Object.defineProperty(self.config, "minDate", {
				get: function get() {
					return this._minDate;
				},
				set: minMaxDateSetter("min")
			});

			Object.defineProperty(self.config, "maxDate", {
				get: function get() {
					return this._maxDate;
				},
				set: minMaxDateSetter("max")
			});

			var userConfig = _extends({}, self.instanceConfig, JSON.parse(JSON.stringify(self.element.dataset || {})));

			_extends(self.config, userConfig);

			for (var i = 0; i < boolOpts.length; i++) {
				self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === "true";
			}if (!userConfig.dateFormat && userConfig.enableTime) {
				self.config.dateFormat = self.config.noCalendar ? "H:i" + (self.config.enableSeconds ? ":S" : "") : Flatpickr.defaultConfig.dateFormat + " H:i" + (self.config.enableSeconds ? ":S" : "");
			}

			if (userConfig.altInput && userConfig.enableTime && !userConfig.altFormat) {
				self.config.altFormat = self.config.noCalendar ? "h:i" + (self.config.enableSeconds ? ":S K" : " K") : Flatpickr.defaultConfig.altFormat + (" h:i" + (self.config.enableSeconds ? ":S" : "") + " K");
			}
		}

		function setupLocale() {
			if (_typeof(self.config.locale) !== "object" && typeof Flatpickr.l10ns[self.config.locale] === "undefined") console.warn("flatpickr: invalid locale " + self.config.locale);

			self.l10n = _extends(Object.create(Flatpickr.l10ns.default), _typeof(self.config.locale) === "object" ? self.config.locale : self.config.locale !== "default" ? Flatpickr.l10ns[self.config.locale] || {} : {});
		}

		function positionCalendar(e) {
			if (e && e.target !== self.timeContainer) return;

			var calendarHeight = self.calendarContainer.offsetHeight,
			    calendarWidth = self.calendarContainer.offsetWidth,
			    input = self.altInput || self.input,
			    inputBounds = input.getBoundingClientRect(),
			    distanceFromBottom = window.innerHeight - inputBounds.bottom + input.offsetHeight;

			var top = void 0;

			if (distanceFromBottom < calendarHeight + 60) {
				top = window.pageYOffset - calendarHeight + inputBounds.top - 2;
				self.calendarContainer.classList.remove("arrowTop");
				self.calendarContainer.classList.add("arrowBottom");
			} else {
				top = window.pageYOffset + input.offsetHeight + inputBounds.top + 2;
				self.calendarContainer.classList.remove("arrowBottom");
				self.calendarContainer.classList.add("arrowTop");
			}

			if (!self.config.static && !self.config.inline) {
				self.calendarContainer.style.top = top + "px";

				var left = window.pageXOffset + inputBounds.left;
				var right = window.document.body.offsetWidth - inputBounds.right;

				if (left + calendarWidth <= window.document.body.offsetWidth) {
					self.calendarContainer.style.left = left + "px";
					self.calendarContainer.style.right = "auto";

					self.calendarContainer.classList.remove("rightMost");
				} else {
					self.calendarContainer.style.left = "auto";
					self.calendarContainer.style.right = right + "px";

					self.calendarContainer.classList.add("rightMost");
				}
			}
		}

		function redraw() {
			if (self.config.noCalendar || self.isMobile) return;

			buildWeekdays();
			updateNavigationCurrentMonth();
			buildDays();
		}

		function selectDate(e) {
			e.preventDefault();
			if (self.config.allowInput && e.which === 13 && e.target === (self.altInput || self.input)) return self.setDate((self.altInput || self.input).value), e.target.blur();

			if (!e.target.classList.contains("flatpickr-day") || e.target.classList.contains("disabled") || e.target.classList.contains("notAllowed")) return;

			var selectedDate = self.latestSelectedDateObj = new Date(e.target.dateObj.getTime());

			self.selectedDateElem = e.target;

			if (self.config.mode === "single") self.selectedDates = [selectedDate];else if (self.config.mode === "multiple") {
				var selectedIndex = isDateSelected(selectedDate);
				if (selectedIndex) self.selectedDates.splice(selectedIndex, 1);else self.selectedDates.push(selectedDate);
			} else if (self.config.mode === "range") {
				if (self.selectedDates.length === 2) self.clear();

				self.selectedDates.push(selectedDate);
				self.selectedDates.sort(function (a, b) {
					return a.getTime() - b.getTime();
				});
			}

			setHoursFromInputs();

			if (selectedDate.getMonth() !== self.currentMonth && self.config.mode !== "range") {
				self.currentYear = selectedDate.getFullYear();
				self.currentMonth = selectedDate.getMonth();
				updateNavigationCurrentMonth();
			}

			buildDays();

			if (self.minDateHasTime && self.config.enableTime && compareDates(selectedDate, self.config.minDate) === 0) setHoursFromDate(self.config.minDate);

			updateValue();

			setTimeout(function () {
				return self.dateIsPicked = true;
			}, 50);

			if (self.config.mode === "range" && self.selectedDates.length === 1) onMouseOver(e);

			if (self.config.mode === "single" && !self.config.enableTime) self.close();

			triggerEvent("Change");
		}

		function set(option, value) {
			self.config[option] = value;
			self.redraw();
			jumpToDate();
		}

		function setDate(date, triggerChange) {
			if (!date) return self.clear();

			self.selectedDates = (Array.isArray(date) ? date.map(self.parseDate) : [self.parseDate(date)]).filter(function (d) {
				return d instanceof Date && isEnabled(d);
			});

			if (self.selectedDates.length > 0) {
				self.dateIsPicked = true;
				self.latestSelectedDateObj = self.selectedDates[0];
			} else self.latestSelectedDateObj = null;

			self.redraw();
			jumpToDate();

			setHoursFromDate();
			updateValue();

			if (triggerChange === true) triggerEvent("Change");
		}

		function setupDates() {
			function parseDateRules(arr) {
				for (var i = arr.length; i--;) {
					if (typeof arr[i] === "string" || +arr[i]) arr[i] = self.parseDate(arr[i], true);else if (arr[i] && arr[i].from && arr[i].to) {
						arr[i].from = self.parseDate(arr[i].from);
						arr[i].to = self.parseDate(arr[i].to);
					}
				}

				return arr.filter(function (x) {
					return x;
				}); // remove falsy values
			}

			self.selectedDates = [];
			self.now = new Date();
			var inputDate = self.config.defaultDate || self.input.value;

			if (Array.isArray(inputDate)) self.selectedDates = inputDate.map(self.parseDate);else if (inputDate) {
				switch (self.config.mode) {
					case "single":
						self.selectedDates = [self.parseDate(inputDate)];
						break;

					case "multiple":
						self.selectedDates = inputDate.split("; ").map(self.parseDate);
						break;

					case "range":
						self.selectedDates = inputDate.split(self.l10n.rangeSeparator).map(self.parseDate);
						break;

					default:
						break;
				}
			}

			if (self.config.disable.length) self.config.disable = parseDateRules(self.config.disable);

			if (self.config.enable.length) self.config.enable = parseDateRules(self.config.enable);

			self.selectedDates = self.selectedDates.filter(function (d) {
				return d instanceof Date && d.getTime() && isEnabled(d, false);
			});

			self.selectedDates.sort(function (a, b) {
				return a.getTime() - b.getTime();
			});

			var initialDate = self.selectedDates.length ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now ? self.config.maxDate : self.now;

			self.currentYear = initialDate.getFullYear();
			self.currentMonth = initialDate.getMonth();

			if (self.selectedDates.length) self.latestSelectedDateObj = self.selectedDates[0];

			self.minDateHasTime = self.config.minDate && (self.config.minDate.getHours() || self.config.minDate.getMinutes() || self.config.minDate.getSeconds());

			self.maxDateHasTime = self.config.maxDate && (self.config.maxDate.getHours() || self.config.maxDate.getMinutes() || self.config.maxDate.getSeconds());

			Object.defineProperty(self, "latestSelectedDateObj", {
				get: function get() {
					return self._selectedDateObj || self.selectedDates[self.selectedDates.length - 1] || null;
				},
				set: function set(date) {
					self._selectedDateObj = date;
				}
			});
		}

		function setupHelperFunctions() {
			self.utils = {
				duration: {
					DAY: 86400000
				},
				getDaysinMonth: function getDaysinMonth(month, yr) {
					month = typeof month === "undefined" ? self.currentMonth : month;

					yr = typeof yr === "undefined" ? self.currentYear : yr;

					if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0)) return 29;

					return self.l10n.daysInMonth[month];
				},
				monthToStr: function monthToStr(monthNumber, shorthand) {
					shorthand = typeof shorthand === "undefined" ? self.config.shorthandCurrentMonth : shorthand;

					return self.l10n.months[(shorthand ? "short" : "long") + "hand"][monthNumber];
				}
			};
		}

		/* istanbul ignore next */
		function setupFormats() {
			self.formats = {
				// weekday name, short, e.g. Thu
				D: function D(date) {
					return self.l10n.weekdays.shorthand[self.formats.w(date)];
				},

				// full month name e.g. January
				F: function F(date) {
					return self.utils.monthToStr(self.formats.n(date) - 1, false);
				},

				// hours with leading zero e.g. 03
				H: function H(date) {
					return Flatpickr.prototype.pad(date.getHours());
				},

				// day (1-30) with ordinal suffix e.g. 1st, 2nd
				J: function J(date) {
					return date.getDate() + self.l10n.ordinal(date.getDate());
				},

				// AM/PM
				K: function K(date) {
					return date.getHours() > 11 ? "PM" : "AM";
				},

				// shorthand month e.g. Jan, Sep, Oct, etc
				M: function M(date) {
					return self.utils.monthToStr(date.getMonth(), true);
				},

				// seconds 00-59
				S: function S(date) {
					return Flatpickr.prototype.pad(date.getSeconds());
				},

				// unix timestamp
				U: function U(date) {
					return date.getTime() / 1000;
				},

				// full year e.g. 2016
				Y: function Y(date) {
					return date.getFullYear();
				},

				// day in month, padded (01-30)
				d: function d(date) {
					return Flatpickr.prototype.pad(self.formats.j(date));
				},

				// hour from 1-12 (am/pm)
				h: function h(date) {
					return date.getHours() % 12 ? date.getHours() % 12 : 12;
				},

				// minutes, padded with leading zero e.g. 09
				i: function i(date) {
					return Flatpickr.prototype.pad(date.getMinutes());
				},

				// day in month (1-30)
				j: function j(date) {
					return date.getDate();
				},

				// weekday name, full, e.g. Thursday
				l: function l(date) {
					return self.l10n.weekdays.longhand[self.formats.w(date)];
				},

				// padded month number (01-12)
				m: function m(date) {
					return Flatpickr.prototype.pad(self.formats.n(date));
				},

				// the month number (1-12)
				n: function n(date) {
					return date.getMonth() + 1;
				},

				// seconds 0-59
				s: function s(date) {
					return date.getSeconds();
				},

				// number of the day of the week
				w: function w(date) {
					return date.getDay();
				},

				// last two digits of year e.g. 16 for 2016
				y: function y(date) {
					return String(self.formats.Y(date)).substring(2);
				}
			};
		}

		function setupInputs() {
			self.input = self.config.wrap ? self.element.querySelector("[data-input]") : self.element;

			if (!self.input) return console.warn("Error: invalid input element specified", self.input);

			self.input._type = self.input.type;
			self.input.type = "text";
			self.input.classList.add("flatpickr-input");

			if (self.config.altInput) {
				// replicate self.element
				self.altInput = createElement(self.input.nodeName, self.input.className + " " + self.config.altInputClass);
				self.altInput.placeholder = self.input.placeholder;
				self.altInput.type = "text";

				self.input.type = "hidden";
				if (self.input.parentNode) self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);
			}

			if (!self.config.allowInput) (self.altInput || self.input).setAttribute("readonly", "readonly");
		}

		function setupMobile() {
			var inputType = self.config.enableTime ? self.config.noCalendar ? "time" : "datetime-local" : "date";

			self.mobileInput = createElement("input", self.input.className + " flatpickr-mobile");
			self.mobileInput.step = "any";
			self.mobileInput.tabIndex = 1;
			self.mobileInput.type = inputType;
			self.mobileInput.disabled = self.input.disabled;

			self.mobileFormatStr = inputType === "datetime-local" ? "Y-m-d\\TH:i:S" : inputType === "date" ? "Y-m-d" : "H:i:S";

			if (self.selectedDates.length) {
				self.mobileInput.defaultValue = self.mobileInput.value = formatDate(self.mobileFormatStr, self.selectedDates[0]);
			}

			if (self.config.minDate) self.mobileInput.min = formatDate("Y-m-d", self.config.minDate);

			if (self.config.maxDate) self.mobileInput.max = formatDate("Y-m-d", self.config.maxDate);

			self.input.type = "hidden";
			if (self.config.altInput) self.altInput.type = "hidden";

			try {
				self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);
			} catch (e) {
				//
			}

			self.mobileInput.addEventListener("change", function (e) {
				self.latestSelectedDateObj = self.parseDate(e.target.value);
				self.setDate(self.latestSelectedDateObj);
				triggerEvent("Change");
				triggerEvent("Close");
			});
		}

		function toggle() {
			if (self.isOpen) self.close();else self.open();
		}

		function triggerEvent(event, data) {
			if (self.config["on" + event]) {
				var hooks = Array.isArray(self.config["on" + event]) ? self.config["on" + event] : [self.config["on" + event]];

				for (var i = 0; i < hooks.length; i++) {
					hooks[i](self.selectedDates, self.input.value, self, data);
				}
			}

			if (event === "Change") {
				try {
					self.input.dispatchEvent(new Event("change", { "bubbles": true }));

					// many front-end frameworks bind to the input event
					self.input.dispatchEvent(new Event("input", { "bubbles": true }));
				} catch (e) {
					if (window.document.createEvent !== undefined) return self.input.dispatchEvent(self.changeEvent);

					self.input.fireEvent("onchange");
				}
			}
		}

		function isDateSelected(date) {
			for (var i = 0; i < self.selectedDates.length; i++) {
				if (compareDates(self.selectedDates[i], date) === 0) return "" + i;
			}

			return false;
		}

		function isDateInRange(date) {
			if (self.config.mode !== "range" || self.selectedDates.length < 2) return false;
			return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;
		}

		function updateNavigationCurrentMonth() {
			if (self.config.noCalendar || self.isMobile || !self.monthNav) return;

			self.currentMonthElement.textContent = self.utils.monthToStr(self.currentMonth) + " ";
			self.currentYearElement.value = self.currentYear;

			if (self.config.minDate) {
				var hidePrevMonthArrow = self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear();

				self.prevMonthNav.style.display = hidePrevMonthArrow ? "none" : "block";
			} else self.prevMonthNav.style.display = "block";

			if (self.config.maxDate) {
				var hideNextMonthArrow = self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear();

				self.nextMonthNav.style.display = hideNextMonthArrow ? "none" : "block";
			} else self.nextMonthNav.style.display = "block";
		}

		function updateValue() {
			if (!self.selectedDates.length) return self.clear();

			if (self.isMobile) {
				self.mobileInput.value = self.selectedDates.length ? formatDate(self.mobileFormatStr, self.latestSelectedDateObj) : "";
			}

			var joinChar = self.config.mode !== "range" ? "; " : self.l10n.rangeSeparator;

			self.input.value = self.selectedDates.map(function (dObj) {
				return formatDate(self.config.dateFormat, dObj);
			}).join(joinChar);

			if (self.config.altInput) {
				self.altInput.value = self.selectedDates.map(function (dObj) {
					return formatDate(self.config.altFormat, dObj);
				}).join(joinChar);
			}

			triggerEvent("ValueUpdate");
		}

		function yearScroll(e) {
			e.preventDefault();

			var delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.deltaY)),
			    newYear = parseInt(e.target.value, 10) + delta;

			handleYearChange(newYear);
			e.target.value = self.currentYear;
		}

		function createElement(tag, className, content) {
			var e = window.document.createElement(tag);
			className = className || "";
			content = content || "";

			e.className = className;

			if (content) e.textContent = content;

			return e;
		}

		/* istanbul ignore next */
		function debounce(func, wait, immediate) {
			var timeout = void 0;
			return function () {
				for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
					args[_key] = arguments[_key];
				}

				var context = this;
				var later = function later() {
					timeout = null;
					if (!immediate) func.apply(context, args);
				};

				clearTimeout(timeout);
				timeout = setTimeout(later, wait);
				if (immediate && !timeout) func.apply(context, args);
			};
		}

		function compareDates(date1, date2, timeless) {
			if (!(date1 instanceof Date) || !(date2 instanceof Date)) return false;

			if (timeless !== false) {
				return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);
			}

			return date1.getTime() - date2.getTime();
		}

		function timeWrapper(e) {
			e.preventDefault();
			if (e && ((e.target.value || e.target.textContent).length >= 2 || // typed two digits
			e.type !== "keydown" && e.type !== "input" // scroll event
			)) e.target.blur();

			if (self.amPM && e.target === self.amPM) return e.target.textContent = ["AM", "PM"][e.target.textContent === "AM" | 0];

			var min = Number(e.target.min),
			    max = Number(e.target.max),
			    step = Number(e.target.step),
			    curValue = parseInt(e.target.value, 10),
			    delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.deltaY));

			var newValue = Number(curValue);

			switch (e.type) {
				case "wheel":
					newValue = curValue + step * delta;
					break;

				case "keydown":
					newValue = curValue + step * (e.which === 38 ? 1 : -1);
					break;
			}

			if (e.type !== "input" || e.target.value.length === 2) {
				if (newValue < min) {
					newValue = max + newValue + (e.target !== self.hourElement) + (e.target === self.hourElement && !self.amPM);
				} else if (newValue > max) {
					newValue = e.target === self.hourElement ? newValue - max - !self.amPM : min;
				}

				if (self.amPM && e.target === self.hourElement && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) self.amPM.textContent = self.amPM.textContent === "PM" ? "AM" : "PM";

				e.target.value = self.pad(newValue);
			} else e.target.value = newValue;
		}

		init();
		return self;
	}

	/* istanbul ignore next */
	Flatpickr.defaultConfig = {

		mode: "single",

		/* if true, dates will be parsed, formatted, and displayed in UTC.
	 preloading date strings w/ timezones is recommended but not necessary */
		utc: false,

		// wrap: see https://chmln.github.io/flatpickr/#strap
		wrap: false,

		// enables week numbers
		weekNumbers: false,

		// allow manual datetime input
		allowInput: false,

		/*
	 	clicking on input opens the date(time)picker.
	 	disable if you wish to open the calendar manually with .open()
	 */
		clickOpens: true,

		// display time picker in 24 hour mode
		time_24hr: false,

		// enables the time picker functionality
		enableTime: false,

		// noCalendar: true will hide the calendar. use for a time picker along w/ enableTime
		noCalendar: false,

		// more date format chars at https://chmln.github.io/flatpickr/#dateformat
		dateFormat: "Y-m-d",

		// altInput - see https://chmln.github.io/flatpickr/#altinput
		altInput: false,

		// the created altInput element will have this class.
		altInputClass: "flatpickr-input form-control input",

		// same as dateFormat, but for altInput
		altFormat: "F j, Y", // defaults to e.g. June 10, 2016

		// defaultDate - either a datestring or a date object. used for datetimepicker"s initial value
		defaultDate: null,

		// the minimum date that user can pick (inclusive)
		minDate: null,

		// the maximum date that user can pick (inclusive)
		maxDate: null,

		// dateparser that transforms a given string to a date object
		parseDate: null,

		// dateformatter that transforms a given date object to a string, according to passed format
		formatDate: null,

		getWeek: function getWeek(givenDate) {
			var date = new Date(givenDate.getTime());
			date.setHours(0, 0, 0, 0);

			// Thursday in current week decides the year.
			date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
			// January 4 is always in week 1.
			var week1 = new Date(date.getFullYear(), 0, 4);
			// Adjust to Thursday in week 1 and count number of weeks from date to week1.
			return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
		},

		// see https://chmln.github.io/flatpickr/#disable
		enable: [],

		// see https://chmln.github.io/flatpickr/#disable
		disable: [],

		// display the short version of month names - e.g. Sep instead of September
		shorthandCurrentMonth: false,

		// displays calendar inline. see https://chmln.github.io/flatpickr/#inline-calendar
		inline: false,

		// position calendar inside wrapper and next to the input element
		// leave at false unless you know what you"re doing
		static: false,

		// DOM node to append the calendar to in *static* mode
		appendTo: null,

		// code for previous/next icons. this is where you put your custom icon code e.g. fontawesome
		prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
		nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",

		// enables seconds in the time picker
		enableSeconds: false,

		// step size used when scrolling/incrementing the hour element
		hourIncrement: 1,

		// step size used when scrolling/incrementing the minute element
		minuteIncrement: 5,

		// initial value in the hour element
		defaultHour: 12,

		// initial value in the minute element
		defaultMinute: 0,

		// disable native mobile datetime input support
		disableMobile: false,

		// default locale
		locale: "default",

		// onChange callback when user selects a date or time
		onChange: null, // function (dateObj, dateStr) {}

		// called every time calendar is opened
		onOpen: null, // function (dateObj, dateStr) {}

		// called every time calendar is closed
		onClose: null, // function (dateObj, dateStr) {}

		// called after calendar is ready
		onReady: null, // function (dateObj, dateStr) {}

		onValueUpdate: null,

		onDayCreate: null
	};

	/* istanbul ignore next */
	Flatpickr.l10ns = {
		en: {
			weekdays: {
				shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
				longhand: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
			},
			months: {
				shorthand: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
				longhand: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
			},
			daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
			firstDayOfWeek: 0,
			ordinal: function ordinal(nth) {
				var s = nth % 100;
				if (s > 3 && s < 21) return "th";
				switch (s % 10) {
					case 1:
						return "st";
					case 2:
						return "nd";
					case 3:
						return "rd";
					default:
						return "th";
				}
			},
			rangeSeparator: " to ",
			weekAbbreviation: "Wk",
			scrollTitle: "Scroll to increment",
			toggleTitle: "Click to toggle"
		}
	};

	Flatpickr.l10ns.default = Object.create(Flatpickr.l10ns.en);
	Flatpickr.localize = function (l10n) {
		return _extends(Flatpickr.l10ns.default, l10n || {});
	};
	Flatpickr.setDefaults = function (config) {
		return _extends(Flatpickr.defaultConfig, config || {});
	};

	Flatpickr.prototype = {
		pad: function pad(number) {
			return ("0" + number).slice(-2);
		},
		parseDate: function parseDate(date, timeless) {
			if (!date) return null;

			var dateTimeRegex = /(\d+)/g,
			    timeRegex = /^(\d{1,2})[:\s](\d\d)?[:\s]?(\d\d)?\s?(a|p)?/i,
			    timestamp = /^(\d+)$/g,
			    date_orig = date;

			if (date.toFixed || timestamp.test(date)) // timestamp
				date = new Date(date);else if (typeof date === "string") {
				date = date.trim();

				if (date === "today") {
					date = new Date();
					timeless = true;
				} else if (this.config && this.config.parseDate) date = this.config.parseDate(date);else if (timeRegex.test(date)) {
					// time picker
					var m = date.match(timeRegex),
					    hours = !m[4] ? m[1] // military time, no conversion needed
					: m[1] % 12 + (m[4].toLowerCase() === "p" ? 12 : 0); // am/pm

					date = new Date();
					date.setHours(hours, m[2] || 0, m[3] || 0);
				} else if (/Z$/.test(date) || /GMT$/.test(date)) // datestrings w/ timezone
					date = new Date(date);else if (dateTimeRegex.test(date) && /^[0-9]/.test(date)) {
					var d = date.match(dateTimeRegex);
					date = new Date(d[0] + "/" + (d[1] || 1) + "/" + (d[2] || 1) + " " + (d[3] || 0) + ":" + (d[4] || 0) + ":" + (d[5] || 0));
				} else // fallback
					date = new Date(date);
			} else if (date instanceof Date) date = new Date(date.getTime()); // create a copy

			if (!(date instanceof Date)) {
				console.warn("flatpickr: invalid date " + date_orig);
				console.info(this.element);
				return null;
			}

			if (this.config && this.config.utc && !date.fp_isUTC) date = date.fp_toUTC();

			if (timeless === true) date.setHours(0, 0, 0, 0);

			return date;
		}
	};

	function _flatpickr(nodeList, config) {
		var nodes = Array.prototype.slice.call(nodeList); // static list
		var instances = [];
		for (var i = 0; i < nodes.length; i++) {
			try {
				nodes[i]._flatpickr = new Flatpickr(nodes[i], config || {});
				instances.push(nodes[i]._flatpickr);
			} catch (e) {
				console.warn(e, e.stack);
			}
		}

		return instances.length === 1 ? instances[0] : instances;
	}
	if (typeof HTMLElement !== "undefined") {
		// browser env
		HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {
			return _flatpickr(this, config);
		};

		HTMLElement.prototype.flatpickr = function (config) {
			return _flatpickr([this], config);
		};
	}

	function flatpickr(selector, config) {
		return _flatpickr(window.document.querySelectorAll(selector), config);
	}

	if (typeof jQuery !== "undefined") {
		jQuery.fn.flatpickr = function (config) {
			return _flatpickr(this, config);
		};
	}

	Date.prototype.fp_incr = function (days) {
		return new Date(this.getFullYear(), this.getMonth(), this.getDate() + parseInt(days, 10));
	};

	Date.prototype.fp_isUTC = false;
	Date.prototype.fp_toUTC = function () {
		var newDate = new Date(this.getUTCFullYear(), this.getUTCMonth(), this.getUTCDate(), this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds());

		newDate.fp_isUTC = true;
		return newDate;
	};

	// IE9 classList polyfill
	/* istanbul ignore next */
	if (!window.document.documentElement.classList && Object.defineProperty && typeof HTMLElement !== "undefined") {
		Object.defineProperty(HTMLElement.prototype, "classList", {
			get: function get() {
				var self = this;
				function update(fn) {
					return function (value) {
						var classes = self.className.split(/\s+/),
						    index = classes.indexOf(value);

						fn(classes, index, value);
						self.className = classes.join(" ");
					};
				}

				var ret = {
					add: update(function (classes, index, value) {
						if (!~index) classes.push(value);
					}),

					remove: update(function (classes, index) {
						if (~index) classes.splice(index, 1);
					}),

					toggle: update(function (classes, index, value) {
						if (~index) classes.splice(index, 1);else classes.push(value);
					}),

					contains: function contains(value) {
						return !!~self.className.split(/\s+/).indexOf(value);
					},

					item: function item(i) {
						return self.className.split(/\s+/)[i] || null;
					}
				};

				Object.defineProperty(ret, "length", {
					get: function get() {
						return self.className.split(/\s+/).length;
					}
				});

				return ret;
			}
		});
	}

	if (true) module.exports = Flatpickr;


/***/ },
/* 196 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInteger;
	/**
	 * Check if the passed value is an integer
	 *
	 * @name 		isInteger
	 * @param 		{Mixed} 		value 		The value to check
	 * @return 		{Boolean} 					The check result
	 *
	 * @example 	js
	 * isInteger(10) => true
	 * isInteger('hello') => false
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInteger(data) {
	  return !isNaN(data) && function (x) {
	    return (x | 0) === x;
	  }(parseFloat(data));
	}

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SGoogleMapComponent = __webpack_require__(198);

	var _SGoogleMapComponent2 = _interopRequireDefault(_SGoogleMapComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SGoogleMapComponent2.default.define('s-google-map', _SGoogleMapComponent2.default);

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _coffeekrakenSGoogleMapComponentBase = __webpack_require__(199);

	var _coffeekrakenSGoogleMapComponentBase2 = _interopRequireDefault(_coffeekrakenSGoogleMapComponentBase);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 		SGoogleMapComponent
	 * @extends 	SGoogleMapComponentBase
	 * Provide a nice webcomponent wrapper around the google map api.
	 * @styleguide  	Objects / Google Map
	 * @example 	html
	 * <s-google-map api-key="..." center="{lat: -25.363, lng: 131.044}">
	 * </s-google-map>
	 * @see 	https://www.npmjs.com/package/google-maps
	 * @see 	https://developers.google.com/maps/documentation/javascript/
	 * @author 	Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SGoogleMapComponent = function (_SGoogleMapComponentB) {
		_inherits(SGoogleMapComponent, _SGoogleMapComponentB);

		function SGoogleMapComponent() {
			_classCallCheck(this, SGoogleMapComponent);

			return _possibleConstructorReturn(this, (SGoogleMapComponent.__proto__ || Object.getPrototypeOf(SGoogleMapComponent)).apply(this, arguments));
		}

		_createClass(SGoogleMapComponent, [{
			key: 'shouldAcceptComponentProp',


			/**
	   * Accept all props
	   * @definition 		SWebComponent.shouldAcceptComponentProp
	   * @protected
	   */
			value: function shouldAcceptComponentProp(prop) {
				return true;
			}

			/**
	   * Component will mount
	   * @definition 		SWebComponent.componentWillMount
	   * @protected
	   */

		}, {
			key: 'componentWillMount',
			value: function componentWillMount() {
				_get(SGoogleMapComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapComponent.prototype), 'componentWillMount', this).call(this);
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				_get(SGoogleMapComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapComponent.prototype), 'componentMount', this).call(this);

				// create the map container
				this._mapElm = document.createElement('div');
				this._mapElm.className = this._componentNameDash + '__map';
				this._mapElm.setAttribute('s-google-map-map', true);

				// try to get the placeholder
				this._placeholder = this.querySelector(this._componentNameDash + '-placeholder');

				// manage placeholder
				if (this._placeholder) {
					this._handlePlaceholder();
				} else {
					// init directly
					this._internalInit();
				}

				// append the map elm
				this.appendChild(this._mapElm);
			}

			/**
	   * Component unmount
	   * @definition 		SWebComponent.componentUnmount
	   * @protected
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SGoogleMapComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapComponent.prototype), 'componentUnmount', this).call(this);
			}

			/**
	   * Component will receive prop
	   * @definition 		SWebComponent.componentWillReceiveProp
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProp',
			value: function componentWillReceiveProp(name, newVal, oldVal) {
				console.log('ddd', name, newVal);
				switch (name) {
					case 'skin':
						console.log('coco', name, newVal);
						this._map.setOptions({
							styles: SGoogleMapComponent._registeredSkins[newVal]
						});
						break;
				}
			}

			/**
	   * Component will receive props
	   * @definition 		SWebComponent.componentWillReceiveProps
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps, previousProps) {
				if (!this._map) return;
				this._map.setOptions(nextProps);
			}

			/**
	   * Render the component
	   * Here goes the code that reflect the this.props state on the actual html element
	   * @definition 		SWebComponent.render
	   * @protected
	   */

		}, {
			key: 'render',
			value: function render() {
				_get(SGoogleMapComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapComponent.prototype), 'render', this).call(this);
			}

			/**
	   * Handle the placeholder element
	   */

		}, {
			key: '_handlePlaceholder',
			value: function _handlePlaceholder() {
				// listen to init the map
				this._placeholder.addEventListener(this.props.initOn, this._onPlaceholderInit.bind(this));
			}

			/**
	   * Proxy function of placeholder init listener
	   */

		}, {
			key: '_onPlaceholderInit',
			value: function _onPlaceholderInit() {
				// remove the placeholder
				this._placeholder.parentNode.removeChild(this._placeholder);
				// stop listening for init on placeholder
				this._placeholder.removeEventListener(this.props.initOn, this._onPlaceholderInit);
				// internal init
				this._internalInit();
			}

			/**
	   * Init the map
	   */

		}, {
			key: '_internalInit',
			value: function _internalInit() {
				// init the map
				this._initMap();
			}

			/**
	   * Init the map
	   */

		}, {
			key: '_initMap',
			value: function _initMap() {

				var styles = this.props.styles;
				if (this.props.skin) {
					styles = SGoogleMapComponent._registeredSkins[this.props.skin];
				}

				this._map = new this._google.maps.Map(this._mapElm, _extends({}, this.props, {
					styles: styles
				}));
				// set the component as inited
				// used by the markers to init when the map is ok
				this.setAttribute('inited', true);
			}

			/**
	   * Access the google map instance
	   * @name 	map
	   * @type 	{Google.Map} 	The google map instance
	   */

		}, {
			key: 'map',
			get: function get() {
				return this._map;
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   * @protected
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: relative;\n\t\t\t\tmin-height: 50px;\n\t\t\t}\n\t\t\t.' + componentNameDash + '__map {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0; left: 0;\n\t\t\t\twidth: 100%; height: 100%;\n\t\t\t}\n\t\t\t.' + componentNameDash + '__placeholder {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tcursor: pointer;\n\t\t\t\tz-index: 1;\n\t\t\t}\n\t\t';
			}

			/**
	   * Register a map style to use later through the "style" property
	   * @param 		{String} 		name 		The name of the style to register
	   * @param 		{Object} 		skin 		The skin object
	   */

		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {
					/**
	     * Set the initial zoom of the map
	     * @prop
	     * @type 	{integer}
	     */
					zoom: 4,

					/**
	     * Set when to init the map if the placeholder setting is used
	     * @prop
	     * @type 	{String}
	     */
					initOn: 'click',

					/**
	     * Specify a registered skin to use. The skin has to be registered through the static ```SGoogleMapComponent.registerSkin``` method.
	     * @prop
	     * @type 	{String}
	     */
					skin: null

					/**
	     * @name 	Google Map API
	     * Support all the google api options
	     * @prop
	     * @name 	All others google map options
	     * @type 	{Mixed}
	     */
				};
			}

			/**
	   * Physical props
	   * @definition 		SWebComponent.physicalProps
	   * @protected
	   */

		}, {
			key: 'physicalProps',
			get: function get() {
				return [];
			}
		}]);

		return SGoogleMapComponent;
	}(_coffeekrakenSGoogleMapComponentBase2.default);

	SGoogleMapComponent._registeredSkins = {};

	SGoogleMapComponent.registerSkin = function (name, skin) {
		// save the new skin
		SGoogleMapComponent._registeredSkins[name] = skin;
	};

	exports.default = SGoogleMapComponent;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SGoogleMapComponentBase = __webpack_require__(200);

	var _SGoogleMapComponentBase2 = _interopRequireDefault(_SGoogleMapComponentBase);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SGoogleMapComponentBase2.default;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _SWebComponent2 = __webpack_require__(201);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _googleMaps = __webpack_require__(226);

	var _googleMaps2 = _interopRequireDefault(_googleMaps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SGoogleMapComponentBase = function (_SWebComponent) {
		_inherits(SGoogleMapComponentBase, _SWebComponent);

		function SGoogleMapComponentBase() {
			_classCallCheck(this, SGoogleMapComponentBase);

			return _possibleConstructorReturn(this, (SGoogleMapComponentBase.__proto__ || Object.getPrototypeOf(SGoogleMapComponentBase)).apply(this, arguments));
		}

		_createClass(SGoogleMapComponentBase, [{
			key: '_loadGoogleApi',


			/**
	   * Return a promise that load the google api
	   * @return 	{Promise}
	   */
			value: function _loadGoogleApi() {
				// set some static variables on the google loader
				if (this.props.apiKey) {
					_googleMaps2.default.KEY = this.props.apiKey;
				}
				if (this.props.client) {
					_googleMaps2.default.CLIENT = this.props.client;
				}
				if (this.props.version) {
					_googleMaps2.default.VERSION = this.props.version;
				}
				if (this.props.libraries) {
					_googleMaps2.default.LIBRARIES = this.props.libraries;
				}
				if (this.props.language) {
					_googleMaps2.default.LANGUAGE = this.props.language;
				}
				if (this.props.region) {
					_googleMaps2.default.REGION = this.props.region;
				}
				return new Promise(function (resolve, reject) {
					// load the map api
					_googleMaps2.default.load(function (google) {
						// resolve the promise
						resolve(google);
					});
				});
			}

			/**
	   * _google
	   * Get the google api
	   * @type 	{Object}
	   */

		}, {
			key: '_google',
			get: function get() {
				return window.google;
			}
		}], [{
			key: 'mountDependencies',


			/**
	   * Return a list of promises to resolve before init the component
	   * @return 	{Array} 	An array of promises to resolve
	   */
			get: function get() {
				return [function () {
					return this._loadGoogleApi();
				}];
			}

			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   */

		}, {
			key: 'defaultProps',
			get: function get() {
				return {

					/**
	     * Set the api key used to reach the google services
	     * @prop
	     * @type		{String}
	     */
					apiKey: null,

					/**
	     * Set the client api id used to reach google services
	     * @prop
	     * @type 		{String}
	     */
					client: null,

					/**
	     * Set the version of the api to load
	     * @prop
	     * @type		{String}
	     */
					version: null,

					/**
	     * Set the libraries to load
	     * @prop
	     * @type		{Array}
	     */
					libraries: null,

					/**
	     * Set the language to use
	     * @prop
	     * @type  	{String}
	     */
					language: null,

					/**
	     * Store the region to use
	     * @prop
	     * @type 	{String}
	     */
					region: null
				};
			}
		}]);

		return SGoogleMapComponentBase;
	}(_SWebComponent3.default);

	exports.default = SGoogleMapComponentBase;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(202);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(203);

	var _SWebComponentMixin = __webpack_require__(204);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(203);

	var _autoCast = __webpack_require__(205);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(206);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(207);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(208);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(210);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(211);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(218);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(219);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(221);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(222);
	__webpack_require__(223);
	__webpack_require__(224);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 205 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 206 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 207 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(209);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(211);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(214);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(215);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(216);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(212);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(213);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 212 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(212);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 214 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 215 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(217);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 217 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 218 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(220);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 220 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(208);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(225);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 225 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {

		if (root === null) {
			throw new Error('Google-maps package can be used only in browser');
		}

		if (true) {
			!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof exports === 'object') {
			module.exports = factory();
		} else {
			root.GoogleMapsLoader = factory();
		}

	})(typeof window !== 'undefined' ? window : null, function() {


		'use strict';


		var googleVersion = '3.18';

		var script = null;

		var google = null;

		var loading = false;

		var callbacks = [];

		var onLoadEvents = [];

		var originalCreateLoaderMethod = null;


		var GoogleMapsLoader = {};


		GoogleMapsLoader.URL = 'https://maps.googleapis.com/maps/api/js';

		GoogleMapsLoader.KEY = null;

		GoogleMapsLoader.LIBRARIES = [];

		GoogleMapsLoader.CLIENT = null;

		GoogleMapsLoader.CHANNEL = null;

		GoogleMapsLoader.LANGUAGE = null;

		GoogleMapsLoader.REGION = null;

		GoogleMapsLoader.VERSION = googleVersion;

		GoogleMapsLoader.WINDOW_CALLBACK_NAME = '__google_maps_api_provider_initializator__';


		GoogleMapsLoader._googleMockApiObject = {};


		GoogleMapsLoader.load = function(fn) {
			if (google === null) {
				if (loading === true) {
					if (fn) {
						callbacks.push(fn);
					}
				} else {
					loading = true;

					window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] = function() {
						ready(fn);
					};

					GoogleMapsLoader.createLoader();
				}
			} else if (fn) {
				fn(google);
			}
		};


		GoogleMapsLoader.createLoader = function() {
			script = document.createElement('script');
			script.type = 'text/javascript';
			script.src = GoogleMapsLoader.createUrl();

			document.body.appendChild(script);
		};


		GoogleMapsLoader.isLoaded = function() {
			return google !== null;
		};


		GoogleMapsLoader.createUrl = function() {
			var url = GoogleMapsLoader.URL;

			url += '?callback=' + GoogleMapsLoader.WINDOW_CALLBACK_NAME;

			if (GoogleMapsLoader.KEY) {
				url += '&key=' + GoogleMapsLoader.KEY;
			}

			if (GoogleMapsLoader.LIBRARIES.length > 0) {
				url += '&libraries=' + GoogleMapsLoader.LIBRARIES.join(',');
			}

			if (GoogleMapsLoader.CLIENT) {
				url += '&client=' + GoogleMapsLoader.CLIENT + '&v=' + GoogleMapsLoader.VERSION;
			}

			if (GoogleMapsLoader.CHANNEL) {
				url += '&channel=' + GoogleMapsLoader.CHANNEL;
			}

			if (GoogleMapsLoader.LANGUAGE) {
				url += '&language=' + GoogleMapsLoader.LANGUAGE;
			}

			if (GoogleMapsLoader.REGION) {
				url += '&region=' + GoogleMapsLoader.REGION;
			}

			return url;
		};


		GoogleMapsLoader.release = function(fn) {
			var release = function() {
				GoogleMapsLoader.KEY = null;
				GoogleMapsLoader.LIBRARIES = [];
				GoogleMapsLoader.CLIENT = null;
				GoogleMapsLoader.CHANNEL = null;
				GoogleMapsLoader.LANGUAGE = null;
				GoogleMapsLoader.REGION = null;
				GoogleMapsLoader.VERSION = googleVersion;

				google = null;
				loading = false;
				callbacks = [];
				onLoadEvents = [];

				if (typeof window.google !== 'undefined') {
					delete window.google;
				}

				if (typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] !== 'undefined') {
					delete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME];
				}

				if (originalCreateLoaderMethod !== null) {
					GoogleMapsLoader.createLoader = originalCreateLoaderMethod;
					originalCreateLoaderMethod = null;
				}

				if (script !== null) {
					script.parentElement.removeChild(script);
					script = null;
				}

				if (fn) {
					fn();
				}
			};

			if (loading) {
				GoogleMapsLoader.load(function() {
					release();
				});
			} else {
				release();
			}
		};


		GoogleMapsLoader.onLoad = function(fn) {
			onLoadEvents.push(fn);
		};


		GoogleMapsLoader.makeMock = function() {
			originalCreateLoaderMethod = GoogleMapsLoader.createLoader;

			GoogleMapsLoader.createLoader = function() {
				window.google = GoogleMapsLoader._googleMockApiObject;
				window[GoogleMapsLoader.WINDOW_CALLBACK_NAME]();
			};
		};


		var ready = function(fn) {
			var i;

			loading = false;

			if (google === null) {
				google = window.google;
			}

			for (i = 0; i < onLoadEvents.length; i++) {
				onLoadEvents[i](google);
			}

			if (fn) {
				fn(google);
			}

			for (i = 0; i < callbacks.length; i++) {
				callbacks[i](google);
			}

			callbacks = [];
		};


		return GoogleMapsLoader;

	});


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SGoogleMapMarkerComponent = __webpack_require__(228);

	var _SGoogleMapMarkerComponent2 = _interopRequireDefault(_SGoogleMapMarkerComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SGoogleMapMarkerComponent2.default.define('s-google-map-marker', _SGoogleMapMarkerComponent2.default);

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _coffeekrakenSGoogleMapComponentBase = __webpack_require__(199);

	var _coffeekrakenSGoogleMapComponentBase2 = _interopRequireDefault(_coffeekrakenSGoogleMapComponentBase);

	var _whenAttribute = __webpack_require__(229);

	var _whenAttribute2 = _interopRequireDefault(_whenAttribute);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 		SGoogleMapMarkerComponent
	 * @extends 	SGoogleMapComponentBase
	 * Provide a nice webcomponent wrapper around the google map marker api.
	 *
	 * @styleguide  	Objects / Google Map
	 * @example 	html
	 * <s-google-map api-key="..." center="{lat: -25.363, lng: 131.044}">
	 * 	<s-google-map-marker api-key="..." position="{lat: -25.363, lng: 131.044}">
	 * 	</s-google-map-marker>
	 * </s-google-map>
	 * @see 	https://www.npmjs.com/package/google-maps
	 * @see 	https://developers.google.com/maps/documentation/javascript/
	 * @author 	Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SGoogleMapMarkerComponent = function (_SGoogleMapComponentB) {
		_inherits(SGoogleMapMarkerComponent, _SGoogleMapComponentB);

		function SGoogleMapMarkerComponent() {
			_classCallCheck(this, SGoogleMapMarkerComponent);

			return _possibleConstructorReturn(this, (SGoogleMapMarkerComponent.__proto__ || Object.getPrototypeOf(SGoogleMapMarkerComponent)).apply(this, arguments));
		}

		_createClass(SGoogleMapMarkerComponent, [{
			key: 'shouldAcceptComponentProp',


			/**
	   * Should accept component props
	   * @definition 		SWebComponent.shouldAcceptComponentProp
	   * @protected
	   */
			value: function shouldAcceptComponentProp(prop) {
				return true;
			}

			/**
	   * Component will mount
	   * @definition 		SWebComponent.componentWillMount
	   * @protected
	   */

		}, {
			key: 'componentWillMount',
			value: function componentWillMount() {
				_get(SGoogleMapMarkerComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapMarkerComponent.prototype), 'componentWillMount', this).call(this);
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				_get(SGoogleMapMarkerComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapMarkerComponent.prototype), 'componentMount', this).call(this);

				// get the map instance to use for this marker.
				// this is grabed from the parent node that need to be a google-map component
				if (!this.map) {
					throw 'The "' + this._componentNameDash + '" component has to be a direct child of a "SGoogleMapComponent"';
				}

				// add the marker to the map
				// load the map api
				if (!this._marker) {
					this._initMarker();
				} else {
					this._marker.setMap(this.map);
				}
			}

			/**
	   * Component unmount
	   * @definition 		SWebComponent.componentUnmount
	   * @protected
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SGoogleMapMarkerComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapMarkerComponent.prototype), 'componentUnmount', this).call(this);
			}

			/**
	   * Component will receive props
	   * @definition 		SWebComponent.componentWillReceiveProps
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps, previousProps) {
				if (!this._marker) return;
				this._marker.setOptions(nextProps);
			}

			/**
	   * Render the component
	   * Here goes the code that reflect the this.props state on the actual html element
	   * @definition 		SWebComponent.render
	   * @protected
	   */

		}, {
			key: 'render',
			value: function render() {
				_get(SGoogleMapMarkerComponent.prototype.__proto__ || Object.getPrototypeOf(SGoogleMapMarkerComponent.prototype), 'render', this).call(this);
			}

			/**
	   * Init the marker
	   */

		}, {
			key: '_initMarker',
			value: function _initMarker() {
				this._marker = new this._google.maps.Marker(this.props);
				this._marker.setMap(this.map);
			}

			/**
	   * Access the google map instance
	   * @type 	{Google.Map}
	   */

		}, {
			key: 'map',
			get: function get() {
				return this.parentNode.map;
			}

			/**
	   * Access the google map marker instance
	   * @type 	{Google.Map.Marker}
	   */

		}, {
			key: 'marker',
			get: function get() {
				return this._marker;
			}
		}], [{
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {};
			}

			/**
	   * Mount dependencies
	   * @definition 		SWebComponent.mountDependencies
	   * @protected
	   */

		}, {
			key: 'mountDependencies',
			get: function get() {
				return [function () {
					return (0, _whenAttribute2.default)(this.parentNode, 'inited');
				}];
			}

			/**
	   * Physical props
	   * @definition 		SWebComponent.physicalProps
	   * @protected
	   */

		}, {
			key: 'physicalProps',
			get: function get() {
				return [];
			}
		}]);

		return SGoogleMapMarkerComponent;
	}(_coffeekrakenSGoogleMapComponentBase2.default);

	exports.default = SGoogleMapMarkerComponent;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenAttribute;

	var _attributesObservable = __webpack_require__(230);

	var _attributesObservable2 = _interopRequireDefault(_attributesObservable);

	var _autoCast = __webpack_require__(245);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Resolve a promise when the wanted attribute on the passed HTMLElement exist or pass the check function provided
	 *
	 * @name 		whenAttribute
	 * @param 		{HTMLElement} 				elm 				The HTMLElement on which to monitor the property
	 * @param 		{String} 					attribute 			The attribute to monitor
	 * @param 		{Function} 					[checkFn=null] 		An optional function to check the attribute. The promise is resolved when this function return true
	 * @return 		(Promise) 										The promise that will be resolved when the attribute exist on the element (and that it passes the checkFn)
	 *
	 * @example 	js
	 * import whenAttribute from 'sugarcss/js/dom/whenAttribute'
	 * whenAttribute(myCoolHTMLElement, 'value').then((value) => {
	 * 		// the value attribute exist on the element
	 * });
	 * // with a checkFn
	 * whenAttribute(myCoolHTMLElement, 'value', (newVal, oldVal) => {
	 * 		// make sure the value is a number
	 * 		return typeof(newVal) === 'number';
	 * }).then((value) => {
	 * 		// do something with your number value...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenAttribute(elm, attrName) {
		var checkFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

		return new Promise(function (resolve, reject) {

			if (elm.hasAttribute(attrName)) {
				var value = (0, _autoCast2.default)(elm.getAttribute(attrName));
				if (checkFn && checkFn(value, value)) {
					resolve(value);
					return;
				} else if (!checkFn) {
					resolve(value);
					return;
				}
			}

			var obs = (0, _attributesObservable2.default)(elm).subscribe(function (mutation) {
				if (mutation.attributeName === attrName) {
					var _value = (0, _autoCast2.default)(mutation.target.getAttribute(mutation.attributeName));
					if (checkFn && checkFn(_value, mutation.oldValue)) {
						resolve(_value);
						obs.unsubscribe();
					} else if (!checkFn) {
						resolve(_value);
						obs.unsubscribe();
					}
				}
			});
		});
	}

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	/**
	 * List of attributes to observe
	 * @setting
	 * @name 		attributes
	 * @type 		{Array}
	 * @default 	null
	 */
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	/**
	 * Observe attributes on an HTMLElement and get mutations through the observable subscription
	 *
	 * @name 		attributesObservable
	 * @param 		{HTMLElement} 					target 		The element to observe
	 * @param 		{MutationObserverInit} 			settings 	The mutation observer settings
	 * @return 		{Observable} 								The mutation observable
	 *
	 * @example  	js
	 * import attributesObservable from 'sugarcss/js/dom/attributesObservable'
	 * attributesObservable(myCoolHTMLElement).subscribe((mutation) => {
	 * 		// do something with the mutation
	 * });
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/MutationObserver
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */


	exports.default = function (target) {
		var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};


		var observable = new _Observable.Observable(function (observer) {

			// create a new observer
			var mutationObserver = new MutationObserver(function (mutations) {
				var mutedAttrs = {};
				// loop on mutations
				mutations.forEach(function (mutation) {
					// push mutation
					if (!mutedAttrs[mutation.attribute]) {
						observer.next(mutation);
						mutedAttrs[mutation.attribute] = true;
					}
				});
				mutedAttrs = {};
			});
			mutationObserver.observe(target, _extends({
				attributes: true
			}, settings));
			// unsubscribe routine
			return function () {
				mutationObserver.disconnect();
			};
		});

		return observable;
	};

	var _Observable = __webpack_require__(231);

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var root_1 = __webpack_require__(232);
	var toSubscriber_1 = __webpack_require__(233);
	var observable_1 = __webpack_require__(244);
	/**
	 * A representation of any set of values over any amount of time. This the most basic building block
	 * of RxJS.
	 *
	 * @class Observable<T>
	 */
	var Observable = (function () {
	    /**
	     * @constructor
	     * @param {Function} subscribe the function that is  called when the Observable is
	     * initially subscribed to. This function is given a Subscriber, to which new values
	     * can be `next`ed, or an `error` method can be called to raise an error, or
	     * `complete` can be called to notify of a successful completion.
	     */
	    function Observable(subscribe) {
	        this._isScalar = false;
	        if (subscribe) {
	            this._subscribe = subscribe;
	        }
	    }
	    /**
	     * Creates a new Observable, with this Observable as the source, and the passed
	     * operator defined as the new observable's operator.
	     * @method lift
	     * @param {Operator} operator the operator defining the operation to take on the observable
	     * @return {Observable} a new observable with the Operator applied
	     */
	    Observable.prototype.lift = function (operator) {
	        var observable = new Observable();
	        observable.source = this;
	        observable.operator = operator;
	        return observable;
	    };
	    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
	        var operator = this.operator;
	        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
	        if (operator) {
	            operator.call(sink, this.source);
	        }
	        else {
	            sink.add(this._trySubscribe(sink));
	        }
	        if (sink.syncErrorThrowable) {
	            sink.syncErrorThrowable = false;
	            if (sink.syncErrorThrown) {
	                throw sink.syncErrorValue;
	            }
	        }
	        return sink;
	    };
	    Observable.prototype._trySubscribe = function (sink) {
	        try {
	            return this._subscribe(sink);
	        }
	        catch (err) {
	            sink.syncErrorThrown = true;
	            sink.syncErrorValue = err;
	            sink.error(err);
	        }
	    };
	    /**
	     * @method forEach
	     * @param {Function} next a handler for each value emitted by the observable
	     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
	     * @return {Promise} a promise that either resolves on observable completion or
	     *  rejects with the handled error
	     */
	    Observable.prototype.forEach = function (next, PromiseCtor) {
	        var _this = this;
	        if (!PromiseCtor) {
	            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
	                PromiseCtor = root_1.root.Rx.config.Promise;
	            }
	            else if (root_1.root.Promise) {
	                PromiseCtor = root_1.root.Promise;
	            }
	        }
	        if (!PromiseCtor) {
	            throw new Error('no Promise impl found');
	        }
	        return new PromiseCtor(function (resolve, reject) {
	            // Must be declared in a separate statement to avoid a RefernceError when
	            // accessing subscription below in the closure due to Temporal Dead Zone.
	            var subscription;
	            subscription = _this.subscribe(function (value) {
	                if (subscription) {
	                    // if there is a subscription, then we can surmise
	                    // the next handling is asynchronous. Any errors thrown
	                    // need to be rejected explicitly and unsubscribe must be
	                    // called manually
	                    try {
	                        next(value);
	                    }
	                    catch (err) {
	                        reject(err);
	                        subscription.unsubscribe();
	                    }
	                }
	                else {
	                    // if there is NO subscription, then we're getting a nexted
	                    // value synchronously during subscription. We can just call it.
	                    // If it errors, Observable's `subscribe` will ensure the
	                    // unsubscription logic is called, then synchronously rethrow the error.
	                    // After that, Promise will trap the error and send it
	                    // down the rejection path.
	                    next(value);
	                }
	            }, reject, resolve);
	        });
	    };
	    Observable.prototype._subscribe = function (subscriber) {
	        return this.source.subscribe(subscriber);
	    };
	    /**
	     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
	     * @method Symbol.observable
	     * @return {Observable} this instance of the observable
	     */
	    Observable.prototype[observable_1.observable] = function () {
	        return this;
	    };
	    // HACK: Since TypeScript inherits static properties too, we have to
	    // fight against TypeScript here so Subject can have a different static create signature
	    /**
	     * Creates a new cold Observable by calling the Observable constructor
	     * @static true
	     * @owner Observable
	     * @method create
	     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
	     * @return {Observable} a new cold observable
	     */
	    Observable.create = function (subscribe) {
	        return new Observable(subscribe);
	    };
	    return Observable;
	}());
	exports.Observable = Observable;
	//# sourceMappingURL=Observable.js.map

/***/ },
/* 232 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	/**
	 * window: browser in DOM main thread
	 * self: browser in WebWorker
	 * global: Node.js/other
	 */
	exports.root = (typeof window == 'object' && window.window === window && window
	    || typeof self == 'object' && self.self === self && self
	    || typeof global == 'object' && global.global === global && global);
	if (!exports.root) {
	    throw new Error('RxJS could not find any global context (window, self, global)');
	}
	//# sourceMappingURL=root.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Subscriber_1 = __webpack_require__(234);
	var rxSubscriber_1 = __webpack_require__(243);
	var Observer_1 = __webpack_require__(242);
	function toSubscriber(nextOrObserver, error, complete) {
	    if (nextOrObserver) {
	        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
	            return nextOrObserver;
	        }
	        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
	            return nextOrObserver[rxSubscriber_1.rxSubscriber]();
	        }
	    }
	    if (!nextOrObserver && !error && !complete) {
	        return new Subscriber_1.Subscriber(Observer_1.empty);
	    }
	    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
	}
	exports.toSubscriber = toSubscriber;
	//# sourceMappingURL=toSubscriber.js.map

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var isFunction_1 = __webpack_require__(235);
	var Subscription_1 = __webpack_require__(236);
	var Observer_1 = __webpack_require__(242);
	var rxSubscriber_1 = __webpack_require__(243);
	/**
	 * Implements the {@link Observer} interface and extends the
	 * {@link Subscription} class. While the {@link Observer} is the public API for
	 * consuming the values of an {@link Observable}, all Observers get converted to
	 * a Subscriber, in order to provide Subscription-like capabilities such as
	 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
	 * implementing operators, but it is rarely used as a public API.
	 *
	 * @class Subscriber<T>
	 */
	var Subscriber = (function (_super) {
	    __extends(Subscriber, _super);
	    /**
	     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
	     * defined Observer or a `next` callback function.
	     * @param {function(e: ?any): void} [error] The `error` callback of an
	     * Observer.
	     * @param {function(): void} [complete] The `complete` callback of an
	     * Observer.
	     */
	    function Subscriber(destinationOrNext, error, complete) {
	        _super.call(this);
	        this.syncErrorValue = null;
	        this.syncErrorThrown = false;
	        this.syncErrorThrowable = false;
	        this.isStopped = false;
	        switch (arguments.length) {
	            case 0:
	                this.destination = Observer_1.empty;
	                break;
	            case 1:
	                if (!destinationOrNext) {
	                    this.destination = Observer_1.empty;
	                    break;
	                }
	                if (typeof destinationOrNext === 'object') {
	                    if (destinationOrNext instanceof Subscriber) {
	                        this.destination = destinationOrNext;
	                        this.destination.add(this);
	                    }
	                    else {
	                        this.syncErrorThrowable = true;
	                        this.destination = new SafeSubscriber(this, destinationOrNext);
	                    }
	                    break;
	                }
	            default:
	                this.syncErrorThrowable = true;
	                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
	                break;
	        }
	    }
	    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };
	    /**
	     * A static factory for a Subscriber, given a (potentially partial) definition
	     * of an Observer.
	     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
	     * @param {function(e: ?any): void} [error] The `error` callback of an
	     * Observer.
	     * @param {function(): void} [complete] The `complete` callback of an
	     * Observer.
	     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
	     * Observer represented by the given arguments.
	     */
	    Subscriber.create = function (next, error, complete) {
	        var subscriber = new Subscriber(next, error, complete);
	        subscriber.syncErrorThrowable = false;
	        return subscriber;
	    };
	    /**
	     * The {@link Observer} callback to receive notifications of type `next` from
	     * the Observable, with a value. The Observable may call this method 0 or more
	     * times.
	     * @param {T} [value] The `next` value.
	     * @return {void}
	     */
	    Subscriber.prototype.next = function (value) {
	        if (!this.isStopped) {
	            this._next(value);
	        }
	    };
	    /**
	     * The {@link Observer} callback to receive notifications of type `error` from
	     * the Observable, with an attached {@link Error}. Notifies the Observer that
	     * the Observable has experienced an error condition.
	     * @param {any} [err] The `error` exception.
	     * @return {void}
	     */
	    Subscriber.prototype.error = function (err) {
	        if (!this.isStopped) {
	            this.isStopped = true;
	            this._error(err);
	        }
	    };
	    /**
	     * The {@link Observer} callback to receive a valueless notification of type
	     * `complete` from the Observable. Notifies the Observer that the Observable
	     * has finished sending push-based notifications.
	     * @return {void}
	     */
	    Subscriber.prototype.complete = function () {
	        if (!this.isStopped) {
	            this.isStopped = true;
	            this._complete();
	        }
	    };
	    Subscriber.prototype.unsubscribe = function () {
	        if (this.closed) {
	            return;
	        }
	        this.isStopped = true;
	        _super.prototype.unsubscribe.call(this);
	    };
	    Subscriber.prototype._next = function (value) {
	        this.destination.next(value);
	    };
	    Subscriber.prototype._error = function (err) {
	        this.destination.error(err);
	        this.unsubscribe();
	    };
	    Subscriber.prototype._complete = function () {
	        this.destination.complete();
	        this.unsubscribe();
	    };
	    Subscriber.prototype._unsubscribeAndRecycle = function () {
	        var _a = this, _parent = _a._parent, _parents = _a._parents;
	        this._parent = null;
	        this._parents = null;
	        this.unsubscribe();
	        this.closed = false;
	        this.isStopped = false;
	        this._parent = _parent;
	        this._parents = _parents;
	        return this;
	    };
	    return Subscriber;
	}(Subscription_1.Subscription));
	exports.Subscriber = Subscriber;
	/**
	 * We need this JSDoc comment for affecting ESDoc.
	 * @ignore
	 * @extends {Ignored}
	 */
	var SafeSubscriber = (function (_super) {
	    __extends(SafeSubscriber, _super);
	    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
	        _super.call(this);
	        this._parentSubscriber = _parentSubscriber;
	        var next;
	        var context = this;
	        if (isFunction_1.isFunction(observerOrNext)) {
	            next = observerOrNext;
	        }
	        else if (observerOrNext) {
	            next = observerOrNext.next;
	            error = observerOrNext.error;
	            complete = observerOrNext.complete;
	            if (observerOrNext !== Observer_1.empty) {
	                context = Object.create(observerOrNext);
	                if (isFunction_1.isFunction(context.unsubscribe)) {
	                    this.add(context.unsubscribe.bind(context));
	                }
	                context.unsubscribe = this.unsubscribe.bind(this);
	            }
	        }
	        this._context = context;
	        this._next = next;
	        this._error = error;
	        this._complete = complete;
	    }
	    SafeSubscriber.prototype.next = function (value) {
	        if (!this.isStopped && this._next) {
	            var _parentSubscriber = this._parentSubscriber;
	            if (!_parentSubscriber.syncErrorThrowable) {
	                this.__tryOrUnsub(this._next, value);
	            }
	            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
	                this.unsubscribe();
	            }
	        }
	    };
	    SafeSubscriber.prototype.error = function (err) {
	        if (!this.isStopped) {
	            var _parentSubscriber = this._parentSubscriber;
	            if (this._error) {
	                if (!_parentSubscriber.syncErrorThrowable) {
	                    this.__tryOrUnsub(this._error, err);
	                    this.unsubscribe();
	                }
	                else {
	                    this.__tryOrSetError(_parentSubscriber, this._error, err);
	                    this.unsubscribe();
	                }
	            }
	            else if (!_parentSubscriber.syncErrorThrowable) {
	                this.unsubscribe();
	                throw err;
	            }
	            else {
	                _parentSubscriber.syncErrorValue = err;
	                _parentSubscriber.syncErrorThrown = true;
	                this.unsubscribe();
	            }
	        }
	    };
	    SafeSubscriber.prototype.complete = function () {
	        if (!this.isStopped) {
	            var _parentSubscriber = this._parentSubscriber;
	            if (this._complete) {
	                if (!_parentSubscriber.syncErrorThrowable) {
	                    this.__tryOrUnsub(this._complete);
	                    this.unsubscribe();
	                }
	                else {
	                    this.__tryOrSetError(_parentSubscriber, this._complete);
	                    this.unsubscribe();
	                }
	            }
	            else {
	                this.unsubscribe();
	            }
	        }
	    };
	    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
	        try {
	            fn.call(this._context, value);
	        }
	        catch (err) {
	            this.unsubscribe();
	            throw err;
	        }
	    };
	    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
	        try {
	            fn.call(this._context, value);
	        }
	        catch (err) {
	            parent.syncErrorValue = err;
	            parent.syncErrorThrown = true;
	            return true;
	        }
	        return false;
	    };
	    SafeSubscriber.prototype._unsubscribe = function () {
	        var _parentSubscriber = this._parentSubscriber;
	        this._context = null;
	        this._parentSubscriber = null;
	        _parentSubscriber.unsubscribe();
	    };
	    return SafeSubscriber;
	}(Subscriber));
	//# sourceMappingURL=Subscriber.js.map

/***/ },
/* 235 */
/***/ function(module, exports) {

	"use strict";
	function isFunction(x) {
	    return typeof x === 'function';
	}
	exports.isFunction = isFunction;
	//# sourceMappingURL=isFunction.js.map

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var isArray_1 = __webpack_require__(237);
	var isObject_1 = __webpack_require__(238);
	var isFunction_1 = __webpack_require__(235);
	var tryCatch_1 = __webpack_require__(239);
	var errorObject_1 = __webpack_require__(240);
	var UnsubscriptionError_1 = __webpack_require__(241);
	/**
	 * Represents a disposable resource, such as the execution of an Observable. A
	 * Subscription has one important method, `unsubscribe`, that takes no argument
	 * and just disposes the resource held by the subscription.
	 *
	 * Additionally, subscriptions may be grouped together through the `add()`
	 * method, which will attach a child Subscription to the current Subscription.
	 * When a Subscription is unsubscribed, all its children (and its grandchildren)
	 * will be unsubscribed as well.
	 *
	 * @class Subscription
	 */
	var Subscription = (function () {
	    /**
	     * @param {function(): void} [unsubscribe] A function describing how to
	     * perform the disposal of resources when the `unsubscribe` method is called.
	     */
	    function Subscription(unsubscribe) {
	        /**
	         * A flag to indicate whether this Subscription has already been unsubscribed.
	         * @type {boolean}
	         */
	        this.closed = false;
	        this._parent = null;
	        this._parents = null;
	        this._subscriptions = null;
	        if (unsubscribe) {
	            this._unsubscribe = unsubscribe;
	        }
	    }
	    /**
	     * Disposes the resources held by the subscription. May, for instance, cancel
	     * an ongoing Observable execution or cancel any other type of work that
	     * started when the Subscription was created.
	     * @return {void}
	     */
	    Subscription.prototype.unsubscribe = function () {
	        var hasErrors = false;
	        var errors;
	        if (this.closed) {
	            return;
	        }
	        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
	        this.closed = true;
	        this._parent = null;
	        this._parents = null;
	        // null out _subscriptions first so any child subscriptions that attempt
	        // to remove themselves from this subscription will noop
	        this._subscriptions = null;
	        var index = -1;
	        var len = _parents ? _parents.length : 0;
	        // if this._parent is null, then so is this._parents, and we
	        // don't have to remove ourselves from any parent subscriptions.
	        while (_parent) {
	            _parent.remove(this);
	            // if this._parents is null or index >= len,
	            // then _parent is set to null, and the loop exits
	            _parent = ++index < len && _parents[index] || null;
	        }
	        if (isFunction_1.isFunction(_unsubscribe)) {
	            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
	            if (trial === errorObject_1.errorObject) {
	                hasErrors = true;
	                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?
	                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);
	            }
	        }
	        if (isArray_1.isArray(_subscriptions)) {
	            index = -1;
	            len = _subscriptions.length;
	            while (++index < len) {
	                var sub = _subscriptions[index];
	                if (isObject_1.isObject(sub)) {
	                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
	                    if (trial === errorObject_1.errorObject) {
	                        hasErrors = true;
	                        errors = errors || [];
	                        var err = errorObject_1.errorObject.e;
	                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
	                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
	                        }
	                        else {
	                            errors.push(err);
	                        }
	                    }
	                }
	            }
	        }
	        if (hasErrors) {
	            throw new UnsubscriptionError_1.UnsubscriptionError(errors);
	        }
	    };
	    /**
	     * Adds a tear down to be called during the unsubscribe() of this
	     * Subscription.
	     *
	     * If the tear down being added is a subscription that is already
	     * unsubscribed, is the same reference `add` is being called on, or is
	     * `Subscription.EMPTY`, it will not be added.
	     *
	     * If this subscription is already in an `closed` state, the passed
	     * tear down logic will be executed immediately.
	     *
	     * @param {TeardownLogic} teardown The additional logic to execute on
	     * teardown.
	     * @return {Subscription} Returns the Subscription used or created to be
	     * added to the inner subscriptions list. This Subscription can be used with
	     * `remove()` to remove the passed teardown logic from the inner subscriptions
	     * list.
	     */
	    Subscription.prototype.add = function (teardown) {
	        if (!teardown || (teardown === Subscription.EMPTY)) {
	            return Subscription.EMPTY;
	        }
	        if (teardown === this) {
	            return this;
	        }
	        var subscription = teardown;
	        switch (typeof teardown) {
	            case 'function':
	                subscription = new Subscription(teardown);
	            case 'object':
	                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {
	                    return subscription;
	                }
	                else if (this.closed) {
	                    subscription.unsubscribe();
	                    return subscription;
	                }
	                else if (typeof subscription._addParent !== 'function' /* quack quack */) {
	                    var tmp = subscription;
	                    subscription = new Subscription();
	                    subscription._subscriptions = [tmp];
	                }
	                break;
	            default:
	                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
	        }
	        var subscriptions = this._subscriptions || (this._subscriptions = []);
	        subscriptions.push(subscription);
	        subscription._addParent(this);
	        return subscription;
	    };
	    /**
	     * Removes a Subscription from the internal list of subscriptions that will
	     * unsubscribe during the unsubscribe process of this Subscription.
	     * @param {Subscription} subscription The subscription to remove.
	     * @return {void}
	     */
	    Subscription.prototype.remove = function (subscription) {
	        var subscriptions = this._subscriptions;
	        if (subscriptions) {
	            var subscriptionIndex = subscriptions.indexOf(subscription);
	            if (subscriptionIndex !== -1) {
	                subscriptions.splice(subscriptionIndex, 1);
	            }
	        }
	    };
	    Subscription.prototype._addParent = function (parent) {
	        var _a = this, _parent = _a._parent, _parents = _a._parents;
	        if (!_parent || _parent === parent) {
	            // If we don't have a parent, or the new parent is the same as the
	            // current parent, then set this._parent to the new parent.
	            this._parent = parent;
	        }
	        else if (!_parents) {
	            // If there's already one parent, but not multiple, allocate an Array to
	            // store the rest of the parent Subscriptions.
	            this._parents = [parent];
	        }
	        else if (_parents.indexOf(parent) === -1) {
	            // Only add the new parent to the _parents list if it's not already there.
	            _parents.push(parent);
	        }
	    };
	    Subscription.EMPTY = (function (empty) {
	        empty.closed = true;
	        return empty;
	    }(new Subscription()));
	    return Subscription;
	}());
	exports.Subscription = Subscription;
	function flattenUnsubscriptionErrors(errors) {
	    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);
	}
	//# sourceMappingURL=Subscription.js.map

/***/ },
/* 237 */
/***/ function(module, exports) {

	"use strict";
	exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });
	//# sourceMappingURL=isArray.js.map

/***/ },
/* 238 */
/***/ function(module, exports) {

	"use strict";
	function isObject(x) {
	    return x != null && typeof x === 'object';
	}
	exports.isObject = isObject;
	//# sourceMappingURL=isObject.js.map

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var errorObject_1 = __webpack_require__(240);
	var tryCatchTarget;
	function tryCatcher() {
	    try {
	        return tryCatchTarget.apply(this, arguments);
	    }
	    catch (e) {
	        errorObject_1.errorObject.e = e;
	        return errorObject_1.errorObject;
	    }
	}
	function tryCatch(fn) {
	    tryCatchTarget = fn;
	    return tryCatcher;
	}
	exports.tryCatch = tryCatch;
	;
	//# sourceMappingURL=tryCatch.js.map

/***/ },
/* 240 */
/***/ function(module, exports) {

	"use strict";
	// typeof any so that it we don't have to cast when comparing a result to the error object
	exports.errorObject = { e: {} };
	//# sourceMappingURL=errorObject.js.map

/***/ },
/* 241 */
/***/ function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	/**
	 * An error thrown when one or more errors have occurred during the
	 * `unsubscribe` of a {@link Subscription}.
	 */
	var UnsubscriptionError = (function (_super) {
	    __extends(UnsubscriptionError, _super);
	    function UnsubscriptionError(errors) {
	        _super.call(this);
	        this.errors = errors;
	        var err = Error.call(this, errors ?
	            errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) { return ((i + 1) + ") " + err.toString()); }).join('\n  ') : '');
	        this.name = err.name = 'UnsubscriptionError';
	        this.stack = err.stack;
	        this.message = err.message;
	    }
	    return UnsubscriptionError;
	}(Error));
	exports.UnsubscriptionError = UnsubscriptionError;
	//# sourceMappingURL=UnsubscriptionError.js.map

/***/ },
/* 242 */
/***/ function(module, exports) {

	"use strict";
	exports.empty = {
	    closed: true,
	    next: function (value) { },
	    error: function (err) { throw err; },
	    complete: function () { }
	};
	//# sourceMappingURL=Observer.js.map

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var root_1 = __webpack_require__(232);
	var Symbol = root_1.root.Symbol;
	exports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
	    Symbol.for('rxSubscriber') : '@@rxSubscriber';
	/**
	 * @deprecated use rxSubscriber instead
	 */
	exports.$$rxSubscriber = exports.rxSubscriber;
	//# sourceMappingURL=rxSubscriber.js.map

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var root_1 = __webpack_require__(232);
	function getSymbolObservable(context) {
	    var $$observable;
	    var Symbol = context.Symbol;
	    if (typeof Symbol === 'function') {
	        if (Symbol.observable) {
	            $$observable = Symbol.observable;
	        }
	        else {
	            $$observable = Symbol('observable');
	            Symbol.observable = $$observable;
	        }
	    }
	    else {
	        $$observable = '@@observable';
	    }
	    return $$observable;
	}
	exports.getSymbolObservable = getSymbolObservable;
	exports.observable = getSymbolObservable(root_1.root);
	/**
	 * @deprecated use observable instead
	 */
	exports.$$observable = exports.observable;
	//# sourceMappingURL=observable.js.map

/***/ },
/* 245 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SCustomScrollbarComponent = __webpack_require__(247);

	var _SCustomScrollbarComponent2 = _interopRequireDefault(_SCustomScrollbarComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SCustomScrollbarComponent2.default.define('s-custom-scrollbar', _SCustomScrollbarComponent2.default);

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(248);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _simplebar = __webpack_require__(273);

	var _simplebar2 = _interopRequireDefault(_simplebar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 		SCustomScrollbarComponent
	 * @extends 	SWebComponent
	 * Provide a simple webcomponent to create nice custom scrollbars. It will use the native scrollbar behavior and just hide the native scrollbars. Perfect for integration on mobile devices, etc...
	 * @example 	html
	 * <s-custom-scrollbar style="height:300px;">
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * </s-custom-scrollbar>
	 *
	 * @see 		https://github.com/Grsmto/simplebar
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	/**
	 * @name 			Scrollbar
	 * Provide a way to display a nice custom-scrollbar
	 * @styleguide  	Blocks / Scrollbar
	 * @example 		html
	 * <s-custom-scrollbar style="height:300px;">
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * 	<p>Duis volutpat vehicula aliquam. Praesent aliquet ac orci et vehicula. Fusce pharetra eleifend orci, vulputate consectetur risus vehicula vitae. Pellentesque sed mauris id elit semper interdum. Pellentesque dictum sollicitudin risus tincidunt consectetur. Fusce imperdiet nec purus eu eleifend. Ut feugiat ultricies finibus. In eu enim eget libero aliquet venenatis. Praesent gravida ligula id mauris cursus mollis. Aenean lacinia ullamcorper tincidunt. Sed posuere ultrices tortor, sit amet convallis leo rutrum non.</p>
	 * </s-custom-scrollbar>
	 * @see 			https://github.com/coffeekraken/s-custom-scrollbar-component
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SCustomScrollbarComponent = function (_SWebComponent) {
		_inherits(SCustomScrollbarComponent, _SWebComponent);

		function SCustomScrollbarComponent() {
			_classCallCheck(this, SCustomScrollbarComponent);

			return _possibleConstructorReturn(this, (SCustomScrollbarComponent.__proto__ || Object.getPrototypeOf(SCustomScrollbarComponent)).apply(this, arguments));
		}

		_createClass(SCustomScrollbarComponent, [{
			key: 'componentWillMount',


			/**
	   * Component will mount
	   * @definition 		SWebComponent.componentWillMount
	   * @protected
	   */
			value: function componentWillMount() {
				_get(SCustomScrollbarComponent.prototype.__proto__ || Object.getPrototypeOf(SCustomScrollbarComponent.prototype), 'componentWillMount', this).call(this);
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				_get(SCustomScrollbarComponent.prototype.__proto__ || Object.getPrototypeOf(SCustomScrollbarComponent.prototype), 'componentMount', this).call(this);

				// add the simplebar attribute on the element
				this.setAttribute('data-simplebar', true);

				// init the simplebar
				this._simplebar = new _simplebar2.default(this, {
					forceEnabled: true,
					scrollbarMinSize: 0
				});

				// listen for resize window
				window.addEventListener('resize', this._onWindowResize.bind(this));
			}

			/**
	   * On window resize
	   * @param 		{Event} 	e 	The event
	   */

		}, {
			key: '_onWindowResize',
			value: function _onWindowResize(e) {
				// recalculate the scroll
				this._simplebar.recalculate();
			}

			/**
	   * Component unmount
	   * @definition 		SWebComponent.componentUnmount
	   * @protected
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SCustomScrollbarComponent.prototype.__proto__ || Object.getPrototypeOf(SCustomScrollbarComponent.prototype), 'componentUnmount', this).call(this);

				// listen for resize window
				window.removeEventListener('resize', this._onWindowResize);
			}

			/**
	   * Component will receive prop
	   * @definition 		SWebComponent.componentWillReceiveProp
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProp',
			value: function componentWillReceiveProp(name, newVal, oldVal) {
				switch (name) {}
			}

			/**
	   * Render the component
	   * Here goes the code that reflect the this.props state on the actual html element
	   * @definition 		SWebComponent.render
	   * @protected
	   */

		}, {
			key: 'render',
			value: function render() {
				_get(SCustomScrollbarComponent.prototype.__proto__ || Object.getPrototypeOf(SCustomScrollbarComponent.prototype), 'render', this).call(this);
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   * @protected
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 0;\n\t\t\t\toverflow: hidden;\n\t\t\t\tdisplay: block;\n\t\t\t\t-webkit-overflow-scrolling: touch;\n\t\t\t}\n\n\t\t\t.simplebar-scroll-content {\n\t\t\t\toverflow: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 0;\n\t\t\t}\n\n\t\t\t.simplebar-track {\n\t\t\t\tz-index: 1;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\twidth: 4px;\n\t\t\t}\n\n\t\t\t.simplebar-track .simplebar-scrollbar {\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 0px;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\twidth: 100%;\n\t\t\t\ttransition: opacity 0.2s linear;\n\t\t\t\tbackground: #6c6e71;\n\t\t\t\tbackground-clip: padding-box;\n\t\t\t}\n\n\t\t\t.horizontal.simplebar-track {\n\t\t\t\ttop: auto;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: auto;\n\t\t\t\theight: 4px;\n\t\t\t}\n\n\t\t\t.horizontal.simplebar-track .simplebar-scrollbar {\n\t\t\t\tright: auto;\n\t\t\t\ttop: 0px;\n\t\t\t\theight: 100%;\n\t\t\t\tmin-height: 0;\n\t\t\t\twidth: auto;\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {};
			}

			/**
	   * Physical props
	   * @definition 		SWebComponent.physicalProps
	   * @protected
	   */

		}, {
			key: 'physicalProps',
			get: function get() {
				return [];
			}
		}]);

		return SCustomScrollbarComponent;
	}(_SWebComponent3.default);

	exports.default = SCustomScrollbarComponent;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(249);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(250);

	var _SWebComponentMixin = __webpack_require__(251);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(250);

	var _autoCast = __webpack_require__(252);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(253);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(254);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(255);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(257);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(258);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(265);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(266);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(268);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(269);
	__webpack_require__(270);
	__webpack_require__(271);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 252 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 253 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 254 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(256);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(258);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(261);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(262);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(263);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(259);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(260);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 259 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(259);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 261 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 262 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(264);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 264 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 265 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(267);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 267 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(255);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(272);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 272 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * 
	 *             SimpleBar.js - v2.2.1
	 *             Scrollbars, simpler.
	 *             https://grsmto.github.io/simplebar/
	 *             
	 *             Made by Adrien Grsmto from a fork by Jonathan Nicol
	 *             Under MIT License
	 *         
	 */
	!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.SimpleBar=e():t.SimpleBar=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=n(32),o=r(i),s=n(29),c=r(s),a=n(30),u=r(a),l=n(33),f=r(l),h=n(34),d=r(h),p=n(72),v=r(p),b=n(70),y=r(b),m=n(71),g=r(m);n(69);var _=function(){function t(e,n){(0,f.default)(this,t),this.el=e,this.track,this.scrollbar,this.flashTimeout,this.contentEl,this.scrollContentEl,this.dragOffset={x:0,y:0},this.isVisible={x:!0,y:!0},this.scrollOffsetAttr={x:"scrollLeft",y:"scrollTop"},this.sizeAttr={x:"offsetWidth",y:"offsetHeight"},this.scrollSizeAttr={x:"scrollWidth",y:"scrollHeight"},this.offsetAttr={x:"left",y:"top"},this.observer,this.currentAxis,this.enabled,this.scrollbarWidth=(0,v.default)(),this.options=(0,u.default)({},t.defaultOptions,n),this.classNames=this.options.classNames,this.flashScrollbar=this.flashScrollbar.bind(this),this.startScroll=this.startScroll.bind(this),this.startDrag=this.startDrag.bind(this),this.drag=this.drag.bind(this),this.endDrag=this.endDrag.bind(this),this.recalculate=(0,y.default)(this.recalculate,100,{leading:!0,trailing:!1}),this.init()}return(0,d.default)(t,[{key:"init",value:function(){return this.el.SimpleBar=this,this.enabled=0!==this.scrollbarWidth&&!this.options.forceEnabled,this.enabled?(this.initDOM(),this.trackX=this.el.querySelector("."+this.classNames.track+".horizontal"),this.trackY=this.el.querySelector("."+this.classNames.track+".vertical"),this.scrollbarX=this.trackX.querySelector("."+this.classNames.scrollbar),this.scrollbarY=this.trackY.querySelector("."+this.classNames.scrollbar),this.recalculate(),this.options.autoHide||(this.showScrollbar("x"),this.showScrollbar("y")),void this.initListeners()):void(this.el.style.overflow="auto")}},{key:"initDOM",value:function(){if(this.options.wrapContent){for(this.scrollContentEl=document.createElement("div"),this.contentEl=document.createElement("div"),this.scrollContentEl.classList.add(this.classNames.scrollContent),this.contentEl.classList.add(this.classNames.content),this.scrollContentEl.style.padding="0 "+this.scrollbarWidth+"px "+this.scrollbarWidth+"px 0",this.scrollContentEl.style.margin="0 -"+this.scrollbarWidth+"px -"+this.scrollbarWidth+"px 0",this.contentEl.style.marginBottom="-"+this.scrollbarWidth+"px";this.el.firstChild;)this.contentEl.appendChild(this.el.firstChild);this.scrollContentEl.appendChild(this.contentEl),this.el.appendChild(this.scrollContentEl)}var t=document.createElement("div"),e=document.createElement("div");t.classList.add(this.classNames.track),e.classList.add(this.classNames.scrollbar),t.appendChild(e),this.trackX=t.cloneNode(!0),this.trackX.classList.add("horizontal"),this.trackY=t.cloneNode(!0),this.trackY.classList.add("vertical"),this.el.insertBefore(this.trackX,this.el.firstChild),this.el.insertBefore(this.trackY,this.el.firstChild)}},{key:"initListeners",value:function(){var t=this;this.options.autoHide&&this.el.addEventListener("mouseenter",this.flashScrollbar),this.scrollbarX.addEventListener("mousedown",function(e){return t.startDrag(e,"x")}),this.scrollbarY.addEventListener("mousedown",function(e){return t.startDrag(e,"y")}),this.scrollContentEl.addEventListener("scroll",this.startScroll),"undefined"!=typeof MutationObserver&&(this.mutationObserver=new MutationObserver(function(e){e.forEach(function(e){(t.isChildNode(e.target)||e.addedNodes.length)&&t.recalculate()})}),this.mutationObserver.observe(this.el,{attributes:!0,childList:!0,characterData:!0,subtree:!0})),this.resizeObserver=new g.default(this.recalculate.bind(this)),this.resizeObserver.observe(this.el)}},{key:"removeListeners",value:function(){var t=this;this.enabled&&(this.options.autoHide&&this.el.removeEventListener("mouseenter",this.flashScrollbar),this.scrollbarX.removeEventListener("mousedown",function(e){return t.startDrag(e,"x")}),this.scrollbarY.removeEventListener("mousedown",function(e){return t.startDrag(e,"y")}),this.scrollContentEl.removeEventListener("scroll",this.startScroll),this.observer&&this.observer.disconnect())}},{key:"startDrag",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"y";t.preventDefault();var n="y"===e?this.scrollbarY:this.scrollbarX,r="y"===e?t.pageY:t.pageX;this.dragOffset[e]=r-n.getBoundingClientRect()[this.offsetAttr[e]],this.currentAxis=e,document.addEventListener("mousemove",this.drag),document.addEventListener("mouseup",this.endDrag)}},{key:"drag",value:function(t){t.preventDefault();var e="y"===this.currentAxis?t.pageY:t.pageX,n="y"===this.currentAxis?this.trackY:this.trackX,r=e-n.getBoundingClientRect()[this.offsetAttr[this.currentAxis]]-this.dragOffset[this.currentAxis],i=r/n[this.sizeAttr[this.currentAxis]],o=i*this.contentEl[this.scrollSizeAttr[this.currentAxis]];this.scrollContentEl[this.scrollOffsetAttr[this.currentAxis]]=o}},{key:"endDrag",value:function(){document.removeEventListener("mousemove",this.drag),document.removeEventListener("mouseup",this.endDrag)}},{key:"resizeScrollbar",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"y",e=void 0,n=void 0;"x"===t?(e=this.trackX,n=this.scrollbarX):(e=this.trackY,n=this.scrollbarY);var r=this.contentEl[this.scrollSizeAttr[t]],i=this.scrollContentEl[this.scrollOffsetAttr[t]],o=e[this.sizeAttr[t]],s=o/r,c=i/(r-o),a=Math.max(Math.floor(s*(o-2))-2,this.options.scrollbarMinSize),u=(o-4-a)*c+2;this.isVisible[t]=o<r,this.isVisible[t]?(e.style.visibility="visible","x"===t?(n.style.left=u+"px",n.style.width=a+"px"):(n.style.top=u+"px",n.style.height=a+"px")):e.style.visibility="hidden"}},{key:"startScroll",value:function(){this.flashScrollbar()}},{key:"flashScrollbar",value:function(){this.resizeScrollbar("x"),this.resizeScrollbar("y"),this.showScrollbar("x"),this.showScrollbar("y")}},{key:"showScrollbar",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"y";this.isVisible[t]&&("x"===t?this.scrollbarX.classList.add("visible"):this.scrollbarY.classList.add("visible"),this.options.autoHide&&("number"==typeof this.flashTimeout&&window.clearTimeout(this.flashTimeout),this.flashTimeout=window.setTimeout(this.hideScrollbar.bind(this),1e3)))}},{key:"hideScrollbar",value:function(){this.scrollbarX.classList.remove("visible"),this.scrollbarY.classList.remove("visible"),"number"==typeof this.flashTimeout&&window.clearTimeout(this.flashTimeout)}},{key:"recalculate",value:function(){this.enabled&&(this.resizeScrollbar("x"),this.resizeScrollbar("y"))}},{key:"getScrollElement",value:function(){return this.scrollContentEl}},{key:"getContentElement",value:function(){return this.contentEl}},{key:"unMount",value:function(){this.removeListeners(),this.el.SimpleBar=null}},{key:"isChildNode",value:function(t){return null!==t&&(t===this.el||this.isChildNode(t.parentNode))}}],[{key:"initHtmlApi",value:function(){if("undefined"!=typeof MutationObserver){var e=new MutationObserver(function(e){e.forEach(function(e){(0,c.default)(e.addedNodes).forEach(function(e){if(1===e.nodeType){if(e.SimpleBar)return;e.hasAttribute("data-simplebar")?new t(e,t.getElOptions(e)):(0,c.default)(e.querySelectorAll("[data-simplebar]")).forEach(function(e){new t(e,t.getElOptions(e))})}}),(0,c.default)(e.removedNodes).forEach(function(t){1===t.nodeType&&(t.hasAttribute("data-simplebar")?t.SimpleBar&&t.SimpleBar.unMount():(0,c.default)(t.querySelectorAll("[data-simplebar]")).forEach(function(t){t.SimpleBar&&t.SimpleBar.unMount()}))})})});e.observe(document,{childList:!0,subtree:!0})}"complete"===document.readyState||"loading"!==document.readyState&&!document.documentElement.doScroll?window.setTimeout(this.initDOMLoadedElements.bind(this)):(document.addEventListener("DOMContentLoaded",this.initDOMLoadedElements.bind(this)),window.addEventListener("load",this.initDOMLoadedElements.bind(this)))}},{key:"getElOptions",value:function(e){var n=(0,o.default)(t.htmlAttributes).reduce(function(n,r){var i=t.htmlAttributes[r];return e.hasAttribute(i)&&(n[r]=JSON.parse(e.getAttribute(i))),n},{});return n}},{key:"removeObserver",value:function(){this.observer&&this.observer.disconnect()}},{key:"initDOMLoadedElements",value:function(){document.removeEventListener("DOMContentLoaded",this.initDOMLoadedElements),window.removeEventListener("load",this.initDOMLoadedElements),(0,c.default)(document.querySelectorAll("[data-simplebar]")).forEach(function(e){e.SimpleBar||new t(e,t.getElOptions(e))})}},{key:"defaultOptions",get:function(){return{wrapContent:!0,autoHide:!0,forceEnabled:!1,classNames:{content:"simplebar-content",scrollContent:"simplebar-scroll-content",scrollbar:"simplebar-scrollbar",track:"simplebar-track"},scrollbarMinSize:10}}},{key:"htmlAttributes",get:function(){return{autoHide:"data-simplebar-autohide",forceEnabled:"data-simplebar-force-enabled",scrollbarMinSize:"data-simplebar-scrollbar-min-size"}}}]),t}();e.default=_,_.initHtmlApi(),t.exports=e.default},function(t,e){var n=t.exports={version:"2.4.0"};"number"==typeof __e&&(__e=n)},function(t,e,n){var r=n(25)("wks"),i=n(28),o=n(5).Symbol,s="function"==typeof o,c=t.exports=function(t){return r[t]||(r[t]=s&&o[t]||(s?o:i)("Symbol."+t))};c.store=r},function(t,e,n){t.exports=!n(8)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(5),i=n(1),o=n(20),s=n(10),c="prototype",a=function(t,e,n){var u,l,f,h=t&a.F,d=t&a.G,p=t&a.S,v=t&a.P,b=t&a.B,y=t&a.W,m=d?i:i[e]||(i[e]={}),g=m[c],_=d?r:p?r[e]:(r[e]||{})[c];d&&(n=e);for(u in n)l=!h&&_&&void 0!==_[u],l&&u in m||(f=l?_[u]:n[u],m[u]=d&&"function"!=typeof _[u]?n[u]:b&&l?o(f,r):y&&_[u]==f?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e[c]=t[c],e}(f):v&&"function"==typeof f?o(Function.call,f):f,v&&((m.virtual||(m.virtual={}))[u]=f,t&a.R&&g&&!g[u]&&s(g,u,f)))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,t.exports=a},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){var r=n(7),i=n(44),o=n(62),s=Object.defineProperty;e.f=n(3)?Object.defineProperty:function(t,e,n){if(r(t),e=o(e,!0),r(n),i)try{return s(t,e,n)}catch(c){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var r=n(13);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var r=n(6),i=n(16);t.exports=n(3)?function(t,e,n){return r.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(12);t.exports=function(t){return Object(r(t))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e){t.exports={}},function(t,e,n){var r=n(56),i=n(22);t.exports=Object.keys||function(t){return r(t,i)}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(25)("keys"),i=n(28);t.exports=function(t){return r[t]||(r[t]=i(t))}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){var r=n(39);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,i){return t.call(e,n,r,i)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var r=n(13),i=n(5).document,o=r(i)&&r(i.createElement);t.exports=function(t){return o?i.createElement(t):{}}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var r=n(19);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},function(t,e,n){var r=n(6).f,i=n(9),o=n(2)("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,o)&&r(t,o,{configurable:!0,value:e})}},function(t,e,n){var r=n(5),i="__core-js_shared__",o=r[i]||(r[i]={});t.exports=function(t){return o[t]||(o[t]={})}},function(t,e,n){var r=n(23),i=n(12);t.exports=function(t){return r(i(t))}},function(t,e,n){var r=n(18),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+r).toString(36))}},function(t,e,n){t.exports={"default":n(35),__esModule:!0}},function(t,e,n){t.exports={"default":n(36),__esModule:!0}},function(t,e,n){t.exports={"default":n(37),__esModule:!0}},function(t,e,n){t.exports={"default":n(38),__esModule:!0}},function(t,e){"use strict";e.__esModule=!0,e.default=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}e.__esModule=!0;var i=n(31),o=r(i);e.default=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,o.default)(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}()},function(t,e,n){n(68),n(64),t.exports=n(1).Array.from},function(t,e,n){n(65),t.exports=n(1).Object.assign},function(t,e,n){n(66);var r=n(1).Object;t.exports=function(t,e,n){return r.defineProperty(t,e,n)}},function(t,e,n){n(67),t.exports=n(1).Object.keys},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e,n){var r=n(26),i=n(27),o=n(61);t.exports=function(t){return function(e,n,s){var c,a=r(e),u=i(a.length),l=o(s,u);if(t&&n!=n){for(;u>l;)if(c=a[l++],c!=c)return!0}else for(;u>l;l++)if((t||l in a)&&a[l]===n)return t||l||0;return!t&&-1}}},function(t,e,n){var r=n(19),i=n(2)("toStringTag"),o="Arguments"==r(function(){return arguments}()),s=function(t,e){try{return t[e]}catch(n){}};t.exports=function(t){var e,n,c;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=s(e=Object(t),i))?n:o?r(e):"Object"==(c=r(e))&&"function"==typeof e.callee?"Arguments":c}},function(t,e,n){"use strict";var r=n(6),i=n(16);t.exports=function(t,e,n){e in t?r.f(t,e,i(0,n)):t[e]=n}},function(t,e,n){t.exports=n(5).document&&document.documentElement},function(t,e,n){t.exports=!n(3)&&!n(8)(function(){return 7!=Object.defineProperty(n(21)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(14),i=n(2)("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||o[i]===t)}},function(t,e,n){var r=n(7);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(o){var s=t.return;throw void 0!==s&&r(s.call(t)),o}}},function(t,e,n){"use strict";var r=n(52),i=n(16),o=n(24),s={};n(10)(s,n(2)("iterator"),function(){return this}),t.exports=function(t,e,n){t.prototype=r(s,{next:i(1,n)}),o(t,e+" Iterator")}},function(t,e,n){"use strict";var r=n(50),i=n(4),o=n(59),s=n(10),c=n(9),a=n(14),u=n(47),l=n(24),f=n(55),h=n(2)("iterator"),d=!([].keys&&"next"in[].keys()),p="@@iterator",v="keys",b="values",y=function(){return this};t.exports=function(t,e,n,m,g,_,x){u(n,e,m);var w,E,O,S=function(t){if(!d&&t in j)return j[t];switch(t){case v:return function(){return new n(this,t)};case b:return function(){return new n(this,t)}}return function(){return new n(this,t)}},A=e+" Iterator",M=g==b,k=!1,j=t.prototype,C=j[h]||j[p]||g&&j[g],L=C||S(g),T=g?M?S("entries"):L:void 0,D="Array"==e?j.entries||C:C;if(D&&(O=f(D.call(new t)),O!==Object.prototype&&(l(O,A,!0),r||c(O,h)||s(O,h,y))),M&&C&&C.name!==b&&(k=!0,L=function(){return C.call(this)}),r&&!x||!d&&!k&&j[h]||s(j,h,L),a[e]=L,a[A]=y,g)if(w={values:M?L:S(b),keys:_?L:S(v),entries:T},x)for(E in w)E in j||o(j,E,w[E]);else i(i.P+i.F*(d||k),e,w);return w}},function(t,e,n){var r=n(2)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(s){}t.exports=function(t,e){if(!e&&!i)return!1;var n=!1;try{var o=[7],s=o[r]();s.next=function(){return{done:n=!0}},o[r]=function(){return s},t(o)}catch(c){}return n}},function(t,e){t.exports=!0},function(t,e,n){"use strict";var r=n(15),i=n(54),o=n(57),s=n(11),c=n(23),a=Object.assign;t.exports=!a||n(8)(function(){var t={},e={},n=Symbol(),r="abcdefghijklmnopqrst";return t[n]=7,r.split("").forEach(function(t){e[t]=t}),7!=a({},t)[n]||Object.keys(a({},e)).join("")!=r})?function(t,e){for(var n=s(t),a=arguments.length,u=1,l=i.f,f=o.f;a>u;)for(var h,d=c(arguments[u++]),p=l?r(d).concat(l(d)):r(d),v=p.length,b=0;v>b;)f.call(d,h=p[b++])&&(n[h]=d[h]);return n}:a},function(t,e,n){var r=n(7),i=n(53),o=n(22),s=n(17)("IE_PROTO"),c=function(){},a="prototype",u=function(){var t,e=n(21)("iframe"),r=o.length,i="<",s=">";for(e.style.display="none",n(43).appendChild(e),e.src="javascript:",t=e.contentWindow.document,t.open(),t.write(i+"script"+s+"document.F=Object"+i+"/script"+s),t.close(),u=t.F;r--;)delete u[a][o[r]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(c[a]=r(t),n=new c,c[a]=null,n[s]=t):n=u(),void 0===e?n:i(n,e)}},function(t,e,n){var r=n(6),i=n(7),o=n(15);t.exports=n(3)?Object.defineProperties:function(t,e){i(t);for(var n,s=o(e),c=s.length,a=0;c>a;)r.f(t,n=s[a++],e[n]);return t}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var r=n(9),i=n(11),o=n(17)("IE_PROTO"),s=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=i(t),r(t,o)?t[o]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?s:null}},function(t,e,n){var r=n(9),i=n(26),o=n(40)(!1),s=n(17)("IE_PROTO");t.exports=function(t,e){var n,c=i(t),a=0,u=[];for(n in c)n!=s&&r(c,n)&&u.push(n);for(;e.length>a;)r(c,n=e[a++])&&(~o(u,n)||u.push(n));return u}},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){var r=n(4),i=n(1),o=n(8);t.exports=function(t,e){var n=(i.Object||{})[t]||Object[t],s={};s[t]=e(n),r(r.S+r.F*o(function(){n(1)}),"Object",s)}},function(t,e,n){t.exports=n(10)},function(t,e,n){var r=n(18),i=n(12);t.exports=function(t){return function(e,n){var o,s,c=String(i(e)),a=r(n),u=c.length;return a<0||a>=u?t?"":void 0:(o=c.charCodeAt(a),o<55296||o>56319||a+1===u||(s=c.charCodeAt(a+1))<56320||s>57343?t?c.charAt(a):o:t?c.slice(a,a+2):(o-55296<<10)+(s-56320)+65536)}}},function(t,e,n){var r=n(18),i=Math.max,o=Math.min;t.exports=function(t,e){return t=r(t),t<0?i(t+e,0):o(t,e)}},function(t,e,n){var r=n(13);t.exports=function(t,e){if(!r(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!r(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r=n(41),i=n(2)("iterator"),o=n(14);t.exports=n(1).getIteratorMethod=function(t){if(void 0!=t)return t[i]||t["@@iterator"]||o[r(t)]}},function(t,e,n){"use strict";var r=n(20),i=n(4),o=n(11),s=n(46),c=n(45),a=n(27),u=n(42),l=n(63);i(i.S+i.F*!n(49)(function(t){Array.from(t)}),"Array",{from:function(t){var e,n,i,f,h=o(t),d="function"==typeof this?this:Array,p=arguments.length,v=p>1?arguments[1]:void 0,b=void 0!==v,y=0,m=l(h);if(b&&(v=r(v,p>2?arguments[2]:void 0,2)),void 0==m||d==Array&&c(m))for(e=a(h.length),n=new d(e);e>y;y++)u(n,y,b?v(h[y],y):h[y]);else for(f=m.call(h),n=new d;!(i=f.next()).done;y++)u(n,y,b?s(f,v,[i.value,y],!0):i.value);return n.length=y,n}})},function(t,e,n){var r=n(4);r(r.S+r.F,"Object",{assign:n(51)})},function(t,e,n){var r=n(4);r(r.S+r.F*!n(3),"Object",{defineProperty:n(6).f})},function(t,e,n){var r=n(11),i=n(15);n(58)("keys",function(){return function(t){return i(r(t))}})},function(t,e,n){"use strict";var r=n(60)(!0);n(48)(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})})},function(t,e){},function(t,e){(function(e){function n(t,e,n){function i(e){var n=v,r=b;return v=b=void 0,O=e,m=t.apply(r,n)}function o(t){return O=t,g=setTimeout(l,e),S?i(t):m}function a(t){var n=t-E,r=t-O,i=e-n;return A?x(i,y-r):i}function u(t){var n=t-E,r=t-O;return void 0===E||n>=e||n<0||A&&r>=y}function l(){var t=w();return u(t)?f(t):void(g=setTimeout(l,a(t)))}function f(t){return g=void 0,M&&v?i(t):(v=b=void 0,m)}function h(){void 0!==g&&clearTimeout(g),O=0,v=E=b=g=void 0}function d(){return void 0===g?m:f(w())}function p(){var t=w(),n=u(t);if(v=arguments,b=this,E=t,n){if(void 0===g)return o(E);if(A)return g=setTimeout(l,e),i(E)}return void 0===g&&(g=setTimeout(l,e)),m}var v,b,y,m,g,E,O=0,S=!1,A=!1,M=!0;if("function"!=typeof t)throw new TypeError(c);return e=s(e)||0,r(n)&&(S=!!n.leading,A="maxWait"in n,y=A?_(s(n.maxWait)||0,e):y,M="trailing"in n?!!n.trailing:M),p.cancel=h,p.flush=d,p}function r(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function i(t){return!!t&&"object"==typeof t}function o(t){return"symbol"==typeof t||i(t)&&g.call(t)==u}function s(t){if("number"==typeof t)return t;if(o(t))return a;if(r(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=r(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(l,"");var n=h.test(t);return n||d.test(t)?p(t.slice(2),n?2:8):f.test(t)?a:+t}var c="Expected a function",a=NaN,u="[object Symbol]",l=/^\s+|\s+$/g,f=/^[-+]0x[0-9a-f]+$/i,h=/^0b[01]+$/i,d=/^0o[0-7]+$/i,p=parseInt,v="object"==typeof e&&e&&e.Object===Object&&e,b="object"==typeof self&&self&&self.Object===Object&&self,y=v||b||Function("return this")(),m=Object.prototype,g=m.toString,_=Math.max,x=Math.min,w=function(){return y.Date.now()};t.exports=n}).call(e,function(){return this}())},function(t,e,n){(function(e){!function(e,n){t.exports=n()}(this,function(){"use strict";function t(t){return parseFloat(t)||0}function n(e){var n=Array.prototype.slice.call(arguments,1);return n.reduce(function(n,r){var i=e["border-"+r+"-width"];return n+t(i)},0)}function r(e){for(var n=["top","right","bottom","left"],r={},i=0,o=n;i<o.length;i+=1){var s=o[i],c=e["padding-"+s];r[s]=t(c)}return r}function i(t){var e=t.getBBox();return u(0,0,e.width,e.height)}function o(e){var i=e.clientWidth,o=e.clientHeight;if(!i&&!o)return w;var c=getComputedStyle(e),a=r(c),l=a.left+a.right,f=a.top+a.bottom,h=t(c.width),d=t(c.height);if("border-box"===c.boxSizing&&(Math.round(h+l)!==i&&(h-=n(c,"left","right")+l),Math.round(d+f)!==o&&(d-=n(c,"top","bottom")+f)),!s(e)){var p=Math.round(h+l)-i,v=Math.round(d+f)-o;1!==Math.abs(p)&&(h-=p),1!==Math.abs(v)&&(d-=v)}return u(a.left,a.top,h,d)}function s(t){return t===document.documentElement}function c(t){return h?E(t)?i(t):o(t):w}function a(t){var e=t.x,n=t.y,r=t.width,i=t.height,o="function"==typeof DOMRectReadOnly?DOMRectReadOnly:Object,s=Object.create(o.prototype);return x(s,{x:e,y:n,width:r,height:i,top:n,right:e+r,bottom:i+n,left:e}),s}function u(t,e,n,r){return{x:t,y:e,width:n,height:r}}var l=function(){return"undefined"!=typeof e&&e.Math===Math?e:"undefined"!=typeof self&&self.Math===Math?self:"undefined"!=typeof window&&window.Math===Math?window:Function("return this")()}(),f=function(){function t(t,e){var n=-1;return t.some(function(t,r){return t[0]===e&&(n=r,!0)}),n}return"function"==typeof l.Map?l.Map:function(){function e(){this.__entries__=[]}var n={size:{}};return n.size.get=function(){return this.__entries__.length},e.prototype.get=function(e){var n=t(this.__entries__,e),r=this.__entries__[n];return r&&r[1]},e.prototype.set=function(e,n){var r=t(this.__entries__,e);~r?this.__entries__[r][1]=n:this.__entries__.push([e,n])},e.prototype.delete=function(e){var n=this.__entries__,r=t(n,e);~r&&n.splice(r,1)},e.prototype.has=function(e){return!!~t(this.__entries__,e)},e.prototype.clear=function(){this.__entries__.splice(0)},e.prototype.forEach=function(t,e){var n=this;void 0===e&&(e=null);for(var r=0,i=n.__entries__;r<i.length;r+=1){var o=i[r];t.call(e,o[1],o[0])}},Object.defineProperties(e.prototype,n),e}()}(),h=l.window===l&&"undefined"!=typeof document,d=function(){return"function"==typeof requestAnimationFrame?requestAnimationFrame:function(t){return setTimeout(function(){return t(Date.now())},1e3/60)}}(),p=2,v=function(){var t=Date;return"object"==typeof performance&&"function"==typeof performance.now&&(t=performance),function(){return t.now()}}(),b=function(t,e,n){function r(){s=!1,t(),c&&o()}function i(){n?d(r):r()}function o(){var t=v();if(s){if(t-a<p)return;c=!0}else s=!0,c=!1,setTimeout(i,e);a=t}void 0===n&&(n=!1);var s=!1,c=!1,a=0;return o},y=20,m=80,g="function"==typeof MutationObserver&&"object"==typeof navigator&&!("Netscape"===navigator.appName&&navigator.userAgent.match(/Trident\/.*rv:11/)),_=function(){this.isCycleContinuous_=!g,this.listenersEnabled_=!1,this.mutationsObserver_=null,this.observers_=[],this.refresh=b(this.refresh.bind(this),y,!0),this.continuousUpdateHandler_=b(this.refresh,m)};_.prototype.connect=function(t){this.isConnected(t)||this.observers_.push(t),this.listenersEnabled_||this.addListeners_()},_.prototype.disconnect=function(t){var e=this.observers_,n=e.indexOf(t);~n&&e.splice(n,1),!e.length&&this.listenersEnabled_&&this.removeListeners_()},_.prototype.isConnected=function(t){return!!~this.observers_.indexOf(t)},_.prototype.refresh=function(){var t=this.updateObservers_();t?this.refresh():this.isCycleContinuous_&&this.listenersEnabled_&&this.continuousUpdateHandler_()},_.prototype.updateObservers_=function(){var t=this.observers_.filter(function(t){return t.gatherActive(),t.hasActive()});return t.forEach(function(t){return t.broadcastActive()}),t.length>0},_.prototype.addListeners_=function(){h&&!this.listenersEnabled_&&(window.addEventListener("resize",this.refresh),document.addEventListener("transitionend",this.refresh),g&&(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})),this.listenersEnabled_=!0,this.isCycleContinuous_&&this.refresh())},_.prototype.removeListeners_=function(){h&&this.listenersEnabled_&&(window.removeEventListener("resize",this.refresh),document.removeEventListener("transitionend",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationsObserver_=null,this.listenersEnabled_=!1)};var x=function(t,e){for(var n=0,r=Object.keys(e);n<r.length;n+=1){var i=r[n];Object.defineProperty(t,i,{value:e[i],enumerbale:!1,writable:!1,configurable:!0})}return t},w=u(0,0,0,0),E=function(){return"function"==typeof SVGGraphicsElement?function(t){return t instanceof SVGGraphicsElement}:function(t){return t instanceof SVGElement&&"function"==typeof t.getBBox}}(),O=function(t){this.target=t,this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=u(0,0,0,0)};O.prototype.isActive=function(){var t=c(this.target);return this.contentRect_=t,t.width!==this.broadcastWidth||t.height!==this.broadcastHeight},O.prototype.broadcastRect=function(){var t=this.contentRect_;return this.broadcastWidth=t.width,this.broadcastHeight=t.height,t};var S=function(t,e){var n=a(e);x(this,{target:t,contentRect:n})},A=function(t,e,n){if("function"!=typeof t)throw new TypeError("The callback provided as parameter 1 is not a function.");this.activeTargets_=[],this.observationTargets_=new f,this.callback_=t,this.controller_=e,this.callbackCtx_=n};A.prototype.observe=function(t){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("Element"in l&&Element instanceof Object){if(!(t instanceof Element))throw new TypeError('parameter 1 is not of type "Element".');var e=this.observationTargets_;e.has(t)||(e.set(t,new O(t)),this.controller_.isConnected(this)||this.controller_.connect(this),this.controller_.refresh())}},A.prototype.unobserve=function(t){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("Element"in l&&Element instanceof Object){if(!(t instanceof Element))throw new TypeError('parameter 1 is not of type "Element".');var e=this.observationTargets_;e.has(t)&&(e.delete(t),e.size||this.controller_.disconnect(this))}},A.prototype.disconnect=function(){this.clearActive(),this.observationTargets_.clear(),this.controller_.disconnect(this)},A.prototype.gatherActive=function(){this.clearActive();var t=this.activeTargets_;this.observationTargets_.forEach(function(e){e.isActive()&&t.push(e)})},A.prototype.broadcastActive=function(){if(this.hasActive()){var t=this.callbackCtx_,e=this.activeTargets_.map(function(t){return new S(t.target,t.broadcastRect())});this.callback_.call(t,e,t),this.clearActive()}},A.prototype.clearActive=function(){this.activeTargets_.splice(0)},A.prototype.hasActive=function(){return this.activeTargets_.length>0};var M=new _,k="function"==typeof WeakMap?new WeakMap:new f,j=function(t){if(!(this instanceof j))throw new TypeError("Cannot call a class as a function");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var e=new A(t,M,this);k.set(this,e)};["observe","unobserve","disconnect"].forEach(function(t){j.prototype[t]=function(){var e;return(e=k.get(this))[t].apply(e,arguments)}});var C=function(){return"function"==typeof l.ResizeObserver?l.ResizeObserver:j}();return C})}).call(e,function(){return this}())},function(t,e,n){var r,i,o;/*! scrollbarWidth.js v0.1.0 | felixexter | MIT | https://github.com/felixexter/scrollbarWidth */
	!function(n,s){i=[],r=s,o="function"==typeof r?r.apply(e,i):r,!(void 0!==o&&(t.exports=o))}(this,function(){"use strict";function t(){var t,e=document.body,n=document.createElement("div"),r=n.style;return r.position="absolute",r.top=r.left="-9999px",r.width=r.height="100px",r.overflow="scroll",e.appendChild(n),t=n.offsetWidth-n.clientWidth,e.removeChild(n),t}return t})}])});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SRippleComponent = __webpack_require__(275);

	var _SRippleComponent2 = _interopRequireDefault(_SRippleComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SRippleComponent2.default.define('s-ripple', _SRippleComponent2.default);

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(276);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _coffeekrakenSParticlesSystemComponent = __webpack_require__(301);

	var _coffeekrakenSParticlesSystemComponent2 = _interopRequireDefault(_coffeekrakenSParticlesSystemComponent);

	var _style = __webpack_require__(361);

	var _style2 = _interopRequireDefault(_style);

	var _offset = __webpack_require__(365);

	var _offset2 = _interopRequireDefault(_offset);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SRippleComponent = function (_SWebComponent) {
		_inherits(SRippleComponent, _SWebComponent);

		function SRippleComponent() {
			_classCallCheck(this, SRippleComponent);

			return _possibleConstructorReturn(this, (SRippleComponent.__proto__ || Object.getPrototypeOf(SRippleComponent)).apply(this, arguments));
		}

		_createClass(SRippleComponent, [{
			key: 'componentWillMount',


			/**
	   * Component will mount
	   * @definition 		SWebComponent.componentWillMount
	   */
			value: function componentWillMount() {
				_get(SRippleComponent.prototype.__proto__ || Object.getPrototypeOf(SRippleComponent.prototype), 'componentWillMount', this).call(this);
				this._particlesSystem = null;
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				_get(SRippleComponent.prototype.__proto__ || Object.getPrototypeOf(SRippleComponent.prototype), 'componentMount', this).call(this);
				// set initial styles
				this._setInitialStyles();
				// listen for click on parent
				this.parentNode.addEventListener('click', this._onParentClick.bind(this));
				this._parentNode = this.parentNode;
			}

			/**
	   * Component unmount
	   * @definition 		SWebComponent.componentUnmount
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SRippleComponent.prototype.__proto__ || Object.getPrototypeOf(SRippleComponent.prototype), 'componentUnmount', this).call(this);
				// do not listen for click anymore
				this._parentNode.removeEventListener('click', this._onParentClick);
			}

			/**
	   * When click on parent, trigger a ripple
	   */

		}, {
			key: '_onParentClick',
			value: function _onParentClick(e) {

				// calculate position of the emitter
				var emitterX = void 0,
				    emitterY = void 0;
				if (this.props.centered) {
					emitterX = this.offsetWith * .5;
					emitterY = this.offsetHeight * .5;
				} else {
					var elmOffset = (0, _offset2.default)(this);
					emitterX = e.pageX - elmOffset.left;
					emitterY = e.pageY - elmOffset.top;
				}

				// add a particle system
				if (!this._particlesSystem) {
					this._particlesSystem = document.createElement('s-particles-system').setProps({
						particleClass: this._componentNameDash + '__particle',
						loop: false
					});
					this.appendChild(this._particlesSystem);
				}

				// amit a particle
				this._emitRipples(emitterX, emitterY);
			}

			/**
	   * Emit ripples
	   */

		}, {
			key: '_emitRipples',
			value: function _emitRipples(emitterX, emitterY) {
				var _this2 = this;

				var current = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;


				var emX = emitterX,
				    emY = emitterY;

				// handle spread
				if (this.props.spread) {
					emX += -this.props.spread + Math.round(Math.random() * (this.props.spread * 2));
					emY += -this.props.spread + Math.round(Math.random() * (this.props.spread * 2));
				}

				// set emitter position
				this._particlesSystem.setProps({
					emitterX: emX,
					emitterY: emY
				});

				// emit a particle
				this._particlesSystem.emitParticle();
				// check if need more that 1
				if (this.props.count > 1 && current < this.props.count) {
					setTimeout(function () {
						_this2._emitRipples(emitterX, emitterY, current + 1);
					}, this.props.delay);
				}
			}

			/**
	   * Set initial styles
	   */

		}, {
			key: '_setInitialStyles',
			value: function _setInitialStyles() {
				if (this.parentNode.style.position !== 'relative' || this.parentNode.style.position !== 'absolute') {
					(0, _style2.default)(this.parentNode, {
						position: 'relative'
					});
				}
				if (this.props.contains) {
					(0, _style2.default)(this, {
						overflow: 'hidden'
					});
				} else {
					(0, _style2.default)(this, {
						overflow: null
					});
				}
			}

			/**
	   * Should component update
	   */

		}, {
			key: 'shouldComponentUpdate',
			value: function shouldComponentUpdate(nextProps) {
				return false;
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tpointer-events : none;\n\t\t\t\tposition : absolute;\n\t\t\t\ttop : 0;\n\t\t\t\tleft : 0;\n\t\t\t\twidth : 100%;\n\t\t\t\theight : 100%;\n\t\t\t}\n\t\t\t.' + componentNameDash + '__particle {\n\t\t\t\ttop:50%; left:50%;\n\t\t\t\t-webkit-transform: translateX(-50%) translateY(-50%);\n\t\t\t\ttransform: translateX(-50%) translateY(-50%);\n\t\t\t\tposition:absolute;\n\t\t\t\twidth:150%;\n\t\t\t\tborder-radius: 50%;\n\t\t\t}\n\t\t\t.' + componentNameDash + '__particle:after {\n\t\t\t\tcontent:"";\n\t\t\t\tdisplay:block;\n\t\t\t\twidth:100%;\n\t\t\t\theight:0;\n\t\t\t\tpadding-top:100%;\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   */
			get: function get() {
				return {
					/**
	     * Set if need to stay contained in the parent (overflow hidden)
	     * @prop
	     * @type 		{Boolean}
	     */
					contains: true,

					/**
	     * Set if want the ripple to be centered into his parent and not be placed where the user has clicked
	     * @prop
	     * @type 		{Boolean}
	     */
					centered: false,

					/**
	     * Set the delay between each ripples if the props.count is more that 1
	     * @prop
	     * @type 		{Number}
	     */
					delay: 130,

					/**
	     * Set the number of ripples wanted on each click
	     * @prop
	     * @type 		{Integer}
	     */
					count: 1,

					/**
	     * Set the random distance that each ripples will takes relative to the emitter position
	     * @prop
	     * @type 		{Number}
	     */
					spread: 0
				};
			}
		}]);

		return SRippleComponent;
	}(_SWebComponent3.default);

	exports.default = SRippleComponent;

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(277);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(278);

	var _SWebComponentMixin = __webpack_require__(279);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(278);

	var _autoCast = __webpack_require__(280);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(281);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(282);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(283);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(285);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(286);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(293);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(294);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(296);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(297);
	__webpack_require__(298);
	__webpack_require__(299);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 280 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 281 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 282 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(284);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(286);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(289);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(290);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(291);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(287);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(288);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 287 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(287);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 289 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 290 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(292);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 292 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 293 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(295);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 295 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(283);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(300);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 300 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SParticlesSystemComponent = __webpack_require__(302);

	var _SParticlesSystemComponent2 = _interopRequireDefault(_SParticlesSystemComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SParticlesSystemComponent2.default.define('s-particles-system', _SParticlesSystemComponent2.default);

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(303);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _coffeekrakenSParticleComponent = __webpack_require__(328);

	var _coffeekrakenSParticleComponent2 = _interopRequireDefault(_coffeekrakenSParticleComponent);

	var _getAnimationProperties = __webpack_require__(358);

	var _getAnimationProperties2 = _interopRequireDefault(_getAnimationProperties);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SParticlesSystemComponent = function (_SWebComponent) {
		_inherits(SParticlesSystemComponent, _SWebComponent);

		function SParticlesSystemComponent() {
			_classCallCheck(this, SParticlesSystemComponent);

			return _possibleConstructorReturn(this, (SParticlesSystemComponent.__proto__ || Object.getPrototypeOf(SParticlesSystemComponent)).apply(this, arguments));
		}

		_createClass(SParticlesSystemComponent, [{
			key: 'componentMount',


			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   */
			value: function componentMount() {
				var _this2 = this;

				_get(SParticlesSystemComponent.prototype.__proto__ || Object.getPrototypeOf(SParticlesSystemComponent.prototype), 'componentMount', this).call(this);

				// check if need to create a timer or not
				if (this.props.amount && this.props.duration) {
					this._timer = new STimer(this.props.duration / this.props.amount, {
						loop: this.props.loop
					});
					// on tick
					this._timer.onTick(function () {
						// emit a particle
						_this2.emitParticle();
					});
					if (this.props.onComplete) {
						this._timer.onComplete(this.props.onComplete);
					}
					if (this.props.active) {
						// start the timer
						this._timer.start();
					}
				}
			}

			/**
	   * Unmount component
	   * @definition 		SWebComponent.componentUnmount
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SParticlesSystemComponent.prototype.__proto__ || Object.getPrototypeOf(SParticlesSystemComponent.prototype), 'componentUnmount', this).call(this);
				if (this._timer) {
					this._timer.destroy();
				}
			}

			/**
	   * Component will receive prop
	   * @definition 		SWebComponent.componentWillReceiveProp
	   */

		}, {
			key: 'componentWillReceiveProp',
			value: function componentWillReceiveProp(name, newVal, oldVal) {
				switch (name) {
					case 'active':
						if (!newVal) this.stop();else this.start();
						break;
				}
			}

			/**
	   * Emit a particle
	   * @return 		{HTMLElement} 		The emited particle
	   */

		}, {
			key: 'emitParticle',
			value: function emitParticle() {
				var _this3 = this;

				// append a new particle
				var particle = document.createElement('s-particle');

				// set particle position
				particle.style.top = this.props.emitterY + Math.random() * this.props.spread + 'px';
				particle.style.left = this.props.emitterX + Math.random() * this.props.spread + 'px';

				// append class if needed
				if (this.props.particleClass) {
					if (this.props.particleClass instanceof Array) {
						if (this.props.particleClassSelection === 'random') {
							particle.classList.add(this.props.particleClass[Math.round(Math.random() * (this.props.particleClass.length - 1))]);
						}
					} else {
						particle.classList.add(this.props.particleClass);
					}
				}

				// add the particle element if specified
				if (this.props.particleElm) {
					var particles = [].concat(this.props.particleElm);
					particle.appendChild(particles[Math.round(Math.random() * particles.length - 1)]);
				}

				this.mutate(function () {
					// append the new particle into the system
					_this3.appendChild(particle);
				});

				// return the emited particle
				return particle;
			}

			/**
	   * Stop the system
	   */

		}, {
			key: 'stop',
			value: function stop() {
				this._timer.stop();
			}

			/**
	   * Start the system
	   */

		}, {
			key: 'start',
			value: function start() {
				this._timer.start();
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   */
			get: function get() {
				return {
					/**
	     * Emitter x position
	     * @prop
	     * @type	{Number}
	     */
					emitterX: 0,
					/**
	     * Emitter y position
	     * @prop
	     * @type	{Number}
	     */
					emitterY: 0,
					/**
	     * Max distance where the particle will take birth from the emiter position
	     * @prop
	     * @type	{Number}
	     */
					spread: 0,
					/**
	     * Amount of particles to emit during the props.duration property
	     * @prop
	     * @type	{Integer}
	     */
					amount: 0,
					/**
	     * Duration of the particles emission
	     * @prop
	     * @type	{Number}
	     */
					duration: null,
					/**
	     * Class to apply to each particles
	     * @prop
	     * @type	{String}
	     */
					particleClass: null,
					/**
	     * Specify the method to pick a particle class if the props.particleClass is an array. Only random is supported for now
	     * @prop
	     * @type 	{String|Array<String>}
	     */
					particleClassSelection: 'random',
					/**
	     * DOM element to add into particle. If is an array, will pick a particle randomly
	     * @prop
	     * @type	{HTMLElement|Array<HTMLElement>}
	     */
					particleElm: null,
					/**
	     * Callback when the emission is completed
	     * @prop
	     * @type  	{Function}
	     */
					onComplete: null,
					/**
	     * Specify if the system if active or not
	     * @prop
	     * @type	{Boolean}
	     */
					active: true,
					/**
	     * Specify if the system hs to start again at the end automatically
	     * @prop
	     * @type 	{Boolean}
	     */
					loop: false
				};
			}
		}]);

		return SParticlesSystemComponent;
	}(_SWebComponent3.default);

	exports.default = SParticlesSystemComponent;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(304);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(305);

	var _SWebComponentMixin = __webpack_require__(306);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(305);

	var _autoCast = __webpack_require__(307);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(308);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(309);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(310);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(312);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(313);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(320);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(321);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(323);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(324);
	__webpack_require__(325);
	__webpack_require__(326);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 307 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 308 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 309 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(311);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(313);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(316);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(317);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(318);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(314);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(315);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 314 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(314);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 316 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 317 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(319);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 319 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 320 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(322);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 322 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(310);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(327);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 327 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SParticleComponent = __webpack_require__(329);

	var _SParticleComponent2 = _interopRequireDefault(_SParticleComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SParticleComponent2.default.define('s-particle', _SParticleComponent2.default);

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(330);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _getAnimationProperties = __webpack_require__(355);

	var _getAnimationProperties2 = _interopRequireDefault(_getAnimationProperties);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SParticleComponent = function (_SWebComponent) {
		_inherits(SParticleComponent, _SWebComponent);

		function SParticleComponent() {
			_classCallCheck(this, SParticleComponent);

			return _possibleConstructorReturn(this, (SParticleComponent.__proto__ || Object.getPrototypeOf(SParticleComponent)).apply(this, arguments));
		}

		_createClass(SParticleComponent, [{
			key: 'componentMount',


			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   */
			value: function componentMount() {
				var _this2 = this;

				_get(SParticleComponent.prototype.__proto__ || Object.getPrototypeOf(SParticleComponent.prototype), 'componentMount', this).call(this);

				var lifetime = this.props.lifetime;
				if (!lifetime) {
					// get the animation properties
					var animation = (0, _getAnimationProperties2.default)(this);
					lifetime = animation.totalDuration;
				}

				// wait till the animation is finished to remove the particle from DOM
				setTimeout(function () {
					if (_this2.parentNode) {
						_this2.parentNode.removeChild(_this2);
					}
				}, lifetime);
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   */
			get: function get() {
				return {
					/**
	     * Specify the particle lifetime. It not specified, will be auto-detected from his animation.
	     */
					lifetime: null
				};
			}
		}]);

		return SParticleComponent;
	}(_SWebComponent3.default);

	exports.default = SParticleComponent;

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(331);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(332);

	var _SWebComponentMixin = __webpack_require__(333);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(332);

	var _autoCast = __webpack_require__(334);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(335);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(336);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(337);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(339);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(340);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(347);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(348);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(350);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(351);
	__webpack_require__(352);
	__webpack_require__(353);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 334 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 335 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 336 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(338);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(340);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(343);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(344);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(345);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(341);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(342);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 341 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(341);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 343 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 344 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(346);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 346 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 347 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(349);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 349 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(337);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(354);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 354 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = getAnimationProperties;

	var _getStyleProperty = __webpack_require__(356);

	var _getStyleProperty2 = _interopRequireDefault(_getStyleProperty);

	var _toMs = __webpack_require__(357);

	var _toMs2 = _interopRequireDefault(_toMs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Get the css animation properties from an HTMLElement in an object format
	 *
	 * @name 		getAnimationProperties
	 * @param 		{HTMLElement} 					elm  		The element to get the properties from
	 * @return 		{Object} 									The animation properties
	 *
	 * @example  	js
	 * import getAnimationProperties from 'sugarcss/js/dom/getAnimationProperties'
	 * const props = getAnimationProperties(myCoolHTMLElement);
	 * // output format
	 * // {
	 * // 	name : ['animation1'],
	 * // 	duration : [200],
	 * // 	delay : [0],
	 * // 	timingFunction : ['linear'],
	 * // 	iterationCount : [1],
	 * // 	direction : ['forward'],
	 * // 	totalDuration : 200
	 * // }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	function splitIfNeeded(what, separator) {
		if (what.indexOf(separator) !== -1) {
			return what.split(separator).map(function (item) {
				return item.trim();
			});
		}
		return what;
	}
	function getAnimationProperties(elm) {
		// get the animation properties
		var name = (0, _getStyleProperty2.default)(elm, 'animation-name') || '';
		var duration = (0, _getStyleProperty2.default)(elm, 'animation-duration') || '0s';
		var timingFunction = (0, _getStyleProperty2.default)(elm, 'animation-timing-function') || 'linear';
		var delay = (0, _getStyleProperty2.default)(elm, 'animation-delay') || '0s';
		var iterationCount = (0, _getStyleProperty2.default)(elm, 'animation-iteration-count') || 1;
		var direction = (0, _getStyleProperty2.default)(elm, 'animation-direction') || 'normal';

		// return the animation object
		var props = {
			name: name.split(','),
			duration: duration.split(',').map(function (value) {
				return (0, _toMs2.default)(value);
			}),
			delay: ('' + delay).split(',').map(function (value) {
				return (0, _toMs2.default)(value);
			}),
			timingFunction: timingFunction.split(','),
			iterationCount: ('' + iterationCount).split(','),
			direction: direction.split(',')
		};
		var totalDuration = 0;
		var i = 0;
		var delays = [0].concat(props.delay);
		[0].concat(props.duration).forEach(function (val) {
			if (val + delays[i] > totalDuration) {
				totalDuration = val + delays[i];
			}
		});
		props.totalDuration = totalDuration;
		return props;
	}

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getStyleProperty;

	var _camelize = __webpack_require__(335);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _autoCast = __webpack_require__(334);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Get a style property on the passed element through the computed style.
	 * This function try to store the actual style to not trigger more that 1 redraw
	 * each js execution loop.
	 *
	 * @name 		getStyleProperty
	 * @param 		{HTMLElement} 					elm  		The element to get style from
	 * @param 		{String} 						property 	The css property to get
	 * @return 		{Mixed} 									The style value
	 *
	 * @example  	js
	 * import getStyleProperty from 'sugarcss/js/dom/getStyleProperty'
	 * const opacity = getStyleProperty(myCoolHTMLElement, 'opacity');
	 *
	 * @see 		https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function getStyleProperty(elm, property) {

	  // caching mecanisme
	  setTimeout(function () {
	    elm._sComputedStyle = null;
	  });

	  var computed = elm._sComputedStyle || window.getComputedStyle(elm);
	  elm._sComputedStyle = computed;

	  var prefixes = ['', 'webkit-', 'moz-', 'ms-', 'o-', 'khtml-'];
	  for (var i = 0; i < prefixes.length; i++) {
	    var prefix = prefixes[i];
	    var value = computed[(0, _camelize2.default)('' + prefix + property)];
	    if (value && value.trim() !== '') return (0, _autoCast2.default)(value);
	  }
	  return null;
	}

/***/ },
/* 357 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = toMs;
	function toMs(string) {
		// parse the string to int to get the lenght of the suffix
		// if (string.substr(0,1) === '.') string = '0${string}';
		var value = parseFloat(string);
		var valueLength = ('' + value).length;
		var suffix = string.substr(valueLength);
		// switch on suffix
		switch (suffix) {
			case 'ms':
				// milisecond
				return value;
				break;
			case 's': // seconds
			default:
				return value * 1000;
				break;
		}
	}

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = getAnimationProperties;

	var _getStyleProperty = __webpack_require__(359);

	var _getStyleProperty2 = _interopRequireDefault(_getStyleProperty);

	var _toMs = __webpack_require__(360);

	var _toMs2 = _interopRequireDefault(_toMs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Get the css animation properties from an HTMLElement in an object format
	 *
	 * @name 		getAnimationProperties
	 * @param 		{HTMLElement} 					elm  		The element to get the properties from
	 * @return 		{Object} 									The animation properties
	 *
	 * @example  	js
	 * import getAnimationProperties from 'sugarcss/js/dom/getAnimationProperties'
	 * const props = getAnimationProperties(myCoolHTMLElement);
	 * // output format
	 * // {
	 * // 	name : ['animation1'],
	 * // 	duration : [200],
	 * // 	delay : [0],
	 * // 	timingFunction : ['linear'],
	 * // 	iterationCount : [1],
	 * // 	direction : ['forward'],
	 * // 	totalDuration : 200
	 * // }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	function splitIfNeeded(what, separator) {
		if (what.indexOf(separator) !== -1) {
			return what.split(separator).map(function (item) {
				return item.trim();
			});
		}
		return what;
	}
	function getAnimationProperties(elm) {
		// get the animation properties
		var name = (0, _getStyleProperty2.default)(elm, 'animation-name') || '';
		var duration = (0, _getStyleProperty2.default)(elm, 'animation-duration') || '0s';
		var timingFunction = (0, _getStyleProperty2.default)(elm, 'animation-timing-function') || 'linear';
		var delay = (0, _getStyleProperty2.default)(elm, 'animation-delay') || '0s';
		var iterationCount = (0, _getStyleProperty2.default)(elm, 'animation-iteration-count') || 1;
		var direction = (0, _getStyleProperty2.default)(elm, 'animation-direction') || 'normal';

		// return the animation object
		var props = {
			name: name.split(','),
			duration: duration.split(',').map(function (value) {
				return (0, _toMs2.default)(value);
			}),
			delay: ('' + delay).split(',').map(function (value) {
				return (0, _toMs2.default)(value);
			}),
			timingFunction: timingFunction.split(','),
			iterationCount: ('' + iterationCount).split(','),
			direction: direction.split(',')
		};
		var totalDuration = 0;
		var i = 0;
		var delays = [0].concat(props.delay);
		[0].concat(props.duration).forEach(function (val) {
			if (val + delays[i] > totalDuration) {
				totalDuration = val + delays[i];
			}
		});
		props.totalDuration = totalDuration;
		return props;
	}

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getStyleProperty;

	var _camelize = __webpack_require__(308);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _autoCast = __webpack_require__(307);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Get a style property on the passed element through the computed style.
	 * This function try to store the actual style to not trigger more that 1 redraw
	 * each js execution loop.
	 *
	 * @name 		getStyleProperty
	 * @param 		{HTMLElement} 					elm  		The element to get style from
	 * @param 		{String} 						property 	The css property to get
	 * @return 		{Mixed} 									The style value
	 *
	 * @example  	js
	 * import getStyleProperty from 'sugarcss/js/dom/getStyleProperty'
	 * const opacity = getStyleProperty(myCoolHTMLElement, 'opacity');
	 *
	 * @see 		https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function getStyleProperty(elm, property) {

	  // caching mecanisme
	  setTimeout(function () {
	    elm._sComputedStyle = null;
	  });

	  var computed = elm._sComputedStyle || window.getComputedStyle(elm);
	  elm._sComputedStyle = computed;

	  var prefixes = ['', 'webkit-', 'moz-', 'ms-', 'o-', 'khtml-'];
	  for (var i = 0; i < prefixes.length; i++) {
	    var prefix = prefixes[i];
	    var value = computed[(0, _camelize2.default)('' + prefix + property)];
	    if (value && value.trim() !== '') return (0, _autoCast2.default)(value);
	  }
	  return null;
	}

/***/ },
/* 360 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = toMs;
	function toMs(string) {
		// parse the string to int to get the lenght of the suffix
		// if (string.substr(0,1) === '.') string = '0${string}';
		var value = parseFloat(string);
		var valueLength = ('' + value).length;
		var suffix = string.substr(valueLength);
		// switch on suffix
		switch (suffix) {
			case 'ms':
				// milisecond
				return value;
				break;
			case 's': // seconds
			default:
				return value * 1000;
				break;
		}
	}

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = style;

	var _uncamelize = __webpack_require__(362);

	var _uncamelize2 = _interopRequireDefault(_uncamelize);

	var _styleString2Object = __webpack_require__(363);

	var _styleString2Object2 = _interopRequireDefault(_styleString2Object);

	var _styleObject2String = __webpack_require__(364);

	var _styleObject2String2 = _interopRequireDefault(_styleObject2String);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Set or remove a css style property on an HTMLElement
	 *
	 * @name 		style
	 * @param 		{HTMLElement} 			elm 			The element to process
	 * @param 		{Object} 				styleObj 		An object of style to apply
	 * @return 		(Object) 								The element applied style
	 *
	 * @example 	js
	 * import style from 'sugarcss/js/dom/style'
	 * style(myCoolHTMLElement, {
	 * 		paddingLeft : 20,
	 * 		display : null
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	window.sugar._styles = new Map();

	function style(elm, styleObj) {

	  // convert style string to object
	  var styleAttr = elm.getAttribute('style');

	  if (styleAttr) {
	    styleObj = _extends({}, (0, _styleString2Object2.default)(styleAttr), styleObj);
	  }

	  // apply the style to the element
	  // elm.setAttribute('style', __styleObject2String(current.styleObj));
	  elm.style.cssText = (0, _styleObject2String2.default)(styleObj);

	  // return the style
	  return elm.style;
	}

/***/ },
/* 362 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = uncamelize;
	/**
	 * Uncamelize a string
	 */
	function uncamelize(text) {
		var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';

		// Replace all capital letters by separator followed by lowercase one
		var res = '';
		res = text.replace(/[A-Z]/g, function (letter) {
			return separator + letter.toLowerCase();
		});

		// Remove first separator (to avoid _hello_world name)
		return res.replace("/^" + separator + "/", '').trim();
	}

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = styleString2Object;

	var _camelize = __webpack_require__(281);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _autoCast = __webpack_require__(280);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Transform a style string to an object representation
	 *
	 * @name 		styleString2Object
	 * @param 		{String} 				style 			The style string
	 * @return 		(Object) 								The string object representation
	 *
	 * @example 	js
	 * import styleString2Object from 'sugarcss/js/dom/styleString2Object'
	 * const styleString = styleString2Object('padding-left:20px; display:block;');
	 * // output => {
	 * //		paddingLeft : '20px',
	 * // 		display : 'block'
	 * // }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function styleString2Object(style) {
	  if (!style || style === '') return {};
	  var obj = {};
	  var split = style.replace(/\s/g, '').split(';');
	  split.forEach(function (statement) {
	    // split statement by key value pairs
	    var spl = statement.split(':'),
	        key = (0, _camelize2.default)(spl[0]),
	        value = spl[1];
	    // add element into object
	    obj[key] = (0, _autoCast2.default)(value);
	  });
	  // return the style object
	  return obj;
	}

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = styleObject2String;

	var _uncamelize = __webpack_require__(362);

	var _uncamelize2 = _interopRequireDefault(_uncamelize);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Transform a style object to inline string separated by ;
	 *
	 * @name 		styleObject2String
	 * @param 		{Object} 				styleObj 		An object of style to apply
	 * @return 		(String) 								The string style representation
	 *
	 * @example 	js
	 * import styleObject2String from 'sugarcss/js/dom/styleObject2String'
	 * const styleString = styleObject2String({
	 * 		paddingLeft : '20px',
	 * 		display : 'block'
	 * });
	 * // output => padding-left:20px; display:block;
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function styleObject2String(styleObj) {
	  // process the style object
	  var propertiesArray = [];
	  for (var key in styleObj) {
	    var value = styleObj[key];
	    // if the value is ''
	    // mean that we need to get rid of
	    if (value === undefined || value === '') {
	      delete styleObj[key];
	    } else {
	      propertiesArray.push((0, _uncamelize2.default)(key) + ':' + value + ';');
	    }
	  }
	  // return the css text
	  return propertiesArray.join(' ');
	}

/***/ },
/* 365 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = offset;
	// import __getTranslateProperties from './getTranslateProperties'

	/**
	 * Get the offset top and left of the passed element from the document top left point
	 *
	 * @name 		offset
	 * @param 		{HTMLElement} 					elm  		The element to get the offset from
	 * @return 		{Object} 									The offset top and left object
	 *
	 * @example  	js
	 * import offset from 'sugarcss/js/dom/offset'
	 * const offsetElm = offset(myCoolElement);
	 * // output : { top : 200, left : 300 }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function offset(elm) {
		var body = void 0,
		    box = void 0,
		    clientLeft = void 0,
		    clientTop = void 0,
		    docEl = void 0,
		    left = void 0,
		    scrollLeft = void 0,
		    scrollTop = void 0,
		    top = void 0,
		    translates = void 0,
		    transX = void 0,
		    transY = void 0;
		box = elm.getBoundingClientRect();
		body = document.body;
		docEl = document.documentElement;
		scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;
		scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;
		clientTop = docEl.clientTop || body.clientTop || 0;
		clientLeft = docEl.clientLeft || body.clientLeft || 0;
		// translates = __getTranslateProperties(elm);
		// transX = translates.x;
		// transY = translates.y;
		top = box.top + scrollTop - clientTop;
		left = box.left + scrollLeft - clientLeft;
		return {
			top: Math.round(top),
			left: Math.round(left)
		};
	}

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SEqualizeComponent = __webpack_require__(367);

	var _SEqualizeComponent2 = _interopRequireDefault(_SEqualizeComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SEqualizeComponent2.default.define('s-equalize', _SEqualizeComponent2.default);

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(368);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _dispatchEvent = __webpack_require__(375);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _offset = __webpack_require__(393);

	var _offset2 = _interopRequireDefault(_offset);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 	SEqualizeComponent
	 * @extends 	SWebComponent
	 * Simply made some equal height columns.
	 *
	 * @example 	html
	 * <div style="overflow:hidden">
	 * 	<div class="my-cool-column tf vr" style="width:400px; float:left;">
	 * 	<s-equalize group="cols">
	 *  	<h4>Column 1</h4>
	 *  	<p>Integer congue a nibh sed elementum. Mauris ligula sem, scelerisque.</p>
	 *  	<s-equalize-equalizer></s-equalize-equalizer>
	 *  	<a href="javascript:void(0);" class="btn btn--primary">
	 *   		More infos...
	 * 		</a>
	 *  </s-equalize>
	 * </div>
	 * <div class="my-cool-column tf vr" style="width:400px; float:left;">
	 * 	<s-equalize group="cols">
	 *  	<h4>Column 2</h4>
	 *  	<p>Donec scelerisque eu felis sit amet sodales. Nam sit amet lacus purus. Aliquam rutrum facilisis velit non egestas. Maecenas condimentum condimentum eleifend. Ut sed massa tempus, pellentesque orci id, facilisis dolor. Integer ac ligula convallis, egestas sem ut, luctus purus.</p>
	 *  	<s-equalize-equalizer></s-equalize-equalizer>
	 *  	<a href="javascript:void(0);" class="btn btn--primary">
	 *   		More infos...
	 * 		</a>
	 *  </s-equalize>
	 * </div>
	 * </div>
	 *
	 * @author 	Olivier Bossel <olivier.bossel@gmail.com>
	 */

	/**
	 * @name 			Equalize
	 * Simply made some equal height columns.
	 * @styleguide  	Layout / Equalize
	 * @example 		html
	 * <div style="overflow:hidden">
	 * <div class="my-cool-column tf vr" style="width:400px; float:left;">
	 * 	<s-equalize group="cols">
	 *  	<h4>Column 1</h4>
	 *  	<p>Integer congue a nibh sed elementum. Mauris ligula sem, scelerisque.</p>
	 *  	<s-equalize-equalizer></s-equalize-equalizer>
	 *  	<a href="javascript:void(0);" class="btn btn--primary">
	 *   		More infos...
	 * 		</a>
	 *  </s-equalize>
	 * </div>
	 * <div class="my-cool-column tf vr" style="width:400px; float:left;">
	 * 	<s-equalize group="cols">
	 *  	<h4>Column 2</h4>
	 *  	<p>Donec scelerisque eu felis sit amet sodales. Nam sit amet lacus purus. Aliquam rutrum facilisis velit non egestas. Maecenas condimentum condimentum eleifend. Ut sed massa tempus, pellentesque orci id, facilisis dolor. Integer ac ligula convallis, egestas sem ut, luctus purus.</p>
	 *  	<s-equalize-equalizer></s-equalize-equalizer>
	 *  	<a href="javascript:void(0);" class="btn btn--primary">
	 *   		More infos...
	 * 		</a>
	 *  </s-equalize>
	 * </div>
	 * </div>
	 * @see 			https://github.com/Coffeekraken/s-google-map-component/tree/release/{version}
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SEqualizeComponent = function (_SWebComponent) {
		_inherits(SEqualizeComponent, _SWebComponent);

		function SEqualizeComponent() {
			_classCallCheck(this, SEqualizeComponent);

			return _possibleConstructorReturn(this, (SEqualizeComponent.__proto__ || Object.getPrototypeOf(SEqualizeComponent)).apply(this, arguments));
		}

		_createClass(SEqualizeComponent, [{
			key: 'componentWillMount',


			/**
	   * Component will mount
	  	 * @definition 		SWebComponent.componentWillMount
	   * @protected
	   */
			value: function componentWillMount() {
				_get(SEqualizeComponent.prototype.__proto__ || Object.getPrototypeOf(SEqualizeComponent.prototype), 'componentWillMount', this).call(this);
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				var _this2 = this;

				_get(SEqualizeComponent.prototype.__proto__ || Object.getPrototypeOf(SEqualizeComponent.prototype), 'componentMount', this).call(this);

				if (!SEqualizeComponent._groups[this.props.group]) {
					SEqualizeComponent._groups[this.props.group] = {
						refreshLinesInProgress: false,
						elements: [],
						lines: []
					};
				}
				SEqualizeComponent._groups[this.props.group].elements = document.querySelectorAll(this._componentNameDash + '[group="' + this.props.group + '"]');

				// init lines
				this.lines = [];

				// refresh lines first time
				this.refreshLines();

				// equalize
				this.equalize();

				// listen for resizing window
				var resizeWindowTimeout = void 0;
				window.addEventListener('resize', function (e) {
					clearTimeout(resizeWindowTimeout);
					resizeWindowTimeout = setTimeout(function () {
						_this2.equalize();
					}, _this2.props.resizeTimeout);
				});
			}

			/**
	   * Component unmount
	   * @definition 		SWebComponent.componentUnmount
	   * @protected
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SEqualizeComponent.prototype.__proto__ || Object.getPrototypeOf(SEqualizeComponent.prototype), 'componentUnmount', this).call(this);
			}

			/**
	   * Component will receive prop
	   * @definition 		SWebComponent.componentWillReceiveProp
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProp',
			value: function componentWillReceiveProp(name, newVal, oldVal) {
				switch (name) {}
			}

			/**
	   * Render the component
	   * Here goes the code that reflect the this.props state on the actual html element
	   * @definition 		SWebComponent.render
	   * @protected
	   */

		}, {
			key: 'render',
			value: function render() {
				_get(SEqualizeComponent.prototype.__proto__ || Object.getPrototypeOf(SEqualizeComponent.prototype), 'render', this).call(this);
			}

			/**
	   * Return the equalizer HTMLElement if exist
	   * @return 	{HTMLElement} 		The equalizer HTMLElement
	   */

		}, {
			key: 'refreshLines',


			/**
	   * Refresh the lines values
	   */
			value: function refreshLines() {
				var _this3 = this;

				if (SEqualizeComponent._groups[this.props.group].refreshLinesInProgress) return;
				SEqualizeComponent._groups[this.props.group].refreshLinesInProgress = true;
				setTimeout(function () {
					SEqualizeComponent._groups[_this3.props.group].refreshLinesInProgress = false;
				}, 100);
				// loop on all the columns
				var offsetTop = void 0;
				this.lines = [];
				var line = {
					inProgress: false,
					height: 0,
					elements: []
				};
				[].forEach.call(SEqualizeComponent._groups[this.props.group].elements, function (elm) {

					// reset the equalizer or element min-height
					// to get the real height of the element
					if (elm.equalizerElm) {
						elm.equalizerElm.style.minHeight = 0;
					} else {
						elm.style.minHeight = 0;
					}

					var elmHeight = elm.offsetHeight;
					var elmOffset = (0, _offset2.default)(elm);

					// check if is on new line
					if (offsetTop !== elmOffset.top && line.height > 0) {
						// add the new line to lines stack
						_this3.lines.push(line);
						// reset the line
						line = {
							inProgress: false,
							height: 0,
							elements: []
						};
					}
					// add the element in the line
					line.elements.push(elm);
					// check if the element is higher that the highest of the line
					if (elmHeight > line.height) {
						line.height = elmHeight;
					}
					// save the new offset
					offsetTop = elmOffset.top;
				});

				// add the last line
				this.lines.push(line);

				// save the lins in static stack
				SEqualizeComponent._groups[this.props.group].lines = this.lines;
			}

			/**
	   * Get the line object from an HTMLElement
	   * @param 		{HTMLElement} 		elm 		The element to get the line from
	   * @return 		{Object} 		The line object
	   */

		}, {
			key: 'getLineFromElm',
			value: function getLineFromElm(elm) {
				// loop on lines
				for (var key in SEqualizeComponent._groups[this.props.group].lines) {
					var line = SEqualizeComponent._groups[this.props.group].lines[key];
					if (line.elements.indexOf(elm) !== -1) return line;
				}
				return null;
			}

			/**
	   * Equalize the passed line
	   * @param 		{Object} 		line 		The line object to equalize the elements from
	   */

		}, {
			key: 'equalizeLine',
			value: function equalizeLine(line) {

				// do nothing if the line is already in progress
				if (line.inProgress) return;
				// flag the line as inProgress
				line.inProgress = true;

				// refresh lines
				// don't worry, it will not do the work
				// every time it is called but only 1 by group every 100ms
				this.refreshLines();

				setTimeout(function () {
					// loop on each columns
					[].forEach.call(line.elements, function (element) {
						element.classList.add('clear-transmations');
						// reset the equalizer or element min-height
						// to get the real height of the element
						if (element.equalizerElm) {
							element.equalizerElm.style.minHeight = 0;
						} else {
							element.style.minHeight = 0;
						}
					});
					// loop on each columns
					[].forEach.call(line.elements, function (element) {
						// check if an equalizer exist to use it
						// @TODO : find a way to not query each time in the column for the equalizer
						// reset the equalizer or element min-height
						// to get the real height of the element
						if (element.equalizerElm) {
							element.equalizerElm.style.display = 'block';
							element.equalizerElm.style.minHeight = line.height - element.offsetHeight + 'px';
						} else {
							element.style.minHeight = line.height + 'px';
						}
					});
					[].forEach.call(line.elements, function (element) {
						element.classList.remove('clear-transmations');
					});
					// reset the line progress status
					line.inProgress = false;
				});
			}

			/**
	   * Equalize from an element or a line object
	   * @param 		{HTMLElement|Object} 		[elmOrLine=null] 		An HTMLElement that belong to a line or directly a line object
	   */

		}, {
			key: 'equalize',
			value: function equalize() {
				var _this4 = this;

				var elmOrLine = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

				// if we have an element passed
				if (elmOrLine && elmOrLine.tagName) {
					// equalize from an element
					var line = this.getLineFromElm(elmOrLine);
					if (!line) return;
					this.equalizeLine(line);
				} else if (elmOrLine && elmOrLine.elements) {
					// equalize a line directly
					this.equalizeLine(elmOrLine);
				} else {
					// equalize the whole set
					SEqualizeComponent._groups[this.props.group].lines.forEach(function (line) {
						// equalize line
						_this4.equalizeLine(line);
					});
				}
				setTimeout(function () {
					(0, _dispatchEvent2.default)(_this4, 'update:height');
				});
			}
		}, {
			key: 'equalizerElm',
			get: function get() {
				if (this._equalizerElmCache) return this._equalizerElmCache;
				this._equalizerElmCache = this.querySelector(this._componentNameDash + '-equalizer');
				return this._equalizerElmCache;
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   * @protected
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tdisplay : block;\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {
					/**
	     * Specify the group name that the equalize element belong to
	     * @prop
	     * @type 	{String}
	     */
					group: null,

					/**
	     * Specify the timeout to wait before resize again after a window resizeTimeout
	     * @prop
	     * @type 	{Number}
	     */
					resizeTimeout: 200
				};
			}

			/**
	   * Physical props
	   * @definition 		SWebComponent.physicalProps
	   * @protected
	   */


			/**
	   * Store the groups
	   * @type	{Object}
	   */

		}, {
			key: 'physicalProps',
			get: function get() {
				return ['group'];
			}
		}]);

		return SEqualizeComponent;
	}(_SWebComponent3.default);

	SEqualizeComponent._groups = {};
	exports.default = SEqualizeComponent;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(369);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(370);

	var _SWebComponentMixin = __webpack_require__(371);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(370);

	var _autoCast = __webpack_require__(372);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(373);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(374);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(375);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(377);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(378);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(385);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(386);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(388);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(389);
	__webpack_require__(390);
	__webpack_require__(391);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 372 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 373 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 374 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(376);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(378);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(381);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(382);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(383);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(379);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(380);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 379 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(379);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 381 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 382 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(384);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 384 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 385 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(387);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 387 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(375);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(392);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 392 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 393 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = offset;
	// import __getTranslateProperties from './getTranslateProperties'

	/**
	 * Get the offset top and left of the passed element from the document top left point
	 *
	 * @name 		offset
	 * @param 		{HTMLElement} 					elm  		The element to get the offset from
	 * @return 		{Object} 									The offset top and left object
	 *
	 * @example  	js
	 * import offset from 'sugarcss/js/dom/offset'
	 * const offsetElm = offset(myCoolElement);
	 * // output : { top : 200, left : 300 }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function offset(elm) {
		var body = void 0,
		    box = void 0,
		    clientLeft = void 0,
		    clientTop = void 0,
		    docEl = void 0,
		    left = void 0,
		    scrollLeft = void 0,
		    scrollTop = void 0,
		    top = void 0,
		    translates = void 0,
		    transX = void 0,
		    transY = void 0;
		box = elm.getBoundingClientRect();
		body = document.body;
		docEl = document.documentElement;
		scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;
		scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;
		clientTop = docEl.clientTop || body.clientTop || 0;
		clientLeft = docEl.clientLeft || body.clientLeft || 0;
		// translates = __getTranslateProperties(elm);
		// transX = translates.x;
		// transY = translates.y;
		top = box.top + scrollTop - clientTop;
		left = box.left + scrollLeft - clientLeft;
		return {
			top: Math.round(top),
			left: Math.round(left)
		};
	}

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SShareComponent = __webpack_require__(395);

	var _SShareComponent2 = _interopRequireDefault(_SShareComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SShareComponent2.default.define('s-share', _SShareComponent2.default, 'a');

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SAnchorWebComponent2 = __webpack_require__(396);

	var _SAnchorWebComponent3 = _interopRequireDefault(_SAnchorWebComponent2);

	var _sharerNpm = __webpack_require__(421);

	var _sharerNpm2 = _interopRequireDefault(_sharerNpm);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 	SShareComponent
	 * @extends 	SAnchorWebComponent
	 * Easily create some share buttons to target facebook, twitter, linkedin, google+, etc...
	 *
	 * @example 	html
	 * <a is="s-share" href="#" platform="facebook" title="Share on facebook">
	 * 	Share on facebook
	 * </a>
	 *
	 * @author 	Olivier Bossel <olivier.bossel@gmail.com>
	 */

	/**
	 * @name 			Share
	 * Easily create some share buttons to target facebook, twitter, linkedin, google+, etc...
	 * @styleguide  	Objects / Share
	 *
	 * @example 		html
	 * <a is="s-share" href="#" platform="facebook" title="Share on facebook">
	 * 	Share on facebook
	 * </a>
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SShareComponent = function (_SAnchorWebComponent) {
		_inherits(SShareComponent, _SAnchorWebComponent);

		function SShareComponent() {
			_classCallCheck(this, SShareComponent);

			return _possibleConstructorReturn(this, (SShareComponent.__proto__ || Object.getPrototypeOf(SShareComponent)).apply(this, arguments));
		}

		_createClass(SShareComponent, [{
			key: 'componentWillMount',


			/**
	   * Component will mount
	  	 * @definition 		SWebComponent.componentWillMount
	   * @protected
	   */
			value: function componentWillMount() {
				_get(SShareComponent.prototype.__proto__ || Object.getPrototypeOf(SShareComponent.prototype), 'componentWillMount', this).call(this);
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				_get(SShareComponent.prototype.__proto__ || Object.getPrototypeOf(SShareComponent.prototype), 'componentMount', this).call(this);

				// list all attributes available for each platforms
				this._platformAttrs = {
					twitter: ['title', 'url', 'hashtags', 'via'],
					facebook: ['url'],
					linkedin: ['url'],
					googleplus: ['url'],
					email: ['title', 'url', 'to', 'subject'],
					whatsapp: ['title', 'url'],
					telegram: ['title', 'url'],
					viber: ['title', 'url'],
					pinterest: ['url', 'image', 'description'],
					tumblr: ['url', 'title', 'caption', 'tags'],
					hackernews: ['url', 'title'],
					reddit: ['url'],
					vk: ['url', 'title', 'image', 'caption'],
					buffer: ['url', 'title', 'via', 'picture'],
					xing: ['url', 'title'],
					line: ['url', 'title'],
					instapaper: ['url', 'title', 'description'],
					pocket: ['url'],
					digg: ['url'],
					stumbleupon: ['title', 'url'],
					flipboard: ['title', 'url'],
					weibo: ['url', 'title', 'image', 'apikey', 'relateui'],
					renren: ['url'],
					myspace: ['url', 'title', 'description'],
					blogger: ['url', 'title', 'description'],
					baidu: ['url', 'title'],
					okru: ['url', 'title']
				};

				// listen for click on the element
				this.addEventListener('click', this._onClick.bind(this));
			}

			/**
	   * Component unmount
	   * @definition 		SWebComponent.componentUnmount
	   * @protected
	   */

		}, {
			key: 'componentUnmount',
			value: function componentUnmount() {
				_get(SShareComponent.prototype.__proto__ || Object.getPrototypeOf(SShareComponent.prototype), 'componentUnmount', this).call(this);
			}

			/**
	   * Component will receive prop
	   * @definition 		SWebComponent.componentWillReceiveProp
	   * @protected
	   */

		}, {
			key: 'componentWillReceiveProp',
			value: function componentWillReceiveProp(name, newVal, oldVal) {
				switch (name) {}
			}

			/**
	   * Render the component
	   * Here goes the code that reflect the this.props state on the actual html element
	   * @definition 		SWebComponent.render
	   * @protected
	   */

		}, {
			key: 'render',
			value: function render() {
				_get(SShareComponent.prototype.__proto__ || Object.getPrototypeOf(SShareComponent.prototype), 'render', this).call(this);
			}

			/**
	   * Get default share attributes
	   * @param 		{String} 		attr 		The attribute name to process
	   * @return 		{String} 					The default attribute
	   */

		}, {
			key: '_getDefaultShareAttriute',
			value: function _getDefaultShareAttriute(attr) {
				switch (attr) {
					case 'title':
					case 'subject':
					case 'caption':
						return document.title;
						break;
					case 'description':
						var descElm = document.querySelector('meta[name="description"]');
						if (descElm && descElm.content) return descElm.content;
						break;
					case 'url':
						var href = this.getAttribute('href');
						return href && href !== '#' ? href : document.location.href;
						break;
				}
				return null;
			}

			/**
	   * Handle click
	   * @param 		{Event} 		e 		The click event
	   */

		}, {
			key: '_onClick',
			value: function _onClick(e) {
				var _this2 = this;

				e.preventDefault();
				// loop on platform attributes
				if (!this._platformAttrs[this.props.platform]) return;
				this.setAttribute('data-sharer', this.props.platform);
				this._platformAttrs[this.props.platform].forEach(function (attr) {
					if (_this2.hasAttribute('data-' + attr)) return;
					var val = _this2.props[attr];
					if (!val) {
						val = _this2._getDefaultShareAttriute(attr);
					}
					if (val) {
						_this2.setAttribute('data-' + attr, val);
					}
				});

				// create a new sharer
				var sharer = new _sharerNpm2.default(this);
				sharer.share();
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   * @protected
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t' + componentNameDash + ' {\n\t\t\t\tdisplay : block;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {
					/**
	     * On which platform to share the content
	     * @prop
	     * @type 		{String}
	     */
					platform: null,

					/**
	     * Set the title to share
	     * @prop
	     * @type 		{String}
	     * @default 	document.title
	     */
					title: null,

					/**
	     * Set the url to share
	     * @prop
	     * @type 		{String}
	     * @default 	document.location.href
	     */
					url: null,

					/**
	     * Set a username to tweet through without @
	     * @prop
	     * @type 		{String}
	     */
					via: null,

					/**
	     * Set some hashtags to add to tweet comma separated without #
	     * @prop
	     * @type 		{String}
	     */
					hashtags: null,

					/**
	     * Set an email address to share to
	     * @prop
	     * @type 		{String}
	     */
					to: null,

					/**
	     * Set the email subject
	     * @prop
	     * @type 		{String}
	     * @default 	document.title
	     */
					subject: null,

					/**
	     * Set the absolute image url to share through (pinterest,vk,weibo)
	     * @prop
	     * @type 		{String}
	     */
					image: null,

					/**
	     * Set the description to share (pinterest,instapaper,myspace,blogger,)
	     * @prop
	     * @type 		{String}
	     * @default 	meta[description]
	     */
					description: null,

					/**
	     * Set the caption to share (tumblr,vk)
	     * @prop
	     * @type 		{String}
	     * @default 	document.title
	     */
					caption: null,

					/**
	     * Set the tags to share comma separated (tumblr)
	     * @prop
	     * @type 		{String}
	     */
					tags: null
				};
			}

			/**
	   * Required props
	   * @definition 		SWebComponent.requiredProps
	   * @protected
	   */

		}, {
			key: 'requiredProps',
			get: function get() {
				return ['platform'];
			}
		}]);

		return SShareComponent;
	}(_SAnchorWebComponent3.default);

	exports.default = SShareComponent;

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(397);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SAnchorWebComponent = function (_native) {
	  _inherits(SAnchorWebComponent, _native);

	  function SAnchorWebComponent() {
	    _classCallCheck(this, SAnchorWebComponent);

	    return _possibleConstructorReturn(this, (SAnchorWebComponent.__proto__ || Object.getPrototypeOf(SAnchorWebComponent)).apply(this, arguments));
	  }

	  return SAnchorWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLAnchorElement));

	exports.default = SAnchorWebComponent;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(398);

	var _SWebComponentMixin = __webpack_require__(399);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(398);

	var _autoCast = __webpack_require__(400);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(401);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(402);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(403);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(405);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(406);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(413);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(414);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(416);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(417);
	__webpack_require__(418);
	__webpack_require__(419);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 400 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 401 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 402 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(404);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(406);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(409);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(410);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(411);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(407);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(408);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 407 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(407);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 409 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 410 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(412);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 412 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 413 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(415);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 415 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(403);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(420);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 420 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 421 */
/***/ function(module, exports) {

	/**
	 * @preserve
	 * Sharer.js
	 *
	 * @description Create your own social share buttons
	 * @version 0.2.12
	 * @author Ellison Leao <ellisonleao@gmail.com>
	 * @license GPLv3
	 *
	 */

	/**
	 * @constructor
	 */
	var Sharer = function(elem) {
	    this.elem = elem;
	};

	Sharer.prototype = {
	    /**
	     *  @function getValue
	     *  @description Helper to get the attribute of a DOM element
	     *  @param {String} attr DOM element attribute
	     *  @returns {String|Empty} returns the attr value or empty string
	     */
	    getValue: function(attr) {
	        var val = this.elem.getAttribute('data-' + attr);
	        return (val === undefined || val === null) ? false : val;
	    },

	    /**
	     * @event share
	     * @description Main share event. Will pop a window or redirect to a link
	     * based on the data-sharer attribute.
	     */
	    share: function() {
	        var sharer = this.getValue('sharer').toLowerCase(),
	            sharers = {
	                facebook: {
	                    shareUrl: 'https://www.facebook.com/sharer/sharer.php',
	                    params: {u: this.getValue('url')}
	                },
	                googleplus: {
	                    shareUrl: 'https://plus.google.com/share',
	                    params: {url: this.getValue('url')}
	                },
	                linkedin: {
	                    shareUrl: 'https://www.linkedin.com/shareArticle',
	                    params: {
	                        url: this.getValue('url'),
	                        mini: true
	                    }
	                },
	                twitter: {
	                    shareUrl: 'https://twitter.com/intent/tweet/',
	                    params: {
	                        text: this.getValue('title'),
	                        url: this.getValue('url'),
	                        hashtags: this.getValue('hashtags'),
	                        via: this.getValue('via')
	                    }
	                },
	                email: {
	                    shareUrl: 'mailto:' + this.getValue('to'),
	                    params: {
	                        subject: this.getValue('subject'),
	                        body: this.getValue('title') + '\n' + this.getValue('url')
	                    },
	                    isLink: true
	                },
	                whatsapp: {
	                    shareUrl: 'whatsapp://send',
	                    params: {
	                        text: this.getValue('title') + ' ' + this.getValue('url')
	                    },
	                    isLink: true
	                },
	                telegram: {
	                    shareUrl: 'tg://msg_url',
	                    params: {
	                        text: this.getValue('title') + ' ' + this.getValue('url')
	                    },
	                    isLink: true
	                },
	                viber: {
	                    shareUrl: 'viber://forward',
	                    params: {
	                        text: this.getValue('title') + ' ' + this.getValue('url')
	                    },
	                    isLink: true
	                },
	                line: {
	                    shareUrl: 'http://line.me/R/msg/text/?' + encodeURIComponent(this.getValue('title') + ' ' + this.getValue('url')),
	                    isLink: true
	                },
	                pinterest: {
	                    shareUrl: 'https://www.pinterest.com/pin/create/button/',
	                    params: {url: this.getValue('url')}
	                },
	                tumblr: {
	                    shareUrl: 'http://tumblr.com/widgets/share/tool',
	                    params: {
	                        canonicalUrl: this.getValue('url'),
	                        content: this.getValue('url'),
	                        posttype: 'link',
	                        title: this.getValue('title'),
	                        caption: this.getValue('caption'),
	                        tags: this.getValue('tags')
	                    }
	                },
	                hackernews: {
	                    shareUrl: 'https://news.ycombinator.com/submitlink',
	                    params: {
	                        u: this.getValue('url'),
	                        t: this.getValue('title')
	                    }
	                },
	                reddit: {
	                    shareUrl: 'https://www.reddit.com/submit',
	                    params: {'url': this.getValue('url')}
	                },
	                vk: {
	                    shareUrl: 'http://vk.com/share.php',
	                    params: {
	                        url: this.getValue('url'),
	                        title: this.getValue('title'),
	                        description: this.getValue('caption'),
	                        image: this.getValue('image')
	                    }
	                },
	                xing: {
	                    shareUrl: 'https://www.xing.com/app/user',
	                    params: {
	                        'op': 'share',
	                        'url': this.getValue('url'),
	                        'title': this.getValue('title')
	                    }
	                },
	                buffer: {
	                    shareUrl: 'https://buffer.com/add',
	                    params: {
	                        url: this.getValue('url'),
	                        title: this.getValue('title'),
	                        via: this.getValue('via'),
	                        picture: this.getValue('picture')
	                    }
	                },
	                instapaper: {
	                    shareUrl: 'http://www.instapaper.com/edit',
	                    params: {
	                        url: this.getValue('url'),
	                        title: this.getValue('title'),
	                        description: this.getValue('description')
	                    }
	                },
	                pocket: {
	                    shareUrl: 'https://getpocket.com/save',
	                    params: {
	                        url: this.getValue('url')
	                    }
	                },
	                digg: {
	                    shareUrl: 'http://www.digg.com/submit',
	                    params: {
	                        url: this.getValue('url')
	                    }
	                },
	                stumbleupon: {
	                    shareUrl: 'http://www.stumbleupon.com/submit',
	                    params: {
	                        url: this.getValue('url'),
	                        title: this.getValue('title')
	                    }
	                },
	                flipboard: {
	                    shareUrl: 'https://share.flipboard.com/bookmarklet/popout',
	                    params: {
	                        v: 2,
	                        title: this.getValue('title'),
	                        url: this.getValue('url'),
	                        t: Date.now()
	                    }
	                },
	                weibo: {
	                    shareUrl: 'http://service.weibo.com/share/share.php',
	                    params: {
	                        url: this.getValue('url'),
	                        title: this.getValue('title'),
	                        language: 'zh_cn'
	                    }
	                },
	                renren: {
	                    shareUrl: 'http://share.renren.com/share/buttonshare',
	                    params: {
	                        link: this.getValue('url')
	                    }
	                },
	                myspace: {
	                    shareUrl: 'https://myspace.com/post',
	                    params: {
	                        u: this.getValue('url'),
	                        t: this.getValue('title'),
	                        c: this.getValue('description')
	                    }
	                },
	                blogger: {
	                    shareUrl: 'https://www.blogger.com/blog-this.g',
	                    params: {
	                        u: this.getValue('url'),
	                        n: this.getValue('title'),
	                        t: this.getValue('description')
	                    }
	                },
	                baidu: {
	                    shareUrl: 'http://cang.baidu.com/do/add',
	                    params: {
	                        it: this.getValue('title'),
	                        iu: this.getValue('url')
	                    }
	                },
	                hatenabookmark: {
	                    shareUrl: 'http://b.hatena.ne.jp/entry/' + this.getValue('url'),
	                }
	            },
	            s = sharers[sharer];

	        // custom popups sizes
	        if (s) {
	            s.width = this.getValue('width');
	            s.height = this.getValue('height');
	        }
	        return s !== undefined ? this.urlSharer(s) : false;
	    },
	    /**
	     * @event urlSharer
	     * @param {Object} sharer
	     */
	    urlSharer: function(sharer) {
	        var p = sharer.params || {},
	            keys = Object.keys(p),
	            i,
	            str = keys.length > 0 ? '?' : '';
	        for (i = 0; i < keys.length; i++) {
	            if (str !== '?') {
	                str += '&';
	            }
	            if (p[keys[i]]) {
	                str += keys[i] + '=' + encodeURIComponent(p[keys[i]]);
	            }
	        }
	        sharer.shareUrl += str;

	        if (!sharer.isLink) {
	            var popWidth = sharer.width || 600,
	                popHeight = sharer.height || 480,
	                left = window.innerWidth / 2 - popWidth / 2 + window.screenX,
	                top = window.innerHeight / 2 - popHeight / 2 + window.screenY,
	                popParams = 'scrollbars=no, width=' + popWidth + ', height=' + popHeight + ', top=' + top + ', left=' + left,
	                newWindow = window.open(sharer.shareUrl, '', popParams);

	            if (window.focus) {
	                newWindow.focus();
	            }
	        } else {
	            window.location.href = sharer.shareUrl;
	        }
	    }
	};

	module.exports = Sharer;


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SITypedComponent = __webpack_require__(423);

	var _SITypedComponent2 = _interopRequireDefault(_SITypedComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SITypedComponent2.default.define('s-i-typed', _SITypedComponent2.default);

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _SWebComponent2 = __webpack_require__(424);

	var _SWebComponent3 = _interopRequireDefault(_SWebComponent2);

	var _ityped = __webpack_require__(449);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * @name 		SITypedComponent
	 * @extends 	SWebComponent
	 * Webcomponent wrapper around the freaking cool iTyped micro library to create nice typewriter effect.
	 *
	 * @styleguide 	Objects / ITyped
	 * @example 	html
	 * Hello <s-i-typed strings="['Univers']" loop="true">World</s-i-typed>
	 * @see 		https://github.com/luisvinicius167/ityped
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	var SITypedComponent = function (_SWebComponent) {
		_inherits(SITypedComponent, _SWebComponent);

		function SITypedComponent() {
			_classCallCheck(this, SITypedComponent);

			return _possibleConstructorReturn(this, (SITypedComponent.__proto__ || Object.getPrototypeOf(SITypedComponent)).apply(this, arguments));
		}

		_createClass(SITypedComponent, [{
			key: 'shouldAcceptComponentProp',


			/**
	   * Should component accept prop
	   * @definition 		SWebComponent.shouldComponentAcceptProp
	   * @protected
	   */
			value: function shouldAcceptComponentProp(prop) {
				return true;
			}

			/**
	   * Component will mount
	   * @definition 		SWebComponent.componentWillMount
	   * @protected
	   */

		}, {
			key: 'componentWillMount',
			value: function componentWillMount() {
				_get(SITypedComponent.prototype.__proto__ || Object.getPrototypeOf(SITypedComponent.prototype), 'componentWillMount', this).call(this);
			}

			/**
	   * Mount component
	   * @definition 		SWebComponent.componentMount
	   * @protected
	   */

		}, {
			key: 'componentMount',
			value: function componentMount() {
				_get(SITypedComponent.prototype.__proto__ || Object.getPrototypeOf(SITypedComponent.prototype), 'componentMount', this).call(this);

				this.props.strings.unshift(this.innerHTML);
				this.innerHTML = '';

				console.log(this.props.loop);

				console.log('this', this);

				// init the iTyped library
				(0, _ityped.init)(this, this.props);
			}
		}], [{
			key: 'defaultCss',


			/**
	   * Css
	   * @protected
	   */
			value: function defaultCss(componentName, componentNameDash) {
				return '\n\t\t\t@keyframes s-i-typed-blink {\n\t\t\t\t100% {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-webkit-keyframes s-i-typed-blink {\n\t\t\t\t100% {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-moz-keyframes s-i-typed-blink {\n\t\t\t\t100% {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.ityped-cursor {\n\t\t\t\tfont-size: 1em;\n\t\t\t\topacity: 1;\n\t\t\t\t-webkit-animation: s-i-typed-blink 0.3s infinite;\n\t\t\t\t-moz-animation: s-i-typed-blink 0.3s infinite;\n\t\t\t\tanimation: s-i-typed-blink 0.3s infinite;\n\t\t\t\tanimation-direction: alternate;\n\t\t\t}\n\t\t\t' + componentNameDash + ' {\n\t\t\t}\n\t\t';
			}
		}, {
			key: 'defaultProps',


			/**
	   * Default props
	   * @definition 		SWebComponent.defaultProps
	   * @protected
	   */
			get: function get() {
				return {
					/**
	     * Accept all the settings of the iTyped library
	     * @type 	{Object}
	     * @prop
	     * @name 	iTyped
	     * @see 	https://github.com/luisvinicius167/ityped
	     */

					/**
	     * Set the strings to pass through
	     * @prop
	     * @type 		{Array}
	     */
					strings: []
				};
			}
		}]);

		return SITypedComponent;
	}(_SWebComponent3.default);

	exports.default = SITypedComponent;

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _sNativeWebComponent = __webpack_require__(425);

	var _sNativeWebComponent2 = _interopRequireDefault(_sNativeWebComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SVideoWebComponent = function (_native) {
	  _inherits(SVideoWebComponent, _native);

	  function SVideoWebComponent() {
	    _classCallCheck(this, SVideoWebComponent);

	    return _possibleConstructorReturn(this, (SVideoWebComponent.__proto__ || Object.getPrototypeOf(SVideoWebComponent)).apply(this, arguments));
	  }

	  return SVideoWebComponent;
	}((0, _sNativeWebComponent2.default)(HTMLElement));

	exports.default = SVideoWebComponent;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = sNativeWebComponent;

	var _mixwith = __webpack_require__(426);

	var _SWebComponentMixin = __webpack_require__(427);

	var _SWebComponentMixin2 = _interopRequireDefault(_SWebComponentMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function sNativeWebComponent(HTMLElementToExtend) {
		if (typeof HTMLElementToExtend !== 'function') {
			var _HTMLElementToExtend = function _HTMLElementToExtend() {};
			_HTMLElementToExtend.prototype = HTMLElementToExtend.prototype;
			HTMLElementToExtend = _HTMLElementToExtend;
		}
		return (0, _mixwith.mix)(HTMLElementToExtend).with(_SWebComponentMixin2.default);
	}

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.mixwith = mod.exports;
	  }
	})(undefined, function (exports) {
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  var _appliedMixin = '__mixwith_appliedMixin';

	  var apply = exports.apply = function (superclass, mixin) {
	    var application = mixin(superclass);
	    application.prototype[_appliedMixin] = unwrap(mixin);
	    return application;
	  };

	  var isApplicationOf = exports.isApplicationOf = function (proto, mixin) {
	    return proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);
	  };

	  var hasMixin = exports.hasMixin = function (o, mixin) {
	    while (o != null) {
	      if (isApplicationOf(o, mixin)) return true;
	      o = Object.getPrototypeOf(o);
	    }
	    return false;
	  };

	  var _wrappedMixin = '__mixwith_wrappedMixin';

	  var wrap = exports.wrap = function (mixin, wrapper) {
	    Object.setPrototypeOf(wrapper, mixin);
	    if (!mixin[_wrappedMixin]) {
	      mixin[_wrappedMixin] = mixin;
	    }
	    return wrapper;
	  };

	  var unwrap = exports.unwrap = function (wrapper) {
	    return wrapper[_wrappedMixin] || wrapper;
	  };

	  var _cachedApplications = '__mixwith_cachedApplications';

	  var Cached = exports.Cached = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      // Get or create a symbol used to look up a previous application of mixin
	      // to the class. This symbol is unique per mixin definition, so a class will have N
	      // applicationRefs if it has had N mixins applied to it. A mixin will have
	      // exactly one _cachedApplicationRef used to store its applications.

	      var cachedApplications = superclass[_cachedApplications];
	      if (!cachedApplications) {
	        cachedApplications = superclass[_cachedApplications] = new Map();
	      }

	      var application = cachedApplications.get(mixin);
	      if (!application) {
	        application = mixin(superclass);
	        cachedApplications.set(mixin, application);
	      }

	      return application;
	    });
	  };

	  var DeDupe = exports.DeDupe = function (mixin) {
	    return wrap(mixin, function (superclass) {
	      return hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass);
	    });
	  };

	  var HasInstance = exports.HasInstance = function (mixin) {
	    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {
	      Object.defineProperty(mixin, Symbol.hasInstance, {
	        value: function value(o) {
	          return hasMixin(o, mixin);
	        }
	      });
	    }
	    return mixin;
	  };

	  var BareMixin = exports.BareMixin = function (mixin) {
	    return wrap(mixin, function (s) {
	      return apply(s, mixin);
	    });
	  };

	  var Mixin = exports.Mixin = function (mixin) {
	    return DeDupe(Cached(BareMixin(mixin)));
	  };

	  var mix = exports.mix = function (superclass) {
	    return new MixinBuilder(superclass);
	  };

	  var MixinBuilder = function () {
	    function MixinBuilder(superclass) {
	      _classCallCheck(this, MixinBuilder);

	      this.superclass = superclass || function () {
	        function _class() {
	          _classCallCheck(this, _class);
	        }

	        return _class;
	      }();
	    }

	    _createClass(MixinBuilder, [{
	      key: 'with',
	      value: function _with() {
	        for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
	          mixins[_key] = arguments[_key];
	        }

	        return mixins.reduce(function (c, m) {
	          return m(c);
	        }, this.superclass);
	      }
	    }]);

	    return MixinBuilder;
	  }();
	});

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _mixwith = __webpack_require__(426);

	var _autoCast = __webpack_require__(428);

	var _autoCast2 = _interopRequireDefault(_autoCast);

	var _extend2 = __webpack_require__(58);

	var _extend3 = _interopRequireDefault(_extend2);

	var _camelize = __webpack_require__(429);

	var _camelize2 = _interopRequireDefault(_camelize);

	var _upperFirst = __webpack_require__(430);

	var _upperFirst2 = _interopRequireDefault(_upperFirst);

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(431);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	var _whenInViewport = __webpack_require__(433);

	var _whenInViewport2 = _interopRequireDefault(_whenInViewport);

	var _whenVisible = __webpack_require__(434);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _prependChild = __webpack_require__(441);

	var _prependChild2 = _interopRequireDefault(_prependChild);

	var _SWatcher = __webpack_require__(442);

	var _SWatcher2 = _interopRequireDefault(_SWatcher);

	var _propertyProxy = __webpack_require__(444);

	var _propertyProxy2 = _interopRequireDefault(_propertyProxy);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(445);
	__webpack_require__(446);
	__webpack_require__(447);

	// require('document-register-element');

	/**
	 * @name 		SWebComponent
	 * @extends 	HTMLElement
	 * Base class that abstract a lot of dirty work in order to create nice and clean webcomponents.
	 * Features:
	 * - Listen for attributes changes
	 * - Mount the component at a certain point in time (inViewport, visible, etc...)
	 * - **Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)
	 * - **Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose
	 * - Define some **default CSS** that will be injected in the head automatically
	 * - Specify some **required props**
	 * - **Full lifecycle management**:
	 * 	- componentCreated
	 * 	- componentWillMount
	 * 	- componentMount
	 * 	- componentDidMount
	 * 	- componentWillReceiveProp
	 * 	- componentWillReceiveProps
	 * 	- componentWillUpdate
	 * 	- render
	 * 	- componentDidUpdate
	 * 	- componentWillUnmount
	 * 	- componentUnmount
	 * 	- componentDidUnmount
	 * - **Mount dependencies** : This will allows you to set some promises that havwe to be resolved before mounting the component
	 *
	 * @example 	js
	 * import SWebComponent from 'coffeekraken-sugar/js/core/SWebComponent'
	 * class MyCoolComponent extends SWebComponent {
	 *
	 *	\/**
	 * 	 * Default props
	 * 	 * @definition 		SWebComponent.defaultProps
	 * 	 * @protected
	 * 	 *\/
	 * 	static get defaultProps() {
	 * 		return {
	 * 		};
	 * 	}
	 *
	 * 	\/**
	 * 	 * Css
	 * 	 * @protected
	 * 	 *\/
	 * 	static defaultCss(componentName, componentNameDash) {
	 * 		return `
	 * 			${componentNameDash} {
	 * 				display : block;
	 * 			}
	 * 		`;
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will mount
	 *  	 * @definition 		SWebComponent.componentWillMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillMount() {
	 * 		super.componentWillMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Mount component
	 * 	 * @definition 		SWebComponent.componentMount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentMount() {
	 * 		super.componentMount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component unmount
	 * 	 * @definition 		SWebComponent.componentUnmount
	 * 	 * @protected
	 * 	 *\/
	 * 	componentUnmount() {
	 * 		super.componentUnmount();
	 * 	}
	 *
	 * 	\/**
	 * 	 * Component will receive prop
	 * 	 * @definition 		SWebComponent.componentWillReceiveProp
	 * 	 * @protected
	 * 	 *\/
	 * 	componentWillReceiveProp(name, newVal, oldVal) {
	 * 		switch(name) {
	 * 		}
	 * 	}
	 *
	 * 	\/**
	 * 	 * Render the component
	 * 	 * Here goes the code that reflect the this.props state on the actual html element
	 * 	 * @definition 		SWebComponent.render
	 * 	 * @protected
	 * 	 *\/
	 * 	render() {
	 * 		super.render();
	 * 	}
	 * }
	 *
	 * // define your component
	 * MyCoolComponent.define('my-cool-component', MyCoolComponent);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */

	if (!window.sugar) window.sugar = {};
	if (!window.sugar._webComponentsClasses) window.sugar._webComponentsClasses = {};
	if (!window.sugar._webComponentsDefaultProps) window.sugar._webComponentsDefaultProps = {};
	if (!window.sugar._webComponentsDefaultCss) window.sugar._webComponentsDefaultCss = {};

	var SWebComponentMixin = (0, _mixwith.Mixin)(function (superclass) {
		return function (_superclass) {
			_inherits(_class2, _superclass);

			_createClass(_class2, [{
				key: 'defaultProps',


				/**
	    * Get the default props for this particular instance
	    * @type  		{Object}
	    */
				get: function get() {

					// check if default props in cache to avoid multiple time
					// computing
					if (this._defaultPropsCache) return this._defaultPropsCache;

					// compute
					var props = window.sugar._webComponentsClasses[this.componentName].defaultProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultProps) {
							props = _extends({}, comp.defaultProps, props);
						}
						if (comp._defaultProps) {
							props = _extends({}, props, comp._defaultProps);
						}
						comp = Object.getPrototypeOf(comp);
					}
					// extend with default props stored in the component default props stack by tagname
					if (window.sugar._webComponentsDefaultProps[this.componentName]) {
						props = _extends({}, props, window.sugar._webComponentsDefaultProps[this.componentName]);
					}

					// save in cache
					this._defaultPropsCache = Object.assign({}, props);

					// return props
					return props;
				}

				/**
	    * Return an array of props to set on the dom
	    * @return 		{Array}
	    */

			}, {
				key: 'physicalProps',


				/**
	    * Get physical props for this particular instance
	    * @return 		{Array} 			The physical props array
	    */
				get: function get() {

					if (this._physicalPropsCache) return this._physicalPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].physicalProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.physicalProps) {
							comp.physicalProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._physicalPropsCache = props;

					return props;
				}

				/**
	    * Return an array of required props to init the component
	    * @return 		{Array}
	    */

			}, {
				key: 'requiredProps',


				/**
	    * Get the required props array for this particular instance
	    * @return 		{Array} 			An array of required props
	    */
				get: function get() {

					if (this._requiredPropsCache) return this._requiredPropsCache;

					var props = window.sugar._webComponentsClasses[this.componentName].requiredProps;
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.requiredProps) {
							comp.requiredProps.forEach(function (prop) {
								if (props.indexOf(prop) === -1) {
									props.push(prop);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._requiredPropsCache = props;

					return props;
				}

				/**
	    * Specify the default css for the component
	    * @param 		{String} 		componentName 		The camelcase component name
	    * @param 		{String} 		componentNameDash 	The dashcase component name
	    * @return 		{String} 							The default css for the component
	    */

			}, {
				key: 'defaultCss',


				/**
	    * Get the default css of the component
	    * @type 		{String}
	    */
				get: function get() {

					if (this._defaultCssCache) return this._defaultCssCache;

					var css = '';
					var comp = window.sugar._webComponentsClasses[this.componentName];
					while (comp) {
						if (comp.defaultCss) {
							css += comp.defaultCss(this.componentName, this.componentNameDash);
						}
						comp = Object.getPrototypeOf(comp);
					}

					this._defaultCssCache = css;

					return css;
				}

				/**
	    * Return an array of props to set on the dom
	    * @type 		{Array}
	    */

			}, {
				key: 'mountDependencies',


				/**
	    * Get an array of promises to resolve before mounting the component.
	    * @type 		{Array<Promise>}
	    */
				get: function get() {
					var _this2 = this;

					var deps = [];
					var comp = Object.getPrototypeOf(window.sugar._webComponentsClasses[this.componentName]);
					while (comp) {
						if (comp.mountDependencies) {
							comp.mountDependencies.forEach(function (dep) {
								if (deps.indexOf(dep) === -1) {
									deps.push(dep);
								}
							});
						}
						comp = Object.getPrototypeOf(comp);
					}

					// props mount dependencies
					var propsDeps = [].concat(this.props.mountDependencies);
					var finalDeps = [];
					finalDeps = finalDeps.concat(this.props.mountDependencies);
					deps.forEach(function (dep) {
						if (typeof dep === 'function') {
							dep = dep.bind(_this2);
							dep = dep();
						}
						finalDeps.push(dep);
					});
					return finalDeps;
				}

				/**
	    * Constructor
	    * @protected
	    */

			}], [{
				key: 'define',


				/**
	    * Define the new web component
	    * @param 			{String} 			name 		The name of the component
	    * @param 			{SWebComponent} 	component 	The component class
	    * @param 			{Object|String}		ext 		An object or string of base HTMLElement to extend
	    */
				value: function define(name, component) {
					var ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


					var componentName = (0, _upperFirst2.default)((0, _camelize2.default)(name));
					var componentNameDash = name;

					if (window.sugar._webComponentsClasses[componentName]) return;
					window.sugar._webComponentsClasses[componentName] = component;

					// register the webcomponent
					if (document.registerElement) {
						document.registerElement(name, {
							prototype: component.prototype,
							extends: ext
						});
					} else if (window.customElements) {
						window.customElements.define(name, component, {
							extends: ext
						});
					} else {
						throw 'Your browser does not support either document.registerElement or window.customElements.define webcomponents specification...';
					}

					// create a proxy factory
					var webcomponent = function webcomponent() {
						var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

						if (ext) {
							return document.createElement(ext, name).setProps(props);
						}
						return document.createElement(name).setProps(props);
					};

					// fix for firefox and surely other crapy browser...
					// this make sur that the (static) methods of the component
					// are present on the webcomponent itself
					Object.keys(component).forEach(function (key) {
						if (!webcomponent[key]) {
							webcomponent[key] = component[key];
						}
					});

					// handle css
					component._injectDefaultCss(component, componentName, componentNameDash);

					// return the webcomponent instance
					return webcomponent;
				}

				/**
	    * Inject css into html
	    * @param 		{HTMLElement}	componentClass 		The component class for which to inject the base css
	    * @param 		{String} 		componentName 		The component name
	    * @param 		{String} 		componentNameDash 	The dash formated component name
	    */

			}, {
				key: '_injectDefaultCss',
				value: function _injectDefaultCss(componentClass, componentName, componentNameDash) {
					// check if component has a css to be injected into the page
					if (window.sugar._webComponentsDefaultCss[componentName] === undefined) {
						var css = '';
						var comp = componentClass;
						while (comp) {
							if (comp.defaultCss) {
								css += comp.defaultCss(componentName, componentNameDash);
							}
							comp = Object.getPrototypeOf(comp);
						}
						if (css) {
							css = css.replace(/[\s]+/g, ' ');
							window.sugar._webComponentsDefaultCss[componentName] = css;
							// fastdom.mutate(() => {
							var styleElm = document.createElement('style');
							styleElm.setAttribute('name', componentName);
							styleElm.innerHTML = css;
							(0, _prependChild2.default)(styleElm, document.head);
							// document.head.appendChild(styleElm);
							// });
						} else {
							window.sugar._webComponentsDefaultCss[componentName] = false;
						}
					}
				}

				/**
	    * Store all the props of the component
	    * Props are actual computed props with attributes
	    * @type 		{Object}
	    */

			}, {
				key: 'setDefaultProps',


				/**
	    * Set some default props for a specific component
	    * @param 		{Object} 		props 			A props object to set
	    * @param 		{String} 		[tagname=null] 	The tagname of the component you want to setting up
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				value: function setDefaultProps(props) {
					var tagname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					// if a tagname is specified, we store the default props for a
					// particular tagname
					if (tagname) {
						tagname = [].concat(tagname);
						tagname.forEach(function (tag) {
							tag = (0, _upperFirst2.default)((0, _camelize2.default)(tag));
							window.sugar._webComponentsDefaultProps[tag] = _extends({}, window.sugar._webComponentsDefaultProps[tag] || {}, props);
						});
					} else {
						var proto = this;
						proto._defaultProps = _extends({}, proto._defaultProps || {}, props);
					}
				}
			}, {
				key: 'defaultCss',
				value: function defaultCss(componentName, componentNameDash) {
					return '';
				}
			}, {
				key: 'defaultProps',


				/**
	    * Return the default props for the component.
	    * Need to take care of the passed props parameter and mix it at the
	    * end of your default props
	    *
	    * @type 	{Object}
	    * @example
	    * getDefaultProps(props = {}) {
	    * 		return super.getDefaultProps({
	    * 			myCoolProp : null,
	    * 			...props
	    * 		});
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */
				get: function get() {
					return {
						mountWhen: null,
						mountDependencies: [],
						unmountTimeout: 500
					};
				}
			}, {
				key: 'physicalProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'requiredProps',
				get: function get() {
					return [];
				}
			}, {
				key: 'mountDependencies',
				get: function get() {
					return [];
				}
			}]);

			function _class2(_) {
				var _temp, _this, _ret;

				_classCallCheck(this, _class2);

				return _ret = ((_ = (_temp = (_this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, _)), _this), _this.props = {}, _temp)).init(), _), _possibleConstructorReturn(_this, _ret);
			}

			_createClass(_class2, [{
				key: 'init',
				value: function init() {
					this.createdCallback();
				}

				/**
	    * When the component is created.
	    * This is called even if the component is not attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'createdCallback',
				value: function createdCallback() {

					// create the "s" namespace
					this.s = {};

					// props
					this.props = {};

					// track the lifecyle
					this._lifecycle = {
						componentWillMount: false,
						componentMount: false,
						componentDidMount: false,
						componentWillUnmount: false,
						componentUnmount: false,
						componentDidUnmount: false
					};

					// init watcher
					this._sWatcher = new _SWatcher2.default();

					// set the componentName
					var sourceName = this.getAttribute('is') || this.tagName.toLowerCase();
					this.componentNameDash = this._componentNameDash = sourceName;
					this.componentName = this._componentName = (0, _upperFirst2.default)((0, _camelize2.default)(sourceName));

					// default props init
					this.props = Object.assign({}, this.defaultProps, this.props);

					// created callback
					this.componentCreated();

					// if ( ! document.body.contains(this)) return;
				}

				/**
	    * When the element is attached in the DOM tree
	    * @protected
	    */

			}, {
				key: 'connectedCallback',
				value: function connectedCallback() {
					var _this3 = this;

					// if not already passed through the created process
					if (!this._lifecycle) this.createdCallback();

					// component will mount only if part of the active document
					this.componentWillMount();

					// clear the unmount timeout
					clearTimeout(this._unmountTimeout);

					// update attached status
					this._componentAttached = true;

					// stop here if already mounted once
					if (this._lifecycle.componentMount) return;

					// wait until dependencies are ok
					this._whenMountDependenciesAreOk().then(function () {
						// switch on the mountWhen prop
						switch (_this3.props.mountWhen) {
							case 'inViewport':
							case 'isInViewport':
								(0, _whenInViewport2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							case 'isMouseover':
							case 'mouseover':
								_this3.addEventListener('mouseover', _this3._onMouseoverComponentMount.bind(_this3));
								break;
							case 'isVisible':
							case 'visible':
								(0, _whenVisible2.default)(_this3).then(function () {
									_this3._mountComponent();
								});
								break;
							default:
								// mount component directly
								_this3._mountComponent();
								break;
						}
					});
				}
			}, {
				key: 'attachedCallback',
				value: function attachedCallback() {
					this.connectedCallback();
				}

				/**
	    * When any of the component attribute changes
	    * @param 		{String} 		attribute 		The attribute name that has changed
	    * @param 		{String}		oldVal 			The previous attribute value
	    * @param 		{String} 		newVal 			The new attribute value
	    * @protected
	    */

			}, {
				key: 'attributeChangedCallback',
				value: function attributeChangedCallback(attribute, oldVal, newVal) {

					// stop if component has not been mounted
					// if ( ! this._lifecycle.componentWillMount) {
					// 	return;
					// }

					// keep an original attribute name
					var _attribute = attribute;

					// process the attribute to camelCase
					attribute = (0, _camelize2.default)(attribute);

					// if the property is not a real property
					if (!this.shouldAcceptComponentProp(attribute)) return;

					// cast the new val
					newVal = (0, _autoCast2.default)(newVal);

					// if the attribute is not already a props, init new prop
					if (this.props[attribute] === undefined) this._initNewProp(attribute, newVal);

					// handle the case when newVal is undefined (added attribute whithout any value)
					if (newVal === undefined && this.hasAttribute(_attribute)) {
						newVal = true;
					} else if (newVal === null && !this.hasAttribute(_attribute) && this.props[attribute] === false) {
						// the attribute has been removed and
						// the prop is already to false
						return;
					}

					// do nothing if the value is already the same
					if (this.props[attribute] === newVal) return;

					// set the new prop
					this.setProp(attribute, newVal);
				}

				/**
	    * Called directly when the component is created. This act like a constructor.
	    *
	    * @example
	    * componentCreated() {
	    * 		// call parent method
	    * 		super.componentCreated();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentCreated',
				value: function componentCreated() {}

				/**
	    * Method called before the component will actually mount and BEFORE the the mountDependencies to be resolved or not.
	    * This is a good place to do directl when the component is attached in the DOM but before any dependencies are resolved
	    *
	    * @example
	    * componentWillMount() {
	    * 		// call parent method
	    * 		super.componentWillMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _this4 = this;

					// protect from mounting multiple times when unecessary
					if (this._lifecycle.componentWillMount) return;

					// update lifecycle state
					this._lifecycle.componentWillMount = true;

					// dispatch event
					this.onComponentWillMount && this.onComponentWillMount();

					// internal properties
					this._nextPropsStack = {};
					this._prevPropsStack = {};
					this._componentAttached = false;
					this._fastdomSetProp = null;

					// compute props
					this._initInitialAttributes();

					// props proxy
					this._initPropsProxy();

					// listen for props updates to handle them
					for (var key in this.props) {
						// initNewProp
						this._initNewProp(key);
					}

					// check the required props
					this.requiredProps.forEach(function (prop) {
						if (!_this4.props[prop]) {
							throw 'The "' + _this4.componentNameDash + '" component need the "' + prop + '" property in order to work';
						}
					});
				}

				/**
	    * Method called right after that the component has been added in the dom,
	    * after and only if the mountDependencies are resolved
	    * and before the initial render.
	    *
	    * @example
	    * componentMount() {
	    * 		// call parent method
	    * 		super.componentMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentMount',
				value: function componentMount() {
					if (this._lifecycle.componentMount) return;
					// update the lifecycle state
					this._lifecycle.componentMount = true;
					// dispatch event
					this.onComponentMount && this.onComponentMount();
				}

				/**
	    * Method called after the initial component render
	    *
	    * @example
	    * componentDidMount() {
	    * 		// call parent method
	    * 		super.componentDidMount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidMount = true;
					// dispatch event
					this.onComponentDidMount && this.onComponentDidMount();
					// update lifecycle
					this._lifecycle.componentWillUnmount = false;
					this._lifecycle.componentUnmount = false;
					this._lifecycle.componentDidUnmount = false;
				}

				/**
	    * Method called right before the render when some props have been updated.
	    * This method is not called before the initial render
	    *
	    * @param 		{Object} 		nextProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		nextPropsArray 		An array representation of the nextProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentWillUpdate(nextProps, nextPropsArray) {
	    * 		// call parent method
	    * 		super.componentWillUpdate(nextProps, nextPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUpdate',
				value: function componentWillUpdate(nextProps) {
					// dispatch event
					this.onComponentWillUpdate && this.onComponentWillUpdate(nextProps);
				}

				/**
	    * Apply all the updated that you need in the dom for the component to reflect the props
	    *
	    * @example
	    * render() {
	    * 		// call the parent method
	    * 		super.render();
	    * 		// apply some classes, properties, styles, etc... in the dom
	    * 		// in order to reflect the props object state
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'render',
				value: function render() {
					// dispatch event
					this.onComponentRender && this.onComponentRender();
				}

				/**
	    * Method called right after the render when some props have been updated.
	    * This method is not called after the initial render
	    *
	    * @param 		{Object} 		prevProps 			An object that represent the props that have been updated
	    * @param 		{Array} 		prevPropsArray 		An array representation of the prevProps object [{name:...,value:...}]
	    *
	    * @example
	    * componentDidUpdate(prevProps, prevPropsArray) {
	    * 		// call parent method
	    * 		super.componentDidUpdate(prevProps, prevPropsArray);
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevPropsArray) {
					// dispatch event
					this.onComponentDidUpdate && this.onComponentDidUpdate(prevProps, prevPropsArray);
				}

				/**
	    * Method called before the component will unmount cause it has been removed from the DOM tree and that the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentWillUnmount() {
	    * 		// call parent method
	    * 		super.componentWillUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this._lifecycle.componentWillUnmount) return;
					// update lifecycle state
					this._lifecycle.componentWillUnmount = true;
					// dispatch event
					this.onComponentWillUnmount && this.onComponentWillUnmount();
				}

				/**
	    * Method called when the component need to unmount itself cause it has been removed from the DOM tree and the props.unmountTimeout is passed.
	    *
	    * @example
	    * componentUnmount() {
	    * 		// call parent method
	    * 		super.componentUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentUnmount',
				value: function componentUnmount() {
					if (this._lifecycle.componentUnmount) return;
					// update lifecycle state
					this._lifecycle.componentUnmount = true;
					// dispatch event
					this.onComponentUnmount && this.onComponentUnmount();
				}

				/**
	    * Method called when the component has been unmounted
	    *
	    * @example
	    * componentDidUnmount() {
	    * 		// call parent method
	    * 		super.componentDidUnmount();
	    * 		// do something here...
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentDidUnmount',
				value: function componentDidUnmount() {
					if (this._lifecycle.componentDidMount) return;
					// update lifecycle state
					this._lifecycle.componentDidUnmount = true;
					// destroy things
					this._sWatcher.destroy();
					// dispatch event
					this.onComponentDidUnmount && this.onComponentDidUnmount();
				}

				/**
	    * Check all the mountDependencies and try to resolve them.
	    * @return 			{Promise} 				A promise that will be resolved when the dependencies are resolved
	    */

			}, {
				key: '_whenMountDependenciesAreOk',
				value: function _whenMountDependenciesAreOk() {
					var _this5 = this;

					var promise = new Promise(function (resolve, reject) {
						var deps = _this5.mountDependencies;
						if (!deps.length) {
							resolve();
						} else {
							// resolve all the promises
							Promise.all(deps).then(function () {
								resolve();
							});
						}
					});
					return promise;
				}

				/**
	    * Init props proxy.
	    * This will create a getter/setter accessor on the item itself
	    * that get and update his corresponding props.{name} property
	    */

			}, {
				key: '_initPropsProxy',
				value: function _initPropsProxy() {
					var _this6 = this;

					var _loop = function _loop(key) {
						if (_this6.hasOwnProperty(key)) {
							console.warn('The component ' + _this6.componentNameDash + ' has already an "' + key + '" property... This property will not reflect the this.props[\'' + key + '\'] value... Try to use a property name that does not already exist on an HTMLElement...');
							return 'continue';
						}
						if (!key in _this6) {
							Object.defineProperty(_this6, key, {
								get: function get() {
									return _this6.props[key];
								},
								set: function set(value) {
									_this6.setProp(key, value);
								},
								enumarable: true
							});
						}
					};

					// loop on each props
					for (var key in this.defaultProps) {
						var _ret2 = _loop(key);

						if (_ret2 === 'continue') continue;
					}
				}

				/**
	    * On mouse over
	    */

			}, {
				key: '_onMouseoverComponentMount',
				value: function _onMouseoverComponentMount() {
					this._mountComponent();
					this.removeEventListener('mouseover', this._onMouseoverComponentMount);
				}

				/**
	    * Internal mount component method
	    */

			}, {
				key: '_mountComponent',
				value: function _mountComponent() {
					var _this7 = this;

					// wait next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = this.mutate(function () {
						// sometimes, the component has been unmounted between the
						// fastdom execution, so we stop here if it's the case
						if (!_this7._componentAttached) return;
						// init
						_this7.componentMount();
						// render
						_this7.render();
						// component did mount
						_this7.componentDidMount();
					});
				}

				/**
	    * Detect when the component is detached from the DOM tree.
	    * @protected
	    */

			}, {
				key: 'disconnectedCallback',
				value: function disconnectedCallback() {
					var _this8 = this;

					// update attached status
					this._componentAttached = false;

					// unmount timeout
					clearTimeout(this._unmountTimeout);
					this._unmountTimeout = setTimeout(function () {

						// will unmount
						_this8.componentWillUnmount();
						// wait next frame
						_fastdom2.default.clear(_this8._fastdomSetProp);
						_this8._fastdomSetProp = _this8.mutate(function () {
							// unmount only if the component is mounted
							if (!_this8._lifecycle.componentMount) return;
							// unmount
							_this8.componentUnmount();
							// did unmount
							_this8.componentDidUnmount();
							// update lifecycle
							_this8._lifecycle.componentWillMount = false;
							_this8._lifecycle.componentMount = false;
							_this8._lifecycle.componentDidUnmount = false;
						});
					}, this.props.unmountTimeout);
				}
			}, {
				key: 'detachedCallback',
				value: function detachedCallback() {
					this.disconnectedCallback();
				}

				/**
	    * Dispatch an event from the tag with namespaced event name
	    * This will dispatch actually two events :
	    * 1. {tagName}.{name} : example : s-datepicker.change
	    * 2. {name} 		   : example : change
	    *
	    * @param		{String} 		name 		The event name
	    * @param 		{Mixed} 		data 		Some data to attach to the event
	    */

			}, {
				key: 'dispatchComponentEvent',
				value: function dispatchComponentEvent(name) {
					var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					(0, _dispatchEvent2.default)(this, name, data);
					(0, _dispatchEvent2.default)(this, this.tagName.toLowerCase() + '.' + name, data);
				}

				/**
	    * Set a bunch of properties at once
	    * @param 			{Object} 		[props={}] 		An object of props to set
	    */

			}, {
				key: 'setProps',
				value: function setProps() {
					var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

					// set each props
					for (var key in props) {
						this.setProp(key, props[key]);
					}
					return this;
				}

				/**
	    * Set a property
	    * @param 			{String} 		prop 			The property name to set
	    * @param 			{Mixed} 		value 			The new property value
	    */

			}, {
				key: 'setProp',
				value: function setProp(prop, value) {

					// save the oldVal
					var oldVal = this.props[prop];

					// stop if same value
					if (oldVal === value) return;

					// set the prop
					this.props[prop] = value;
				}

				/**
	    * Get a property
	    * @param 		{String} 		prop 			The property name to get
	    * @return 		{Mixed} 						The property value or null
	    */

			}, {
				key: 'getProp',
				value: function getProp(prop) {
					return this.props[prop];
				}

				/**
	    * Handle new property
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    */

			}, {
				key: '_handleNewPropValue',
				value: function _handleNewPropValue(prop, newVal, oldVal) {
					var _this9 = this;

					// if the component is not mounted
					// we do nothing here...
					if (!this.isComponentMounted()) return;

					// create the stacks
					this._prevPropsStack[prop] = oldVal;
					this._nextPropsStack[prop] = newVal;

					// component will receive prop
					this.componentWillReceiveProp(prop, newVal, oldVal);

					// wait till next frame
					_fastdom2.default.clear(this._fastdomSetProp);
					this._fastdomSetProp = _fastdom2.default.mutate(function () {

						// create array version of each stacks
						var nextPropsArray = [],
						    prevPropsArray = [];
						for (var key in _this9._nextPropsStack) {
							var val = _this9._nextPropsStack[key];
							nextPropsArray.push({
								name: key,
								value: val
							});

							// handle physical props
							_this9._handlePhysicalProps(key, val);
						}
						for (var _key in _this9._prevPropsStack) {
							var _val = _this9._prevPropsStack[_key];
							prevPropsArray.push({
								name: _key,
								value: _val
							});
						}

						// call the will reveiveProps if exist
						if (_this9.componentWillReceiveProps) {
							_this9.componentWillReceiveProps(_this9._nextPropsStack, nextPropsArray);
						}

						// should component update
						if (_this9.shouldComponentUpdate && !_this9.shouldComponentUpdate(_this9._nextPropsStack, _this9._prevPropsStack)) return;

						// component will update
						_this9.componentWillUpdate(_this9._nextPropsStack, nextPropsArray);

						// render the component
						_this9.render();

						// component did update
						_this9.componentDidUpdate(_this9._prevPropsStack, prevPropsArray);
					});
				}

				/**
	    * Method called when the component will receive new props
	    * @param 		{String} 		prop 		The property name
	    * @param 		{Mixed} 		newVal 		The new property value
	    * @param 		{Mixed}			oldVal 		The old property value
	    * @example 	js
	    * componentWillReceiveProp(prop, newVal, oldVal) {
	    *  	switch(prop) {
	    *  		case ...
	    *    			// do something...
	    * 			break;
	    *  	}
	    * }
	    *
	    * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: 'componentWillReceiveProp',
				value: function componentWillReceiveProp(prop, newVal, oldVal) {}
				// do something


				/**
	    * Method that check if a property passed to the component has to be accepted or not.
	    * @param 		{String} 			prop 		The property name
	    * @return 		{Boolean} 						If true, the property will be accepted, if false, it will not be considered as a property
	    */

			}, {
				key: 'shouldAcceptComponentProp',
				value: function shouldAcceptComponentProp(prop) {
					return this.props[prop] !== undefined;
				}

				/**
	    * Check if component is mounted
	    * @return 			{Boolean} 			true if mounted, false if not
	    */

			}, {
				key: 'isComponentMounted',
				value: function isComponentMounted() {
					return this._lifecycle.componentMount;
				}

				/**
	    * Watch any data of the component
	    * @param 		{String} 		path 		The path from the component root to watch like "props.myCoolProp"
	    * @param 		{Function}		cb 			The callback to call when the item has changed
	    */

			}, {
				key: 'watch',
				value: function watch(path, cb) {
					this._sWatcher.watch(this, path, cb);
				}

				/**
	    * Initiate a new prop. This will add the propertyProxy on the new prop etc...
	    * @param 			{String} 			prop 			The property name to init
	    */

			}, {
				key: '_initNewProp',
				value: function _initNewProp(prop) {
					var _this10 = this;

					var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					if (value) {
						this.props[prop] = value;
					}
					(0, _propertyProxy2.default)(this.props, prop, {
						set: function set(value) {
							var oldVal = _this10.props[prop];
							// handle new prop value
							_this10._handleNewPropValue(prop, value, oldVal);
							// set the value
							return value;
						},
						enumarable: true
					}, false);
				}

				/**
	    * Handle physical props by setting or not the prop
	    * on the dom element as attribute
	    * @param 			{String} 			prop 			The property to handle
	    * @param 			{Mixed} 			value 			The property value
	    * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	    */

			}, {
				key: '_handlePhysicalProps',
				value: function _handlePhysicalProps(prop, value) {
					// check if is a physical prop to set it in the dom
					var physicalProps = this.physicalProps;
					if (physicalProps.indexOf(prop) !== -1) {
						// set the prop on the node
						if (value !== 0 && (value === false || value === 'null' || !value)) {
							this.removeAttribute(prop);
						} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
							this.setAttribute(prop, JSON.stringify(value));
						} else if (typeof value === 'function') {
							this.setAttribute(prop, 'fn');
						} else {
							this.setAttribute(prop, value);
						}
					}
				}

				/**
	    * Compute props by mixing settings with attributes presents on the component
	    */

			}, {
				key: '_initInitialAttributes',
				value: function _initInitialAttributes() {
					for (var i = 0; i < this.attributes.length; i++) {
						var attr = this.attributes[i];
						var attrCamelName = (0, _camelize2.default)(attr.name);
						// do not set if it's not an existing prop
						if (!this.shouldAcceptComponentProp(attrCamelName)) continue;
						// the attribute has no value but it is present
						// so we assume the prop value is true
						if (!attr.value) {
							this.props[attrCamelName] = true;
							continue;
						}
						// cast the value
						this.props[attrCamelName] = (0, _autoCast2.default)(attr.value);
					}

					// handle physicalProps
					for (var key in this.props) {
						var value = this.props[key];
						// handle physical props
						this._handlePhysicalProps(key, value);
					}
				}

				/**
	    * Mutate the dom using an optimize requestAnimationFrame technique
	    * @param 		{Function} 		cb 			The callback to exexute
	    */

			}, {
				key: 'mutate',
				value: function mutate(cb) {
					return _fastdom2.default.mutate(cb);
				}

				/**
	    * Set a class that will be construct with the componentNameDash,
	    * an optional element and modifier
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentClassName',
				value: function componentClassName() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					// if the method is BEM
					var sel = this.componentNameDash;
					if (element) {
						sel += '__' + element;
					}
					if (modifier) {
						sel += '--' + modifier;
					}
					if (state) {
						sel += '--' + state;
					}
					return sel;
				}

				/**
	    * Get a component selector class built with the passed element, modifier and state parameters
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{String} 						The generated class
	    */

			}, {
				key: 'componentSelector',
				value: function componentSelector() {
					var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
					var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

					var sel = this.componentClassName(element, modifier, state);
					sel = ('.' + sel).replace(' ', '.');
					return sel;
				}

				/**
	    * Check if the passed element has the component class generated by the element and modifier argument
	    * @param 	{HTMLElement} 	elm 				The element to check
	    * @param 	{String} 		[element=null] 		The element name
	    * @param 	{String} 		[modifier=null] 	The modifier name
	    * @param 	{String} 		[state=null] 		The state name
	    * @return 	{Boolean} 							The check result
	    */

			}, {
				key: 'hasComponentClass',
				value: function hasComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// generate the class
					var cls = this.componentSelector(element, modifier, state);
					var _cls = cls.split('.');
					for (var i = 0; i < _cls.length; i++) {
						var cl = _cls[i];
						if (cl && cl !== '') {
							if (!elm.classList.contains(cl)) {
								return false;
							}
						}
					}
					return true;
				}

				/**
	    * Add a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 			The component itself
	    */

			}, {
				key: 'addComponentClass',
				value: function addComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this11 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this11.addComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this11.mutate(function () {
								elm.classList.add(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}

				/**
	    * Remove a class on the passed element that will be construct with the componentNameDash,
	    * an optional element, modifier and state
	    * @param 	{String} 	[element=null] 		The element name
	    * @param 	{String} 	[modifier=null] 	The modifier name
	    * @param 	{String} 	[state=null] 		The state name
	    * @return 	{SComponent}} 					The component itself
	    */

			}, {
				key: 'removeComponentClass',
				value: function removeComponentClass(elm) {
					var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

					var _this12 = this;

					var modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
					var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

					// if is an array
					if (elm instanceof Array || elm instanceof NodeList) {
						[].forEach.call(elm, function (el) {
							_this12.removeComponentClass(el, element, modifier, state);
						});
						return this;
					}

					// get the component class
					var cls = this.componentSelector(element, modifier, state);
					// loop on each classes to add
					cls.split('.').forEach(function (cl) {
						if (cl && cl !== '') {
							_this12.mutate(function () {
								elm.classList.remove(cl);
							});
						}
					});
					// return the instance to maintain chainability
					return this;
				}
			}]);

			return _class2;
		}(superclass);
	});

	// Export the mixin class
	exports.default = SWebComponentMixin;

/***/ },
/* 428 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = autoCast;
	/**
	 * Auto cast the string into the correct variable type
	 */
	function autoCast(string) {
		// printed object
		if (string === '[object Object]') return null;
		// boolean values
		if (string === 'false' || string === 'true' || string === 'undefined' || string === 'null' || !isNaN(string)) {
			return eval(string);
		}
		// array
		if (typeof string === 'string' && string.substr(0, 1) === '[') {
			var val = eval(string);
			if (val instanceof Array) return val;
		}
		// parse json
		if (typeof string === 'string' && string.substr(0, 1) === '{') {
			return eval('(' + string + ')');
		}
		// return the string if nothing can be casted
		return string;
	}

/***/ },
/* 429 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = camelize;
	/**
	 * Camelize a string
	 */
	function camelize(text) {
		var res = '';
		res = text.replace(/(?:^|[-_])(\w)/g, function (_, c) {
			return c ? c.toUpperCase() : '';
		});
		res = res.substr(0, 1).toLowerCase() + res.slice(1);
		return res.trim();
	}

/***/ },
/* 430 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = upperFirst;
	/**
	 * Upper first
	 */
	function upperFirst(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = dispatchEvent;

	var _SEvent = __webpack_require__(432);

	var _SEvent2 = _interopRequireDefault(_SEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Helper to quickly display an event with some optional data attached to it
	 *
	 * @name 		dispatchEvent
	 * @param 		{HTMLElement} 					target  		The element to dispatch the event from
	 * @param 		{String} 						name 			The event name to dispatch
	 * @param 		{Mixed} 						data 			The data to attache to the event
	 *
	 * @example  	js
	 * import dispatchEvent from 'sugarcss/js/dom/dispatchEvent'
	 * dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {
	 * 		var1 : 'value1'
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function dispatchEvent(target, name) {
	  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  // create new event
	  var e = new _SEvent2.default(name, {
	    detail: data,
	    bubbles: true,
	    cancelable: true
	  });
	  target.dispatchEvent(e);
	}

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _customEvent = __webpack_require__(113);

	var _customEvent2 = _interopRequireDefault(_customEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _customEvent2.default;

	/**
	 * @constructor
	 * @param  		{String} 	name 		The event name
	 * @param 		{Object} 	settings 	The event settings
	 */

	/**
	 * Set if the event is cancelable or not
	 * @setting
	 * @name 		cancelable
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Set if the event will bubble or not
	 * @setting
	 * @name 		bubbles
	 * @type 		{Boolean}
	 * @default 	true
	 */

	/**
	 * Pass an object that will be sent with the event
	 * @setting
	 * @name 		detail
	 * @type 		{Object}
	 * @default 	null
	 */
	/**
	 * @name 		SEvent
	 * Proxy class to create custom events that can be dispatched
	 * through the standard dispatch method on any HTMLElement
	 *
	 * @example 	js
	 * let myEvent = new SEvent('myCoolEvent', {
	 * 		cancelable : true,
	 * 		bubbles : false,
	 * 		detail : {
	 * 			// some datas to send with the event
	 * 		}
	 * });
	 * // dispatch the event from an HTMLElement
	 * myHTMLElement.dispatch(myEvent);
	 *
	 * @see 		https://www.npmjs.com/package/customevent
	 * @author 		Olivier Bossel<olivier.bossel@gmail.com>
	 */

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenInViewport;

	var _whenVisible = __webpack_require__(434);

	var _whenVisible2 = _interopRequireDefault(_whenVisible);

	var _isInViewport = __webpack_require__(437);

	var _isInViewport2 = _interopRequireDefault(_isInViewport);

	var _throttle = __webpack_require__(438);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _closest = __webpack_require__(439);

	var _closest2 = _interopRequireDefault(_closest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is in the viewport
	 *
	 * @name 		whenInViewport
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is in the viewport
	 * @return 		(Promise) 								The promise that will be resolved when the element is in the viewport
	 *
	 * @example 	js
	 * import whenInViewport from 'sugarcss/js/dom/whenInViewport'
	 * whenInViewport(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that has entered the viewport...
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenInViewport(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// try to get the closest element that has an overflow
			var scrollContainerElm = document;
			if (!elm._inViewportContainer) {
				var overflowContainer = (0, _closest2.default)(elm, '[data-in-viewport-container]');
				if (overflowContainer) {
					scrollContainerElm = overflowContainer;
					elm._inViewportContainer = overflowContainer;
				}
			} else {
				scrollContainerElm = elm._inViewportContainer;
			}

			var isInViewport = false,
			    isVisible = false,
			    _cb = function _cb() {
				if (isVisible && isInViewport) {
					scrollContainerElm.removeEventListener('scroll', checkViewport);
					window.removeEventListener('resize', checkViewport);
					if (cb) cb(elm);
					resolve(elm);
				}
			};
			var checkViewport = (0, _throttle2.default)(function (e) {
				isInViewport = (0, _isInViewport2.default)(elm, 50);
				_cb();
			}, 100);

			// detect when visible
			(0, _whenVisible2.default)(elm).then(function (elm) {
				isVisible = true;
				_cb();
			});

			// listen for resize
			scrollContainerElm.addEventListener('scroll', checkViewport);
			window.addEventListener('resize', checkViewport);
			setTimeout(function () {
				checkViewport(null);
			});
		});
	}

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = whenVisible;

	var _isVisible = __webpack_require__(435);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	var _closestNotVisible = __webpack_require__(436);

	var _closestNotVisible2 = _interopRequireDefault(_closestNotVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Monitor an HTMLElement to be notified when it is visible
	 *
	 * @name 		whenVisible
	 * @param 		{HTMLElement} 				elm 		The element to monitor
	 * @param 		{Function} 					[cb=null] 	An optional callback to call when the element is visible
	 * @return 		(Promise) 								The promise that will be resolved when the element is visible
	 *
	 * @example 	js
	 * import whenVisible from 'sugarcss/js/dom/whenVisible'
	 * whenVisible(myCoolHTMLElement).then((elm) => {
	 * 		// do something with your element that is now visible
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function whenVisible(elm) {
		var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {

			// variables
			var isSelfVisible = false,
			    areParentsVisible = false,
			    closestNotVisible = null,
			    selfObserver = null,
			    parentObserver = null;

			var _cb = function _cb() {
				if (isSelfVisible && areParentsVisible) {
					// process callbacks
					if (cb) cb(elm);
					resolve(elm);
					// remove the event listeners
					elm.removeEventListener('transitionend', _eventCb);
					elm.removeEventListener('animationstart', _eventCb);
					elm.removeEventListener('animationend', _eventCb);
					// remove the event listeners
					if (closestNotVisible) {
						closestNotVisible.removeEventListener('transitionend', _eventCb);
						closestNotVisible.removeEventListener('animationstart', _eventCb);
						closestNotVisible.removeEventListener('animationend', _eventCb);
					}
				}
			};

			// function called on each transitionend, start, etc...
			var _eventCb = function _eventCb(e) {
				// wait just a little time to check again
				setTimeout(function () {
					if (e.target === elm) {
						if ((0, _isVisible2.default)(elm)) {
							isSelfVisible = true;
							if (selfObserver && selfObserver.disconnect) {
								selfObserver.disconnect();
							}
							// remove the event listeners
							elm.removeEventListener('transitionend', _eventCb);
							elm.removeEventListener('animationstart', _eventCb);
							elm.removeEventListener('animationend', _eventCb);
						}
					} else if (e.target === closestNotVisible) {
						if ((0, _isVisible2.default)(closestNotVisible)) {
							areParentsVisible = true;
							if (parentObserver && parentObserver.disconnect) {
								parentObserver.disconnect();
							}
							// remove the event listeners
							closestNotVisible.removeEventListener('transitionend', _eventCb);
							closestNotVisible.removeEventListener('animationstart', _eventCb);
							closestNotVisible.removeEventListener('animationend', _eventCb);
						}
					}
					// callback
					_cb();
				});
			};

			// check if element itself is not visible
			if (!(0, _isVisible2.default)(elm)) {
				selfObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								isSelfVisible = true;
								// callback
								_cb();
								// stop observe
								selfObserver.disconnect();
							}
						}
					});
				});
				selfObserver.observe(elm, { attributes: true });

				// listen for animationstart to check if the element is visible
				elm.addEventListener('animationstart', _eventCb);
				elm.addEventListener('animationend', _eventCb);
				elm.addEventListener('transitionend', _eventCb);
			} else {
				isSelfVisible = true;
			}

			// get the closest not visible element
			// if found, we monitor it to check when it is visible
			closestNotVisible = (0, _closestNotVisible2.default)(elm);
			if (closestNotVisible) {
				parentObserver = new MutationObserver(function (mutations) {
					mutations.forEach(function (mutation) {
						// check that is the style whos changed
						if (mutation.attributeName === 'style' || mutation.attributeName === 'class') {
							// check if is visible
							if ((0, _isVisible2.default)(mutation.target)) {
								// update
								areParentsVisible = true;
								// callback
								_cb();
								// stop observe
								parentObserver.disconnect();
							}
						}
					});
				});
				parentObserver.observe(closestNotVisible, { attributes: true });

				// listen for animationstart to check if the element is visible
				closestNotVisible.addEventListener('animationstart', _eventCb);
				closestNotVisible.addEventListener('animationend', _eventCb);
				closestNotVisible.addEventListener('transitionend', _eventCb);
			} else {
				areParentsVisible = true;
			}

			// callback
			_cb();
		});
	}

/***/ },
/* 435 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isVisible;
	/**
	 * Check if the passed HTMLElement is visible or not.
	 * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none
	 *
	 * @name 		isVisible
	 * @param 		{HTMLElement} 				elm  		The element to check
	 * @return 		{Boolean								If the element is visible or not
	 *
	 * @example  	js
	 * import isVisible from 'sugarcss/js/dom/isVisible'
	 * if (isVisible(myCoolHTMLElement) {
	 * 		// i'm visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isVisible(elm) {

	  // assume that the script tag is always visible
	  if (elm.nodeName.toLowerCase() === 'script') return true;

	  // if no offset parent
	  // mean that the element is not visible
	  // if (elm.offsetParent === null) return false;

	  // get style
	  var style = window.getComputedStyle(elm, null),
	      opacity = style['opacity'],
	      visibility = style['visibility'],
	      display = style['display'];
	  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;
	}
	window.__isVisible = isVisible;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestNotVisible;

	var _isVisible = __webpack_require__(435);

	var _isVisible2 = _interopRequireDefault(_isVisible);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that is not visible.
	 * Not visible mean that has either an opacity to 0, a visibility to hidden or a display to none
	 *
	 * @name 		closestNotVisible
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'
	 * const closestElm = closest(myCoolElement);
	 * if (closestElm) {
	 * 		// we have found en element is not visible
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closestNotVisible(elm) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (!(0, _isVisible2.default)(elm)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return false;
	}
	window.__closestNotVisible = closestNotVisible;

/***/ },
/* 437 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInViewport;
	/**
	 * Check if the passed HTMLElement is in the viewport or not
	 *
	 * @name 		isInViewport
	 * @param 		{HTMLElement} 				elm  		The element to insert
	 * @param 		{Object} 					offset 		An object of top, right, bottom and left offset used to detect the status
	 * @return 		{Boolean								If the element is in the viewport or not
	 *
	 * @example  	js
	 * import isInViewport from 'sugarcss/js/dom/isInViewport'
	 * if (isInViewport(myCoolHTMLElement) {
	 * 		// i'm in the viewport
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function isInViewport(elm) {
	  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;

	  var containerHeight = window.innerHeight || document.documentElement.clientHeight;
	  var containerWidth = window.innerWidth || document.documentElement.clientWidth;
	  var rect = elm.getBoundingClientRect();
	  return rect.top - containerHeight - offset <= 0 && rect.bottom + offset >= 0 && rect.left - containerWidth - offset <= 0 && rect.right + offset >= 0;
	}
	window.__isInViewport = isInViewport;

/***/ },
/* 438 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = throttle;
	/**
	 * This utils function allows you to make sure that a function that will normally be called
	 * several times, for example during a scroll event, to be called once each threshhold time
	 *
	 * @name 			throttle
	 * @example 		js
	 * const myThrottledFn = throttle(() => {
	 * 		// my function content that will be
	 * 		// executed only once each second
	 * }, 1000);
	 *
	 * document.addEventListener('scroll', (e) => {
	 * 		// call my throttled function
	 * 		myThrottledFn();
	 * });
	 *
	 * @author 			Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function throttle(fn, threshhold) {
	    threshhold || (threshhold = 250);
	    var last, deferTimer;
	    return function () {
	        var context = this;

	        var now = +new Date(),
	            args = arguments;
	        if (last && now < last + threshhold) {
	            // hold on to it
	            clearTimeout(deferTimer);
	            deferTimer = setTimeout(function () {
	                last = now;
	                fn.apply(context, args);
	            }, threshhold);
	        } else {
	            last = now;
	            fn.apply(context, args);
	        }
	    };
	}

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closest;

	var _matches = __webpack_require__(440);

	var _matches2 = _interopRequireDefault(_matches);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Go up the dom three to find the first element that matches the passed selector
	 *
	 * @name 		closest
	 * @param 		{HTMLElement} 					elm  		The element to start on
	 * @param 		{String|Function} 				selector 	A css selector to search for or a check function that will be used
	 * @return 		{HTMLElement} 								The element found or null
	 *
	 * @example  	js
	 * import closest from 'sugarcss/js/dom/closest'
	 * const closestElm = closest(myCoolElement, '.my-cool-class');
	 * if (closestElm) {
	 * 		// we have found en element that matches the selector
	 * }
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function closest(elm, selector) {
	  elm = elm.parentNode;
	  while (elm && elm != document) {
	    if (typeof selector === 'function') {
	      if (selector(elm)) return elm;
	    } else if (typeof selector === 'string' && (0, _matches2.default)(elm, selector)) {
	      return elm;
	    }
	    elm = elm.parentNode;
	  }
	  return null;
	}
	window.__closest = closest;

/***/ },
/* 440 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = matches;
	/**
	 * Polyfill for the Element.matches function
	 *
	 * @name 		matches
	 * @param 		{HTMLElement} 			elm  			The element to check
	 * @param 		{String} 				selector 		The selector to check on the element
	 * @return 		{Boolean} 								If the element match the selector or not
	 *
	 * @example  	js
	 * import matches from 'sugarcss/js/dom/matches'
	 * if (matches(myCoolHTMLElement, '.my-cool-css-selector')) {
	 * 		// the element match the selector
	 * }
	 *
	 * @see 		https://developer.mozilla.org/en/docs/Web/API/Element/matches
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function matches(el, selector) {
	  if (el.nodeName == '#comment' || el.nodeName == '#text') {
	    return false;
	  }
	  var p = Element.prototype;
	  var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
	    return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
	  };
	  return f.call(el, selector);
	}

/***/ },
/* 441 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prependChild;
	/**
	 * Prepend an HTMLElement into another HTMLElement
	 *
	 * @name 		prependChild
	 * @param 		{HTMLElement} 				elm  		The element to prepend
	 * @param 		{HTMLElement} 				refElm 		The element in which to prepend the new element
	 * @example  	js
	 * import prependChild from 'sugarcss/js/dom/prependChild'
	 * prependChild(myElementToInsert, theReferenceElement);
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function prependChild(elm, refElm) {
	  if (!refElm.firstChild) {
	    refElm.appendChild(elm);
	  } else {
	    refElm.insertBefore(elm, refElm.firstChild);
	  }
	}

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constructorName = __webpack_require__(443);

	var _constructorName2 = _interopRequireDefault(_constructorName);

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	var _set2 = __webpack_require__(160);

	var _set3 = _interopRequireDefault(_set2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * @name 		SWatcher
	 * This class allows you to easily monitor some object properties and get the new and old value of it
	 *
	 * @example 	js
	 * // create the watcher instance
	 * const watcher = new SWatcher();
	 *
	 * // object to watch
	 * let myObject = {
	 * 		title : 'Hello World'
	 * };
	 *
	 * // watch the object
	 * watcher.watch(myObject, 'title', (newVal, oldVal) => {
	 *  	// do something when the title changes
	 * });
	 *
	 * // update the title
	 * myObject.title = 'Hello Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	var SWatcher = function () {

		/**
	  * @constructor
	  */
		function SWatcher() {
			_classCallCheck(this, SWatcher);

			this._watchStack = {};
		}

		/**
	  * Destroy the watcher
	  */


		// static setters = {
		// 	CSSStyleDeclaration : (obj, property, value) => {
		// 		obj.setProperty(property, value);
		// 	}
		// }

		/**
	  * Watch stack
	  * @type 		{Object}
	  */


		_createClass(SWatcher, [{
			key: 'destroy',
			value: function destroy() {}
			// @TODO watcher destroy implementation


			/**
	   * Internal implementation of the defineProp
	   * @param 		{Object} 	obj 		The object to watch
	   * @param 		{String} 	property 	The property of the object to watch
	   * @param 		{Mixed} 	value 		The initial value of the property
	   * @param 		{String} 	objPath 	The object property path to watch
	   */

		}, {
			key: '_defineProp',
			value: function _defineProp(obj, property, value, objPath) {
				var _this2 = this;

				var descriptor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;


				// do not define multiple time the description
				if (this._watchStack[objPath]) return;

				// store the current value
				var val = value;
				var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

				// custom setter check
				var _set = function _set(value) {
					// check if have a custom setter for this object
					// if (customSetter) {
					// 	customSetter(obj, property, value);
					// 	val = value;
					// }
					// descriptor
					if (currentDescriptor && currentDescriptor.set) {
						var ret = currentDescriptor.set(value);
						if (ret) {
							val = ret;
						} else {
							val = currentDescriptor.get();
						}
					} else {
						val = value;
					}

					// apply the proxy for arrays, etc...
					val = _this2._applyProxy(val, objPath, function (newVal) {
						val = newVal;
					});
				};

				// get the setter
				// let customSetter;
				// for (let name in SWatcher.setters) {
				// 	if (__constructorName(obj) === name) {
				// 		customSetter = SWatcher.setters[name];
				// 		break;
				// 	}
				// }

				// set the value
				_set(value);

				// make sure we have the good currentDescriptor
				var d = Object.getOwnPropertyDescriptor(obj, property);
				Object.defineProperty(obj, property, {
					get: function get() {
						var _val = val;
						if (currentDescriptor && currentDescriptor.get) {
							_val = currentDescriptor.get();
						}
						if (descriptor && descriptor.get) {
							_val = descriptor.get(_val);
						}
						return _val;
					},
					set: function set(v) {
						var oldValue = val;
						if (descriptor && descriptor.set) {
							v = descriptor.set(v);
						}
						// internal set to use the good setter
						_set(v);
						// _notify of new update
						_this2._notify(objPath, val, oldValue);
					},
					configurable: descriptor && descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
					enumarable: descriptor && descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
				});
			}

			/**
	   * Override some array methods to be able to notify of changes
	   * @param 		{Array} 	array 			The array to process
	   * @param 		{Array} 	methods 		The methods to override
	   * @param 		{String} 	objPath 		The object property path to watch
	   * @param 		{Function} 	setValueCb 		A callback function that will set the updated value
	   */

		}, {
			key: '_overrideArrayMethod',
			value: function _overrideArrayMethod(array, methods, objPath, setValueCb) {
				var _this = this;

				// grab the old value
				var oldVal = array.slice(0);

				// loop on each methods to override
				methods.forEach(function (method) {
					array[method] = function () {
						// array items info object
						var updateInfo = {
							type: Array,
							method: method
						};
						if (method === 'push' || method === 'unshift' || method === 'concat') {
							updateInfo.addedItems = Array.prototype.slice.call(arguments);
						} else if (method === 'pop') {
							updateInfo.removedItems = [oldVal[oldVal.length - 1]];
						} else if (method === 'shift') {
							updateInfo.removedItems = [oldVal[0]];
						}
						// @TODO Check and add missed methods to watch array
						// apply the push
						var ret = Array.prototype[method].apply(this, arguments);
						// set value callback
						setValueCb(this);
						// _notify
						_this._notify(objPath, this, oldVal, updateInfo);
						// return the new value
						return ret;
					};
				});
			}

			/**
	   * Apply a proxy on the variable to detect changes
	   * on arrays, etc...
	   * @param 		{Mixed} 	value 		The value on which to apply the proxy
	   * @param 		{String} 	objPath 	The object property path to watch
	   * @param 		{Function} 	setValueCb 	A function that will be responsible to set the new value intarnally
	   * @return 		{Mixed} 				Return the value
	   */

		}, {
			key: '_applyProxy',
			value: function _applyProxy(value, objPath, setValueCb) {
				// if is an array
				if (value instanceof Array) {
					// override methods
					this._overrideArrayMethod(value, ['push', 'splice', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'concat'], objPath, setValueCb);
				}
				return value;
			}

			/**
	   * Watch something on an object
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: 'watch',
			value: function watch(object, path, cb) {
				var _this3 = this;

				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// split the path by ',' to watch multiple properties
				if (typeof path === 'string') {
					path = path.split(',');
				}
				if (!path instanceof Array) {
					throw "The 'path' parameter has to be a string or an array...";
				}
				// loop on each path to watch
				path.forEach(function (p) {
					_this3._watch(object, p.trim(), cb, descriptor);
				});
			}

			/**
	   * Internal watch$
	   * @param 		{Object} 		object 		The object to watch
	   * @param 		{String} 		path 		The property path to watch on the object
	   * @param 		{Function} 		cb 			The callback called when the property is updated
	   */

		}, {
			key: '_watch',
			value: function _watch(object, path, cb) {
				var descriptor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				// check if the path parameter has already a descriptor
				var split = path.split('.');
				var obj = object;
				var property = null;
				if (split.length > 1) {
					property = split.pop();
					obj = (0, _get3.default)(object, split.join('.'));
				} else {
					property = split[0];
				}
				var currentValue = null;
				currentValue = (0, _get3.default)(object, path);

				// if is undefined, create the value at null
				if (obj === undefined || currentValue === undefined) {
					(0, _set3.default)(obj, path, null);
					// _set(this, split.join('.'),null);
					// throw `It's not possible to watch the property ${path} cause it does not exist...`;
				};

				// define the property proxy
				this._defineProp(obj, property, currentValue, path, descriptor);

				// register new watch
				if (!this._watchStack[path]) {
					this._watchStack[path] = [];
				}
				this._watchStack[path].push(cb);
			}

			/**
	   * Tell that something has changed
	   * @param 		{String} 		path 		The object property path that has been updated
	   * @param 		{Mixed} 		newValue 	The new property value
	   * @param 		{Mixed} 		oldValue 	The old property value
	   * @param 		{Object} 		[updateInfo=null] 	An object that add information about the update like addedItems for array, etc...
	   */

		}, {
			key: '_notify',
			value: function _notify(path, newValue, oldValue) {
				var updateInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

				if (this._watchStack[path] !== undefined && newValue !== oldValue) {
					this._watchStack[path].forEach(function (cb) {
						cb(newValue, oldValue, updateInfo);
					});
				}
			}
		}]);

		return SWatcher;
	}();

	exports.default = SWatcher;

/***/ },
/* 443 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = constructorName;
	/**
	 * Return the constructor name of the passed object
	 *
	 * @name 		constructorName
	 * @param 		{Object} 			obj 		The object to get the constructor name from
	 * @return 		{String}						The constructor name
	 *
	 * @example 	js
	 * class MyCoolClass {
	 * 		// class implementation...
	 * }
	 * const myObj = new MyCoolClass();
	 * console.log(constructorName(myObj)); => MyCoolClass
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function constructorName(obj) {
	  var funcNameRegex = /function (.{1,})\(/;

	  var res = funcNameRegex.exec(obj.toString());
	  if (res && res[1]) return res[1];

	  var results = funcNameRegex.exec(obj.constructor.toString());
	  return results && results.length > 1 ? results[1] : "";
	}

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = propertyProxy;

	var _get2 = __webpack_require__(125);

	var _get3 = _interopRequireDefault(_get2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a proxy for and object property.
	 * This gives you the possibility to process the data of the property
	 * when it is getted or setted.
	 *
	 * @name 		propertyProxy
	 * @param 		{Object} 		obj 			The object on which to create the proxy
	 * @param 		{String} 		property 		The property name that will be proxied
	 * @param 		{Object} 		descriptor 		A descriptor object that contains at least a get or a set method, or both
	 * @param 		{Boolean} 		applySetterAtStart 	If need to apply the descriptor setter directly on the current value or not
	 *
	 * @example 	js
	 * const myObject = {
	 * 		title : 'World'
	 * };
	 * // create the proxy
	 * propertyProxy(myObject, 'title', {
	 * 		get : (value) => {
	 * 			return `Hello ${value}`;
	 * 		},
	 * 		set : (value) => {
	 * 			return `Youhou ${value}`;
	 * 		}
	 * });
	 * console.log(myObject.title) => 'Hello World';
	 * myObject.title = 'Universe';
	 * console.log(myObject.title) => 'Hello Youhou Universe';
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function propertyProxy(obj, property, descriptor) {
		var applySetterAtStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;


		// store the current value
		var val = (0, _get3.default)(obj, property);
		var currentDescriptor = Object.getOwnPropertyDescriptor(obj.prototype || obj, property);

		// custom setter check
		var _set = function _set(value) {

			if (descriptor.set) {
				value = descriptor.set(value);
			}

			// descriptor
			if (currentDescriptor && currentDescriptor.set) {
				var ret = currentDescriptor.set(value);
				if (ret) {
					val = ret;
				} else {
					val = currentDescriptor.get();
				}
			} else {
				val = value;
			}
		};

		// apply the setter if needed
		if (applySetterAtStart) _set(val);

		// make sure we have the good descriptor
		var d = Object.getOwnPropertyDescriptor(obj, property);
		Object.defineProperty(obj, property, {
			get: function get() {
				var _val = val;
				if (descriptor.get) {
					_val = descriptor.get(_val);
				}
				if (currentDescriptor && currentDescriptor.get) {
					_val = currentDescriptor.get();
				}
				return _val;
			},
			set: function set(v) {
				// const oldValue = val;
				// internal set to use the good setter
				_set(v);
				// notify of new update
				// this.notify(objPath, val, oldValue);
			},
			configurable: descriptor.configurable !== undefined ? descriptor.configurable : currentDescriptor && currentDescriptor.configurable !== undefined ? currentDescriptor.configurable : false,
			enumarable: descriptor.enumarable !== undefined ? descriptor.enumarable : currentDescriptor && currentDescriptor.enumarable !== undefined ? currentDescriptor.enumarable : true
		});

		// return the value
		return val;
	}

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(eOrElm) {
		var field = eOrElm.target ? eOrElm.target : eOrElm;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
			case 'SELECT':
				_fastdom2.default.mutate(function () {
					if (field.type && (field.type === 'checkbox' || field.type === 'radio')) return;
					if (field.value && !field.hasAttribute('has-value')) {
						field.setAttribute('has-value', true);
						field.removeAttribute('empty');
					} else if (!field.value) {
						field.removeAttribute('has-value');
						field.removeAttribute('value');
						if (!field.hasAttribute('empty')) {
							field.setAttribute('empty', true);
						}
					}
					if (!field.hasAttribute('dirty')) {
						field.setAttribute('dirty', true);
					}
				});
				break;
		}
	}

	function handleFormSubmitOrReset(e) {
		// loop on each form elements
		[].forEach.call(e.target.elements, function (field) {
			// reset the field attributes
			handleInputAttributes(field);
			// stop here if is a submit
			if (e.type === 'submit') return;
			// remove dirty attribute
			_fastdom2.default.mutate(function () {
				field.removeAttribute('dirty');
			});
		});
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);
	document.addEventListener('reset', handleFormSubmitOrReset);
	document.addEventListener('submit', handleFormSubmitOrReset);

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _fastdom = __webpack_require__(110);

	var _fastdom2 = _interopRequireDefault(_fastdom);

	var _dispatchEvent = __webpack_require__(431);

	var _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleInputAttributes(e) {
		var field = e.target ? e.target : e;
		if (!field || !field.tagName) return;
		switch (field.tagName) {
			case 'INPUT':
			case 'TEXTAREA':
				_fastdom2.default.mutate(function () {
					if (e.keyCode) {
						switch (e.keyCode) {
							case 13:
								// enter
								if (field.hasAttribute('onenter')) {
									eval(field.getAttribute('onenter'));
									(0, _dispatchEvent2.default)(field, 'onenter');
								}
								break;
							case 27:
								if (field.hasAttribute('onescape')) {
									eval(field.getAttribute('onescape'));
									(0, _dispatchEvent2.default)(field, 'onescape');
								}
								break;
						}
					}
				});
				break;
		}
	}

	document.addEventListener('change', handleInputAttributes);
	document.addEventListener('keyup', handleInputAttributes);

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _imageLoaded = __webpack_require__(448);

	var _imageLoaded2 = _interopRequireDefault(_imageLoaded);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.body.addEventListener('load', function (e) {
		if (!e.target.tagName) return;
		if (e.target.hasAttribute('loaded')) return;
		e.target.setAttribute('loaded', true);
	}, true);
	[].forEach.call(document.querySelectorAll('img'), function (img) {
		(0, _imageLoaded2.default)(img).then(function (img) {
			if (img.hasAttribute('loaded')) return;
			img.setAttribute('loaded', true);
		});
	});

/***/ },
/* 448 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = imageLoaded;
	/**
	 * Wait until the passed image is fully loaded
	 *
	 * @name 		imageLoaded
	 * @param 		{HTMLImageElement} 			img  		The image to check the loading state
	 * @param 		{Function}					[cb=null] 	An optional callback to call
	 * @return 		{Promise} 								The promise that will be resolved
	 *
	 * @example  	js
	 * import imageLoaded from 'sugarcss/js/dom/imageLoaded'
	 * imageLoaded(myCoolHTMLImageElement).then((img) => {
	 * 		// do something when the image is loaded
	 * });
	 *
	 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
	 */
	function imageLoaded(img) {
		var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		return new Promise(function (resolve, reject) {
			// check if image is already loaded
			if (img.hasAttribute('src') && img.complete) {
				// resolve promise
				resolve(img);
				// call the callback if exist
				callback && callback(img);
			} else {
				// wait until loaded
				img.addEventListener('load', function (e) {
					// resolve the promise
					resolve(img);
					// callback if exist
					callback && callback(img);
				});
				// listen for error
				img.addEventListener('error', function (e) {
					// reject
					reject(e);
				});
			}
		});
	}

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a};!function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports={init:b.init,destroy:b.destroy}:a.ityped=b}(this,function(a){function b(a){var b=a;return b.strings=a.strings||["Put your string here...","and Enjoy!"],b.typeSpeed=a.typeSpeed||100,b.backSpeed=a.backSpeed||50,b.backDelay=a.backDelay||500,b.startDelay=a.startDelay||500,b.showCursor=a.showCursor,b.loop=a.loop||!1,void 0===b.showCursor&&(b.showCursor=!0),Promise.resolve(b)}function c(a,c){a="string"==typeof a?document.querySelector(a):a,b(c).then(function(b){m=b,a._props=m,m.showCursor&&d(a,m.cursorChar||"|"),e(a)})}function d(a,b){var c=n.cloneNode();a.insertAdjacentElement("afterend",c),c.textContent=b}function e(a){l(a._props.strings,function(b,c,d){var e=a._props.typeSpeed*b.length-1;a._props.backSpeed<a._props.typeSpeed?e-=(a._props.typeSpeed-a._props.backSpeed)*b.length:a._props.backSpeed>a._props.typeSpeed&&(e+=(a._props.backSpeed-a._props.typeSpeed)*b.length);var f=this.async(),g=a._props.strings.length;h(a,b,c,g).then(function(){setTimeout(function(){f()},e)})},function(){a._props.loop&&e(a)})}function f(a,b){return new Promise(function(c,d){for(var e=0,f=0;f<b.length;f++)!function(d){var f=d,h=b.length;setTimeout(function(d){g(a,b.charAt(f)),++e===h-1&&c()},a._props.typeSpeed*d)}(f)})}function g(a,b){a.innerHTML+=b}function h(a,b,c,d){return new Promise(function(e,g){f(a,b).then(function(){setTimeout(function(){j(a,b,c,d).then(function(){setTimeout(function(){e()},a._props.startDelay)})},a._props.backDelay)})})}function i(a,b,c,d){for(var e=c;e>0;e--)!function(e){var f=e,g=c;setTimeout(function(e){a.innerHTML=b.substring(0,c-f),g--,1===f&&d()},a._props.backSpeed*e)}(e)}function j(a,b,c,d){return new Promise(function(e,f){var g=b.length;c+1===d?a._props.loop?a._props.loop&&i(a,b,g,e):(void 0!==a._props.onFinished&&"function"==typeof a._props.onFinished&&a._props.onFinished(),a.innerHTML=b):c+1!==d&&i(a,b,g,e)})}function k(a){a._props.onFinished=function(){}}var l=function(a,b,c){var d=-1,e=a.length>>>0;!function f(g){var h,i=g===!1;do{++d}while(!(d in a)&&d!==e);if(i||d===e)return void(c&&c(!i,a));g=b.call({async:function(){return h=!0,f}},a[d],d,a),h||f(g)}()},m=void 0,n=document.createElement("span");return n.classList.add("ityped-cursor"),n.textContent="|",{init:c,destroy:k}}());

/***/ }
/******/ ]);